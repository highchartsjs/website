0:[[["",{"children":["(main)",{"children":["demo",{"children":[["demo","maps/data-class-two-ranges/sand-signika","c"],{"children":["__PAGE__?{\"demo\":[\"maps\",\"data-class-two-ranges\",\"sand-signika\"]}",{}]}]}]},"$undefined","$undefined",true]}],"$L1",[[],["$L2",null]]]]
3:HL["/_next/static/css/b2e0b431b62130d6.css",{"as":"style"}]
4:HL["/_next/static/css/621fda290094023d.css",{"as":"style"}]
5:I{"id":"9631","chunks":["272:static/chunks/webpack-0d6f19481046fd3b.js","509:static/chunks/54cd117c-0de4f9b009705f45.js","111:static/chunks/111-7e9f7f1a63948fbf.js"],"name":"","async":false}
6:I{"id":"2781","chunks":["272:static/chunks/webpack-0d6f19481046fd3b.js","509:static/chunks/54cd117c-0de4f9b009705f45.js","111:static/chunks/111-7e9f7f1a63948fbf.js"],"name":"","async":false}
7:I{"id":"8801","chunks":["3:static/chunks/3-1f903c812f794e06.js","572:static/chunks/572-dd6907329ad47b59.js","801:static/chunks/801-8b17748d0b5c88f7.js","191:static/chunks/app/(shop)/layout-630ea7c8823d9902.js"],"name":"","async":false}
9:I{"id":"7028","chunks":["3:static/chunks/3-1f903c812f794e06.js","572:static/chunks/572-dd6907329ad47b59.js","801:static/chunks/801-8b17748d0b5c88f7.js","191:static/chunks/app/(shop)/layout-630ea7c8823d9902.js"],"name":"","async":false}
1:["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$L6",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","asNotFound":false,"childProp":{"current":[["$","html",null,{"lang":"en","children":[null,["$","body",null,{"children":[["$","$L7",null,{}],["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children","(main)","children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$L6",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","asNotFound":false,"childProp":{"current":["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children","(main)","children","demo","children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$L6",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","asNotFound":false,"childProp":{"current":["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children","(main)","children","demo","children",["demo","maps/data-class-two-ranges/sand-signika","c"],"children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$L6",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","asNotFound":false,"childProp":{"current":["$L8",null],"segment":"__PAGE__?{\"demo\":[\"maps\",\"data-class-two-ranges\",\"sand-signika\"]}"},"styles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/621fda290094023d.css","precedence":"next"}]]}],"segment":["demo","maps/data-class-two-ranges/sand-signika","c"]},"styles":[]}],"segment":"demo"},"styles":[]}],["$","footer",null,{"className":"page-footer font-small bkgDarkestGray","role":"contentinfo","children":["$","div",null,{"id":"footer","className":"container","children":[["$","div",null,{"className":"row footer-menu","children":[["$","div",null,{"className":"col-6 col-md-4 col-lg mt-2 mb-2","children":[["$","h2",null,{"className":"h4 mb-1 mb-md-2 footer-heading font-weight-light","children":"快捷链接"}],["$","ul",null,{"className":"footer-list list-unstyled","children":[["$","li",null,{"className":"footer-link","children":["$","$L9",null,{"href":"/product","children":"产品"}]}],["$","li",null,{"className":"footer-link","children":["$","$L9",null,{"href":"/demos","children":"例子"}]}],["$","li",null,{"className":"footer-link","children":["$","$L9",null,{"href":"/download","children":"下载试用"}]}],["$","li",null,{"className":"footer-link","children":["$","$L9",null,{"href":"https://shop.highsoft.com","target":"_blank","children":"获取授权"}]}]]}]]}],["$","div",null,{"className":"col-6 col-md-4 col-lg mt-2 mb-2","children":[["$","h2",null,{"className":"h4 mb-1 mb-md-2 footer-heading font-weight-light","children":"开发者资源"}],["$","ul",null,{"className":"footer-list list-unstyled","children":[["$","li",null,{"className":"footer-link","children":["$","$L9",null,{"href":"/docs","children":"使用文档"}]}],["$","li",null,{"className":"footer-link","children":["$","$L9",null,{"href":"https://api.highcharts.com","target":"_blank","children":"API 文档"}]}],["$","li",null,{"className":"footer-link","children":["$","$L9",null,{"href":"/changelog","children":"更新日志"}]}],["$","li",null,{"className":"footer-link","children":["$","$L9",null,{"href":"/roadmap","children":"发展规划"}]}]]}]]}],["$","div",null,{"className":"col-6 col-md-4 col-lg mt-2 mb-2","children":[["$","h2",null,{"className":"h4 mb-1 mb-md-2 footer-heading font-weight-light","children":"服务与支持"}],["$","ul",null,{"className":"footer-list list-unstyled","children":[["$","li",null,{"className":"footer-link","children":["$","$L9",null,{"href":"https://www.highcharts.com/forum/","target":"_blank","children":"技术社区"}]}],["$","li",null,{"className":"footer-link","children":["$","$L9",null,{"href":"https://stackoverflow.com/tags/highcharts","target":"_blank","children":"Stack Overflow"}]}],["$","li",null,{"className":"footer-link","children":["$","$L9",null,{"href":"https://github.com/highcharts/highcharts","target":"_blank","children":"Github"}]}],["$","li",null,{"className":"footer-link","children":["$","$L9",null,{"href":"/support","children":"服务与支持"}]}],["$","li",null,{"className":"footer-link","children":["$","$L9",null,{"href":"/chart-chooser","children":"图表选择器"}]}]]}]]}],["$","div",null,{"className":"col-6 col-md-4 col-lg mt-2 mb-2","children":[["$","h2",null,{"className":"h4 mb-1 mb-md-2 footer-heading font-weight-light","children":"网站相关"}],["$","ul",null,{"className":"footer-list list-unstyled","children":[["$","li",null,{"className":"footer-link","children":["$","$L9",null,{"href":"http://localhost:3000/privacy","target":"_blank","children":"隐私政策"}]}],["$","li",null,{"className":"footer-link","children":["$","$L9",null,{"href":"https://shop.highcharts.com/license","target":"_blank","children":"标准协议文档"}]}],["$","li",null,{"className":"footer-link","children":["$","$L9",null,{"href":"/sitemap.xml","children":"Sitemap"}]}],["$","li",null,{"className":"footer-link","children":["$","$L9",null,{"href":"https://www.highcharts.com/blog/article/accessibility-statement/","target":"_blank","children":"Accessibility Statement"}]}]]}]]}],["$","div",null,{"className":"col-6 col-md-4 col-lg mt-2 mb-2","children":[["$","h2",null,{"className":"h4 mb-1 mb-md-2 footer-heading font-weight-light","children":"关于"}],["$","ul",null,{"className":"footer-list list-unstyled","children":[["$","li",null,{"className":"footer-link","children":["$","$L9",null,{"href":"/about","children":"我们的故事"}]}],["$","li",null,{"className":"footer-link","children":["$","$L9",null,{"href":"hhttps://www.highcharts.com/people","children":"团队"}]}],["$","li",null,{"className":"footer-link","children":["$","$L9",null,{"href":"/about/contact","children":"联系方式"}]}],["$","li",null,{"className":"footer-link","children":["$","$L9",null,{"href":"https://wp-assets.highcharts.com/www-highcharts-com/blog/wp-content/uploads/2021/08/16115648/Codeofconduct.pdf","target":"_blank","children":"行为准则"}]}]]}]]}]]}],["$","div",null,{"className":"row pb30 desktop-version","children":[["$","div",null,{"className":"col py-1 pr-0 pb-3 text-left highchartsRights small-text","children":["$","div",null,{"children":[" © ",2023," Highcharts",["$","span",null,{"className":"sep","children":" 保留所有权利，"}],["$","a",null,{"href":"https://beian.miit.gov.cn/","target":"_blank","children":"浙ICP备16004892号-1"}],"，由 ",["$","a",null,{"href":"/about/parter","children":"简数科技"}]," 提供服务。"]}]}],["$","div",null,{"className":"col py-1 pl-0 pb-3 text-right","children":[["$","h2",null,{"className":"h2-text-hidden","children":"Social"}],["$","ul",null,{"className":"footerSocialsList footerSocials","children":[["$","li",null,{"children":["$","a",null,{"className":"socials","href":"https://github.com/highcharts/highcharts","aria-label":"Highcharts Github","children":["$","i",null,{"className":"fa fa-github txtWhite","aria-hidden":"true"}]}]}],["$","li",null,{"children":["$","a",null,{"className":"socials","href":"https://stackoverflow.com/questions/tagged/highcharts","aria-label":"Highcharts Stack Overflow","children":["$","i",null,{"className":"fa fa-stack-overflow txtWhite","aria-hidden":"true"}]}]}]]}]]}]]}]]}]}],["$","script",null,{"src":"/js/common.js"}]]}]]}],null],"segment":"(main)"},"styles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/b2e0b431b62130d6.css","precedence":"next"}]]}]
2:[[["$","meta",null,{"charSet":"utf-8"}],null,null,null,null,null,null,null,null,null,null,["$","meta",null,{"name":"viewport","content":"width=device-width, initial-scale=1"}],null,null,null,null,null,null,null,null,null,null,[]],[null,null,null,null],null,null,[null,null,null,null,null],null,null,null,null,null]
a:I{"id":"8344","chunks":["664:static/chunks/664-c875da42fcb6e6b4.js","572:static/chunks/572-dd6907329ad47b59.js","568:static/chunks/568-071733b70a3731c3.js","392:static/chunks/app/(main)/demo/[...demo]/page-ba9b772b3f788084.js"],"name":"","async":false}
8:["$","$La",null,{"props":{"demos":[{"name":"General","code":"general","children":[{"code":"all-maps","name":"Overview","img":"https://www.highcharts.com/demo/images/samples/maps/demo/all-maps/thumbnail.png"},{"code":"animated-mapline","name":"Animated lines on a world map","img":"https://www.highcharts.com/demo/images/samples/maps/demo/animated-mapline/thumbnail.png"},{"code":"audio-map","name":"Audio map","img":"https://www.highcharts.com/demo/images/samples/maps/demo/audio-map/thumbnail.png"},{"code":"map-trajectory","name":"Audio map","img":"https://www.highcharts.com/demo/images/samples/maps/demo/map-trajectory/thumbnail.png"},{"code":"topojson-projection","name":"Built in projection","img":"https://www.highcharts.com/demo/images/samples/maps/demo/topojson-projection/thumbnail.png"},{"code":"category-map","name":"Categorized areas","img":"https://www.highcharts.com/demo/images/samples/maps/demo/category-map/thumbnail.png"},{"code":"color-axis","name":"Color axis and data labels","img":"https://www.highcharts.com/demo/images/samples/maps/demo/color-axis/thumbnail.png"},{"code":"data-class-two-ranges","name":"Data classes and popup","img":"https://www.highcharts.com/demo/images/samples/maps/demo/data-class-two-ranges/thumbnail.png","parent":"general","data":{"js":"(async () => {\n\n    const mapData = await fetch(\n        'https://code.highcharts.com/mapdata/countries/us/us-all.topo.json'\n    ).then(response => response.json());\n\n    // Load the data from a Google Spreadsheet\n    // https://docs.google.com/spreadsheets/d/1uj1Gzv3fpH-b0w2tYpuKNp3TrGr43I9XAAqmgVE_jMs\n    Highcharts.data({\n        googleAPIKey: 'AIzaSyCQ0Jh8OFRShXam8adBbBcctlbeeA-qJOk',\n        googleSpreadsheetKey: '1uj1Gzv3fpH-b0w2tYpuKNp3TrGr43I9XAAqmgVE_jMs',\n\n        // Custom handler for columns\n        parsed: function (columns) {\n\n            /**\n             * Event handler for clicking points. Use jQuery UI to pop up\n             * a pie chart showing the details for each state.\n             */\n            function pointClick() {\n                var row = this.options.row,\n                    $div = $('<div></div>')\n                        .dialog({\n                            title: this.name,\n                            width: 320,\n                            height: 300\n                        });\n\n                window.chart = new Highcharts.Chart({\n                    chart: {\n                        renderTo: $div[0],\n                        type: 'pie',\n                        width: 290,\n                        height: 240\n                    },\n                    title: {\n                        text: null\n                    },\n                    series: [{\n                        name: 'Votes',\n                        data: [{\n                            name: 'Trump',\n                            color: '#C40401',\n                            y: parseInt(columns[3][row], 10)\n                        }, {\n                            name: 'Clinton',\n                            color: '#0200D0',\n                            y: parseInt(columns[2][row], 10)\n                        }],\n                        dataLabels: {\n                            format: '<b>{point.name}</b> {point.percentage:.1f}%'\n                        }\n                    }]\n                });\n            }\n\n            // Make the columns easier to read\n\n            var keys = columns[0],\n                names = columns[1],\n                percent = columns[7],\n                // Build the chart options\n                options = {\n                    chart: {\n                        type: 'map',\n                        map: mapData,\n                        renderTo: 'container',\n                        borderWidth: 1\n                    },\n\n                    title: {\n                        text: 'US presidential election 2016 results',\n                        align: 'left'\n                    },\n                    subtitle: {\n                        text: 'Source: <a href=\"https://transition.fec.gov/pubrec/fe2016/2016presgeresults.pdf\">Federal Election Commission</a>',\n                        align: 'left'\n                    },\n\n                    legend: {\n                        align: 'right',\n                        verticalAlign: 'top',\n                        x: -100,\n                        y: 70,\n                        floating: true,\n                        layout: 'vertical',\n                        valueDecimals: 0,\n                        backgroundColor: ( // theme\n                            Highcharts.defaultOptions &&\n                            Highcharts.defaultOptions.legend &&\n                            Highcharts.defaultOptions.legend.backgroundColor\n                        ) || 'rgba(255, 255, 255, 0.85)'\n                    },\n\n                    mapNavigation: {\n                        enabled: true,\n                        enableButtons: false\n                    },\n\n                    colorAxis: {\n                        dataClasses: [{\n                            from: -100,\n                            to: 0,\n                            color: '#0200D0',\n                            name: 'Clinton'\n                        }, {\n                            from: 0,\n                            to: 100,\n                            color: '#C40401',\n                            name: 'Trump'\n                        }]\n                    },\n\n                    series: [{\n                        data: [],\n                        joinBy: 'postal-code',\n                        dataLabels: {\n                            enabled: true,\n                            color: '#FFFFFF',\n                            format: '{point.postal-code}',\n                            style: {\n                                textTransform: 'uppercase'\n                            }\n                        },\n                        name: 'Republicans margin',\n                        point: {\n                            events: {\n                                click: pointClick\n                            }\n                        },\n                        tooltip: {\n                            ySuffix: ' %'\n                        },\n                        cursor: 'pointer'\n                    }, {\n                        name: 'Separators',\n                        type: 'mapline',\n                        nullColor: 'silver',\n                        showInLegend: false,\n                        enableMouseTracking: false,\n                        accessibility: {\n                            enabled: false\n                        }\n                    }]\n                };\n            keys = keys.map(function (key) {\n                return key.toUpperCase();\n            });\n            mapData.objects.default.geometries.forEach(function (geometry) {\n                if (geometry.properties['postal-code']) {\n                    var postalCode = geometry.properties['postal-code'],\n                        i = $.inArray(postalCode, keys);\n                    options.series[0].data.push(Highcharts.extend({\n                        value: parseFloat(percent[i]),\n                        name: names[i],\n                        'postal-code': postalCode,\n                        row: i\n                    }, geometry));\n                }\n            });\n\n            // Initialize the chart\n            window.chart = new Highcharts.Map(options);\n        },\n\n        error: function () {\n            $('#container').html('<div class=\"loading\">' +\n                '<i class=\"icon-frown icon-large\"></i> ' +\n                '<p>Error loading data from Google Spreadsheets</p>' +\n                '</div>');\n        }\n    });\n\n})();\n","css":"#container {\n    height: 500px;\n    min-width: 310px;\n    max-width: 600px;\n    margin: 0 auto;\n}\n\n.loading {\n    margin-top: 10em;\n    text-align: center;\n    color: gray;\n}\n.highcharts-menu hr {margin: unset}","html":"   \n<link href=\"https://ajax.googleapis.com/ajax/libs/jqueryui/1.12.1/themes/base/jquery-ui.css\" rel=\"stylesheet\" type=\"text/css\" />\n<link href=\"https://netdna.bootstrapcdn.com/font-awesome/3.2.1/css/font-awesome.css\" rel=\"stylesheet\" type=\"text/css\" />\n\n<div id=\"container\">\n    <div class=\"loading\">\n        <i class=\"icon-spinner icon-spin icon-large\"></i>\n        Loading data from Google Spreadsheets...\n    </div>\n</div>\n","npm":"// 安装\nnpm install highcharts@10.3.3 --save\n\n// import 模块 \nimport Jquery3.1.1.min  from 'https://code.jquery.com/jquery-3.1.1.min.js';\nimport Highcharts       from '11.0.0/highcharts';\nimport Map              from 'highcharts/11.0.0/modules/map';\nimport Data             from 'highcharts/11.0.0/modules/data';\nimport Exporting        from 'highcharts/11.0.0/modules/exporting';\nimport OfflineExporting from 'highcharts/11.0.0/modules/offline-exporting';\nimport Accessibility    from 'highcharts/11.0.0/modules/accessibility';\nimport JqueryUi.min     from 'https://ajax.googleapis.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.js';\nimport SandSignika      from 'highcharts/themes/sand-signika';\n\n// 初始化模块\nJquery3.1.1.min(Highcharts);\nMap(Highcharts);\nData(Highcharts);\nExporting(Highcharts);\nOfflineExporting(Highcharts);\nAccessibility(Highcharts);\nJqueryUi.min(Highcharts);\nSandSignika(Highcharts);\n","scripts":["https://code.jquery.com/jquery-3.1.1.min.js","https://code.highcharts.com/11.0.0/highcharts.js","https://code.highcharts.com/maps/11.0.0/modules/map.js","https://code.highcharts.com/maps/11.0.0/modules/data.js","https://code.highcharts.com/maps/11.0.0/modules/exporting.js","https://code.highcharts.com/maps/11.0.0/modules/offline-exporting.js","https://code.highcharts.com/maps/11.0.0/modules/accessibility.js","https://ajax.googleapis.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.js","https://code.highcharts.com/10.3.3/themes/sand-signika.js"]},"pre":"color-axis","next":"us-counties"},{"code":"us-counties","name":"Detailed map, US counties","img":"https://www.highcharts.com/demo/images/samples/maps/demo/us-counties/thumbnail.png"},{"code":"distribution","name":"Distribution map","img":"https://www.highcharts.com/demo/images/samples/maps/demo/distribution/thumbnail.png"},{"code":"flowmap","name":"Flowmap","img":"https://www.highcharts.com/demo/images/samples/maps/demo/flowmap/thumbnail.png"},{"code":"flowmap-world-cup","name":"Flowmap Flight Routes","img":"https://www.highcharts.com/demo/images/samples/maps/demo/flowmap-world-cup/thumbnail.png"},{"code":"mapline-mappoint","name":"GeoJSON with rivers and cities","img":"https://www.highcharts.com/demo/images/samples/maps/demo/mapline-mappoint/thumbnail.png"},{"code":"all-areas-as-null","name":"Highlighted areas","img":"https://www.highcharts.com/demo/images/samples/maps/demo/all-areas-as-null/thumbnail.png"},{"code":"lightning","name":"Lightning Map","img":"https://www.highcharts.com/demo/images/samples/maps/demo/lightning/thumbnail.png"},{"code":"marker-clusters","name":"Map with marker clusters","img":"https://www.highcharts.com/demo/images/samples/maps/demo/marker-clusters/thumbnail.png"},{"code":"map-pies","name":"Map with overlaid pie charts","img":"https://www.highcharts.com/demo/images/samples/maps/demo/map-pies/thumbnail.png"},{"code":"pattern-fill-map","name":"Map with pattern fills","img":"https://www.highcharts.com/demo/images/samples/maps/demo/pattern-fill-map/thumbnail.png"},{"code":"flowmap-migration","name":"Migration Flowmap","img":"https://www.highcharts.com/demo/images/samples/maps/demo/flowmap-migration/thumbnail.png"},{"code":"data-class-ranges","name":"Multiple data classes","img":"https://www.highcharts.com/demo/images/samples/maps/demo/data-class-ranges/thumbnail.png"},{"code":"flight-routes","name":"Simple flight routes","img":"https://www.highcharts.com/demo/images/samples/maps/demo/flight-routes/thumbnail.png"},{"code":"us-data-labels","name":"Small US with data labels","img":"https://www.highcharts.com/demo/images/samples/maps/demo/us-data-labels/thumbnail.png"},{"code":"spider-map","name":"Spider map","img":"https://www.highcharts.com/demo/images/samples/maps/demo/spider-map/thumbnail.png"}]},{"name":"Dynamic","code":"dynamic","children":[{"code":"eu-capitals-temp","name":"Current temperatures in capitals of Europe","img":"https://www.highcharts.com/demo/images/samples/maps/demo/eu-capitals-temp/thumbnail.png"},{"code":"map-drilldown","name":"Drilldown","img":"https://www.highcharts.com/demo/images/samples/maps/demo/map-drilldown/thumbnail.png"},{"code":"tooltip","name":"Fixed tooltip with HTML","img":"https://www.highcharts.com/demo/images/samples/maps/demo/tooltip/thumbnail.png"},{"code":"map-drilldown-preloaded","name":"Map drilldown with preloaded data","img":"https://www.highcharts.com/demo/images/samples/maps/demo/map-drilldown-preloaded/thumbnail.png"},{"code":"projection-explorer","name":"Projection Explorer","img":"https://www.highcharts.com/demo/images/samples/maps/demo/projection-explorer/thumbnail.png"},{"code":"rich-info","name":"Rich information on click","img":"https://www.highcharts.com/demo/images/samples/maps/demo/rich-info/thumbnail.png"},{"code":"doubleclickzoomto","name":"Zoom to area by double click","img":"https://www.highcharts.com/demo/images/samples/maps/demo/doubleclickzoomto/thumbnail.png"}]},{"name":"Input formats","code":"input-formats","children":[{"code":"latlon-advanced","name":"Advanced lat/long","img":"https://www.highcharts.com/demo/images/samples/maps/demo/latlon-advanced/thumbnail.png"},{"code":"geojson","name":"GeoJSON areas","img":"https://www.highcharts.com/demo/images/samples/maps/demo/geojson/thumbnail.png"},{"code":"mappoint-latlon","name":"Map point with lat/long","img":"https://www.highcharts.com/demo/images/samples/maps/demo/mappoint-latlon/thumbnail.png"}]},{"name":"Series types","code":"series-types","children":[{"code":"mappoint-datalabels-mapmarker","name":"Data labels as map markers","img":"https://www.highcharts.com/demo/images/samples/maps/demo/mappoint-datalabels-mapmarker/thumbnail.png"},{"code":"geoheatmap-orthographic","name":"Density of Cities in the World","img":"https://www.highcharts.com/demo/images/samples/maps/demo/geoheatmap-orthographic/thumbnail.png"},{"code":"geoheatmap-europe","name":"European Train Stations Near Airports","img":"https://www.highcharts.com/demo/images/samples/maps/demo/geoheatmap-europe/thumbnail.png"},{"code":"geoheatmap-equalearth","name":"GeoHeatmap Aerosol Particle Radius In September 2016","img":"https://www.highcharts.com/demo/images/samples/maps/demo/geoheatmap-equalearth/thumbnail.png"},{"code":"heatmap","name":"Heat map","img":"https://www.highcharts.com/demo/images/samples/maps/demo/heatmap/thumbnail.png"},{"code":"map-bubble","name":"Map bubble","img":"https://www.highcharts.com/demo/images/samples/maps/demo/map-bubble/thumbnail.png"},{"code":"mappoint-mapmarker","name":"Map markers","img":"https://www.highcharts.com/demo/images/samples/maps/demo/mappoint-mapmarker/thumbnail.png"},{"code":"circlemap-africa","name":"Tile map, circles","img":"https://www.highcharts.com/demo/images/samples/maps/demo/circlemap-africa/thumbnail.png"},{"code":"diamondmap","name":"Tile map, diamonds","img":"https://www.highcharts.com/demo/images/samples/maps/demo/diamondmap/thumbnail.png"},{"code":"honeycomb-usa","name":"Tile map, honeycomb","img":"https://www.highcharts.com/demo/images/samples/maps/demo/honeycomb-usa/thumbnail.png"}]}],"demo":"data-class-two-ranges","current":{"code":"data-class-two-ranges","name":"Data classes and popup","img":"https://www.highcharts.com/demo/images/samples/maps/demo/data-class-two-ranges/thumbnail.png","parent":"general","data":{"js":"(async () => {\n\n    const mapData = await fetch(\n        'https://code.highcharts.com/mapdata/countries/us/us-all.topo.json'\n    ).then(response => response.json());\n\n    // Load the data from a Google Spreadsheet\n    // https://docs.google.com/spreadsheets/d/1uj1Gzv3fpH-b0w2tYpuKNp3TrGr43I9XAAqmgVE_jMs\n    Highcharts.data({\n        googleAPIKey: 'AIzaSyCQ0Jh8OFRShXam8adBbBcctlbeeA-qJOk',\n        googleSpreadsheetKey: '1uj1Gzv3fpH-b0w2tYpuKNp3TrGr43I9XAAqmgVE_jMs',\n\n        // Custom handler for columns\n        parsed: function (columns) {\n\n            /**\n             * Event handler for clicking points. Use jQuery UI to pop up\n             * a pie chart showing the details for each state.\n             */\n            function pointClick() {\n                var row = this.options.row,\n                    $div = $('<div></div>')\n                        .dialog({\n                            title: this.name,\n                            width: 320,\n                            height: 300\n                        });\n\n                window.chart = new Highcharts.Chart({\n                    chart: {\n                        renderTo: $div[0],\n                        type: 'pie',\n                        width: 290,\n                        height: 240\n                    },\n                    title: {\n                        text: null\n                    },\n                    series: [{\n                        name: 'Votes',\n                        data: [{\n                            name: 'Trump',\n                            color: '#C40401',\n                            y: parseInt(columns[3][row], 10)\n                        }, {\n                            name: 'Clinton',\n                            color: '#0200D0',\n                            y: parseInt(columns[2][row], 10)\n                        }],\n                        dataLabels: {\n                            format: '<b>{point.name}</b> {point.percentage:.1f}%'\n                        }\n                    }]\n                });\n            }\n\n            // Make the columns easier to read\n\n            var keys = columns[0],\n                names = columns[1],\n                percent = columns[7],\n                // Build the chart options\n                options = {\n                    chart: {\n                        type: 'map',\n                        map: mapData,\n                        renderTo: 'container',\n                        borderWidth: 1\n                    },\n\n                    title: {\n                        text: 'US presidential election 2016 results',\n                        align: 'left'\n                    },\n                    subtitle: {\n                        text: 'Source: <a href=\"https://transition.fec.gov/pubrec/fe2016/2016presgeresults.pdf\">Federal Election Commission</a>',\n                        align: 'left'\n                    },\n\n                    legend: {\n                        align: 'right',\n                        verticalAlign: 'top',\n                        x: -100,\n                        y: 70,\n                        floating: true,\n                        layout: 'vertical',\n                        valueDecimals: 0,\n                        backgroundColor: ( // theme\n                            Highcharts.defaultOptions &&\n                            Highcharts.defaultOptions.legend &&\n                            Highcharts.defaultOptions.legend.backgroundColor\n                        ) || 'rgba(255, 255, 255, 0.85)'\n                    },\n\n                    mapNavigation: {\n                        enabled: true,\n                        enableButtons: false\n                    },\n\n                    colorAxis: {\n                        dataClasses: [{\n                            from: -100,\n                            to: 0,\n                            color: '#0200D0',\n                            name: 'Clinton'\n                        }, {\n                            from: 0,\n                            to: 100,\n                            color: '#C40401',\n                            name: 'Trump'\n                        }]\n                    },\n\n                    series: [{\n                        data: [],\n                        joinBy: 'postal-code',\n                        dataLabels: {\n                            enabled: true,\n                            color: '#FFFFFF',\n                            format: '{point.postal-code}',\n                            style: {\n                                textTransform: 'uppercase'\n                            }\n                        },\n                        name: 'Republicans margin',\n                        point: {\n                            events: {\n                                click: pointClick\n                            }\n                        },\n                        tooltip: {\n                            ySuffix: ' %'\n                        },\n                        cursor: 'pointer'\n                    }, {\n                        name: 'Separators',\n                        type: 'mapline',\n                        nullColor: 'silver',\n                        showInLegend: false,\n                        enableMouseTracking: false,\n                        accessibility: {\n                            enabled: false\n                        }\n                    }]\n                };\n            keys = keys.map(function (key) {\n                return key.toUpperCase();\n            });\n            mapData.objects.default.geometries.forEach(function (geometry) {\n                if (geometry.properties['postal-code']) {\n                    var postalCode = geometry.properties['postal-code'],\n                        i = $.inArray(postalCode, keys);\n                    options.series[0].data.push(Highcharts.extend({\n                        value: parseFloat(percent[i]),\n                        name: names[i],\n                        'postal-code': postalCode,\n                        row: i\n                    }, geometry));\n                }\n            });\n\n            // Initialize the chart\n            window.chart = new Highcharts.Map(options);\n        },\n\n        error: function () {\n            $('#container').html('<div class=\"loading\">' +\n                '<i class=\"icon-frown icon-large\"></i> ' +\n                '<p>Error loading data from Google Spreadsheets</p>' +\n                '</div>');\n        }\n    });\n\n})();\n","css":"#container {\n    height: 500px;\n    min-width: 310px;\n    max-width: 600px;\n    margin: 0 auto;\n}\n\n.loading {\n    margin-top: 10em;\n    text-align: center;\n    color: gray;\n}\n.highcharts-menu hr {margin: unset}","html":"   \n<link href=\"https://ajax.googleapis.com/ajax/libs/jqueryui/1.12.1/themes/base/jquery-ui.css\" rel=\"stylesheet\" type=\"text/css\" />\n<link href=\"https://netdna.bootstrapcdn.com/font-awesome/3.2.1/css/font-awesome.css\" rel=\"stylesheet\" type=\"text/css\" />\n\n<div id=\"container\">\n    <div class=\"loading\">\n        <i class=\"icon-spinner icon-spin icon-large\"></i>\n        Loading data from Google Spreadsheets...\n    </div>\n</div>\n","npm":"// 安装\nnpm install highcharts@10.3.3 --save\n\n// import 模块 \nimport Jquery3.1.1.min  from 'https://code.jquery.com/jquery-3.1.1.min.js';\nimport Highcharts       from '11.0.0/highcharts';\nimport Map              from 'highcharts/11.0.0/modules/map';\nimport Data             from 'highcharts/11.0.0/modules/data';\nimport Exporting        from 'highcharts/11.0.0/modules/exporting';\nimport OfflineExporting from 'highcharts/11.0.0/modules/offline-exporting';\nimport Accessibility    from 'highcharts/11.0.0/modules/accessibility';\nimport JqueryUi.min     from 'https://ajax.googleapis.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.js';\nimport SandSignika      from 'highcharts/themes/sand-signika';\n\n// 初始化模块\nJquery3.1.1.min(Highcharts);\nMap(Highcharts);\nData(Highcharts);\nExporting(Highcharts);\nOfflineExporting(Highcharts);\nAccessibility(Highcharts);\nJqueryUi.min(Highcharts);\nSandSignika(Highcharts);\n","scripts":["https://code.jquery.com/jquery-3.1.1.min.js","https://code.highcharts.com/11.0.0/highcharts.js","https://code.highcharts.com/maps/11.0.0/modules/map.js","https://code.highcharts.com/maps/11.0.0/modules/data.js","https://code.highcharts.com/maps/11.0.0/modules/exporting.js","https://code.highcharts.com/maps/11.0.0/modules/offline-exporting.js","https://code.highcharts.com/maps/11.0.0/modules/accessibility.js","https://ajax.googleapis.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.js","https://code.highcharts.com/10.3.3/themes/sand-signika.js"]},"pre":"color-axis","next":"us-counties"},"product":"maps","theme":"sand-signika","_global":{"scripts":["https://code.jquery.com/jquery-3.1.1.min.js","https://code.highcharts.com/11.0.0/highcharts.js","https://code.highcharts.com/maps/11.0.0/modules/map.js","https://code.highcharts.com/maps/11.0.0/modules/data.js","https://code.highcharts.com/maps/11.0.0/modules/exporting.js","https://code.highcharts.com/maps/11.0.0/modules/offline-exporting.js","https://code.highcharts.com/maps/11.0.0/modules/accessibility.js","https://ajax.googleapis.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.js","https://code.highcharts.com/10.3.3/themes/sand-signika.js"],"css":"#container {\n    height: 500px;\n    min-width: 310px;\n    max-width: 600px;\n    margin: 0 auto;\n}\n\n.loading {\n    margin-top: 10em;\n    text-align: center;\n    color: gray;\n}\n.highcharts-menu hr {margin: unset}","script":"(async () => {\n\n    const mapData = await fetch(\n        'https://code.highcharts.com/mapdata/countries/us/us-all.topo.json'\n    ).then(response => response.json());\n\n    // Load the data from a Google Spreadsheet\n    // https://docs.google.com/spreadsheets/d/1uj1Gzv3fpH-b0w2tYpuKNp3TrGr43I9XAAqmgVE_jMs\n    Highcharts.data({\n        googleAPIKey: 'AIzaSyCQ0Jh8OFRShXam8adBbBcctlbeeA-qJOk',\n        googleSpreadsheetKey: '1uj1Gzv3fpH-b0w2tYpuKNp3TrGr43I9XAAqmgVE_jMs',\n\n        // Custom handler for columns\n        parsed: function (columns) {\n\n            /**\n             * Event handler for clicking points. Use jQuery UI to pop up\n             * a pie chart showing the details for each state.\n             */\n            function pointClick() {\n                var row = this.options.row,\n                    $div = $('<div></div>')\n                        .dialog({\n                            title: this.name,\n                            width: 320,\n                            height: 300\n                        });\n\n                window.chart = new Highcharts.Chart({\n                    chart: {\n                        renderTo: $div[0],\n                        type: 'pie',\n                        width: 290,\n                        height: 240\n                    },\n                    title: {\n                        text: null\n                    },\n                    series: [{\n                        name: 'Votes',\n                        data: [{\n                            name: 'Trump',\n                            color: '#C40401',\n                            y: parseInt(columns[3][row], 10)\n                        }, {\n                            name: 'Clinton',\n                            color: '#0200D0',\n                            y: parseInt(columns[2][row], 10)\n                        }],\n                        dataLabels: {\n                            format: '<b>{point.name}</b> {point.percentage:.1f}%'\n                        }\n                    }]\n                });\n            }\n\n            // Make the columns easier to read\n\n            var keys = columns[0],\n                names = columns[1],\n                percent = columns[7],\n                // Build the chart options\n                options = {\n                    chart: {\n                        type: 'map',\n                        map: mapData,\n                        renderTo: 'container',\n                        borderWidth: 1\n                    },\n\n                    title: {\n                        text: 'US presidential election 2016 results',\n                        align: 'left'\n                    },\n                    subtitle: {\n                        text: 'Source: <a href=\"https://transition.fec.gov/pubrec/fe2016/2016presgeresults.pdf\">Federal Election Commission</a>',\n                        align: 'left'\n                    },\n\n                    legend: {\n                        align: 'right',\n                        verticalAlign: 'top',\n                        x: -100,\n                        y: 70,\n                        floating: true,\n                        layout: 'vertical',\n                        valueDecimals: 0,\n                        backgroundColor: ( // theme\n                            Highcharts.defaultOptions &&\n                            Highcharts.defaultOptions.legend &&\n                            Highcharts.defaultOptions.legend.backgroundColor\n                        ) || 'rgba(255, 255, 255, 0.85)'\n                    },\n\n                    mapNavigation: {\n                        enabled: true,\n                        enableButtons: false\n                    },\n\n                    colorAxis: {\n                        dataClasses: [{\n                            from: -100,\n                            to: 0,\n                            color: '#0200D0',\n                            name: 'Clinton'\n                        }, {\n                            from: 0,\n                            to: 100,\n                            color: '#C40401',\n                            name: 'Trump'\n                        }]\n                    },\n\n                    series: [{\n                        data: [],\n                        joinBy: 'postal-code',\n                        dataLabels: {\n                            enabled: true,\n                            color: '#FFFFFF',\n                            format: '{point.postal-code}',\n                            style: {\n                                textTransform: 'uppercase'\n                            }\n                        },\n                        name: 'Republicans margin',\n                        point: {\n                            events: {\n                                click: pointClick\n                            }\n                        },\n                        tooltip: {\n                            ySuffix: ' %'\n                        },\n                        cursor: 'pointer'\n                    }, {\n                        name: 'Separators',\n                        type: 'mapline',\n                        nullColor: 'silver',\n                        showInLegend: false,\n                        enableMouseTracking: false,\n                        accessibility: {\n                            enabled: false\n                        }\n                    }]\n                };\n            keys = keys.map(function (key) {\n                return key.toUpperCase();\n            });\n            mapData.objects.default.geometries.forEach(function (geometry) {\n                if (geometry.properties['postal-code']) {\n                    var postalCode = geometry.properties['postal-code'],\n                        i = $.inArray(postalCode, keys);\n                    options.series[0].data.push(Highcharts.extend({\n                        value: parseFloat(percent[i]),\n                        name: names[i],\n                        'postal-code': postalCode,\n                        row: i\n                    }, geometry));\n                }\n            });\n\n            // Initialize the chart\n            window.chart = new Highcharts.Map(options);\n        },\n\n        error: function () {\n            $('#container').html('<div class=\"loading\">' +\n                '<i class=\"icon-frown icon-large\"></i> ' +\n                '<p>Error loading data from Google Spreadsheets</p>' +\n                '</div>');\n        }\n    });\n\n})();\n"},"hidePageCover":true}}]
