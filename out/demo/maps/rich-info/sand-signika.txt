0:[[["",{"children":["(main)",{"children":["demo",{"children":[["demo","maps/rich-info/sand-signika","c"],{"children":["__PAGE__?{\"demo\":[\"maps\",\"rich-info\",\"sand-signika\"]}",{}]}]}]},"$undefined","$undefined",true]}],"$L1",[[],["$L2",null]]]]
3:HL["/_next/static/css/b2e0b431b62130d6.css",{"as":"style"}]
4:HL["/_next/static/css/621fda290094023d.css",{"as":"style"}]
5:I{"id":"9631","chunks":["272:static/chunks/webpack-0d6f19481046fd3b.js","509:static/chunks/54cd117c-0de4f9b009705f45.js","111:static/chunks/111-7e9f7f1a63948fbf.js"],"name":"","async":false}
6:I{"id":"2781","chunks":["272:static/chunks/webpack-0d6f19481046fd3b.js","509:static/chunks/54cd117c-0de4f9b009705f45.js","111:static/chunks/111-7e9f7f1a63948fbf.js"],"name":"","async":false}
7:I{"id":"8801","chunks":["3:static/chunks/3-1f903c812f794e06.js","572:static/chunks/572-dd6907329ad47b59.js","801:static/chunks/801-8b17748d0b5c88f7.js","191:static/chunks/app/(shop)/layout-630ea7c8823d9902.js"],"name":"","async":false}
9:I{"id":"7028","chunks":["3:static/chunks/3-1f903c812f794e06.js","572:static/chunks/572-dd6907329ad47b59.js","801:static/chunks/801-8b17748d0b5c88f7.js","191:static/chunks/app/(shop)/layout-630ea7c8823d9902.js"],"name":"","async":false}
1:["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$L6",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","asNotFound":false,"childProp":{"current":[["$","html",null,{"lang":"en","children":[null,["$","body",null,{"children":[["$","$L7",null,{}],["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children","(main)","children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$L6",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","asNotFound":false,"childProp":{"current":["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children","(main)","children","demo","children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$L6",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","asNotFound":false,"childProp":{"current":["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children","(main)","children","demo","children",["demo","maps/rich-info/sand-signika","c"],"children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$L6",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","asNotFound":false,"childProp":{"current":["$L8",null],"segment":"__PAGE__?{\"demo\":[\"maps\",\"rich-info\",\"sand-signika\"]}"},"styles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/621fda290094023d.css","precedence":"next"}]]}],"segment":["demo","maps/rich-info/sand-signika","c"]},"styles":[]}],"segment":"demo"},"styles":[]}],["$","footer",null,{"className":"page-footer font-small bkgDarkestGray","role":"contentinfo","children":["$","div",null,{"id":"footer","className":"container","children":[["$","div",null,{"className":"row footer-menu","children":[["$","div",null,{"className":"col-6 col-md-4 col-lg mt-2 mb-2","children":[["$","h2",null,{"className":"h4 mb-1 mb-md-2 footer-heading font-weight-light","children":"快捷链接"}],["$","ul",null,{"className":"footer-list list-unstyled","children":[["$","li",null,{"className":"footer-link","children":["$","$L9",null,{"href":"/product","children":"产品"}]}],["$","li",null,{"className":"footer-link","children":["$","$L9",null,{"href":"/demos","children":"例子"}]}],["$","li",null,{"className":"footer-link","children":["$","$L9",null,{"href":"/download","children":"下载试用"}]}],["$","li",null,{"className":"footer-link","children":["$","$L9",null,{"href":"https://shop.highsoft.com","target":"_blank","children":"获取授权"}]}]]}]]}],["$","div",null,{"className":"col-6 col-md-4 col-lg mt-2 mb-2","children":[["$","h2",null,{"className":"h4 mb-1 mb-md-2 footer-heading font-weight-light","children":"开发者资源"}],["$","ul",null,{"className":"footer-list list-unstyled","children":[["$","li",null,{"className":"footer-link","children":["$","$L9",null,{"href":"/docs","children":"使用文档"}]}],["$","li",null,{"className":"footer-link","children":["$","$L9",null,{"href":"https://api.highcharts.com","target":"_blank","children":"API 文档"}]}],["$","li",null,{"className":"footer-link","children":["$","$L9",null,{"href":"/changelog","children":"更新日志"}]}],["$","li",null,{"className":"footer-link","children":["$","$L9",null,{"href":"/roadmap","children":"发展规划"}]}]]}]]}],["$","div",null,{"className":"col-6 col-md-4 col-lg mt-2 mb-2","children":[["$","h2",null,{"className":"h4 mb-1 mb-md-2 footer-heading font-weight-light","children":"服务与支持"}],["$","ul",null,{"className":"footer-list list-unstyled","children":[["$","li",null,{"className":"footer-link","children":["$","$L9",null,{"href":"https://www.highcharts.com/forum/","target":"_blank","children":"技术社区"}]}],["$","li",null,{"className":"footer-link","children":["$","$L9",null,{"href":"https://stackoverflow.com/tags/highcharts","target":"_blank","children":"Stack Overflow"}]}],["$","li",null,{"className":"footer-link","children":["$","$L9",null,{"href":"https://github.com/highcharts/highcharts","target":"_blank","children":"Github"}]}],["$","li",null,{"className":"footer-link","children":["$","$L9",null,{"href":"/support","children":"服务与支持"}]}],["$","li",null,{"className":"footer-link","children":["$","$L9",null,{"href":"/chart-chooser","children":"图表选择器"}]}]]}]]}],["$","div",null,{"className":"col-6 col-md-4 col-lg mt-2 mb-2","children":[["$","h2",null,{"className":"h4 mb-1 mb-md-2 footer-heading font-weight-light","children":"网站相关"}],["$","ul",null,{"className":"footer-list list-unstyled","children":[["$","li",null,{"className":"footer-link","children":["$","$L9",null,{"href":"http://localhost:3000/privacy","target":"_blank","children":"隐私政策"}]}],["$","li",null,{"className":"footer-link","children":["$","$L9",null,{"href":"https://shop.highcharts.com/license","target":"_blank","children":"标准协议文档"}]}],["$","li",null,{"className":"footer-link","children":["$","$L9",null,{"href":"/sitemap.xml","children":"Sitemap"}]}],["$","li",null,{"className":"footer-link","children":["$","$L9",null,{"href":"https://www.highcharts.com/blog/article/accessibility-statement/","target":"_blank","children":"Accessibility Statement"}]}]]}]]}],["$","div",null,{"className":"col-6 col-md-4 col-lg mt-2 mb-2","children":[["$","h2",null,{"className":"h4 mb-1 mb-md-2 footer-heading font-weight-light","children":"关于"}],["$","ul",null,{"className":"footer-list list-unstyled","children":[["$","li",null,{"className":"footer-link","children":["$","$L9",null,{"href":"/about","children":"我们的故事"}]}],["$","li",null,{"className":"footer-link","children":["$","$L9",null,{"href":"hhttps://www.highcharts.com/people","children":"团队"}]}],["$","li",null,{"className":"footer-link","children":["$","$L9",null,{"href":"/about/contact","children":"联系方式"}]}],["$","li",null,{"className":"footer-link","children":["$","$L9",null,{"href":"https://wp-assets.highcharts.com/www-highcharts-com/blog/wp-content/uploads/2021/08/16115648/Codeofconduct.pdf","target":"_blank","children":"行为准则"}]}]]}]]}]]}],["$","div",null,{"className":"row pb30 desktop-version","children":[["$","div",null,{"className":"col py-1 pr-0 pb-3 text-left highchartsRights small-text","children":["$","div",null,{"children":[" © ",2023," Highcharts",["$","span",null,{"className":"sep","children":" 保留所有权利，"}],["$","a",null,{"href":"https://beian.miit.gov.cn/","target":"_blank","children":"浙ICP备16004892号-1"}],"，由 ",["$","a",null,{"href":"/about/parter","children":"简数科技"}]," 提供服务。"]}]}],["$","div",null,{"className":"col py-1 pl-0 pb-3 text-right","children":[["$","h2",null,{"className":"h2-text-hidden","children":"Social"}],["$","ul",null,{"className":"footerSocialsList footerSocials","children":[["$","li",null,{"children":["$","a",null,{"className":"socials","href":"https://github.com/highcharts/highcharts","aria-label":"Highcharts Github","children":["$","i",null,{"className":"fa fa-github txtWhite","aria-hidden":"true"}]}]}],["$","li",null,{"children":["$","a",null,{"className":"socials","href":"https://stackoverflow.com/questions/tagged/highcharts","aria-label":"Highcharts Stack Overflow","children":["$","i",null,{"className":"fa fa-stack-overflow txtWhite","aria-hidden":"true"}]}]}]]}]]}]]}]]}]}],["$","script",null,{"src":"/js/common.js"}]]}]]}],null],"segment":"(main)"},"styles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/b2e0b431b62130d6.css","precedence":"next"}]]}]
2:[[["$","meta",null,{"charSet":"utf-8"}],null,null,null,null,null,null,null,null,null,null,["$","meta",null,{"name":"viewport","content":"width=device-width, initial-scale=1"}],null,null,null,null,null,null,null,null,null,null,[]],[null,null,null,null],null,null,[null,null,null,null,null],null,null,null,null,null]
a:I{"id":"8344","chunks":["664:static/chunks/664-c875da42fcb6e6b4.js","572:static/chunks/572-dd6907329ad47b59.js","568:static/chunks/568-071733b70a3731c3.js","392:static/chunks/app/(main)/demo/[...demo]/page-ba9b772b3f788084.js"],"name":"","async":false}
8:["$","$La",null,{"props":{"demos":[{"name":"General","code":"general","children":[{"code":"all-maps","name":"Overview","img":"https://www.highcharts.com/demo/images/samples/maps/demo/all-maps/thumbnail.png"},{"code":"animated-mapline","name":"Animated lines on a world map","img":"https://www.highcharts.com/demo/images/samples/maps/demo/animated-mapline/thumbnail.png"},{"code":"audio-map","name":"Audio map","img":"https://www.highcharts.com/demo/images/samples/maps/demo/audio-map/thumbnail.png"},{"code":"map-trajectory","name":"Audio map","img":"https://www.highcharts.com/demo/images/samples/maps/demo/map-trajectory/thumbnail.png"},{"code":"topojson-projection","name":"Built in projection","img":"https://www.highcharts.com/demo/images/samples/maps/demo/topojson-projection/thumbnail.png"},{"code":"category-map","name":"Categorized areas","img":"https://www.highcharts.com/demo/images/samples/maps/demo/category-map/thumbnail.png"},{"code":"color-axis","name":"Color axis and data labels","img":"https://www.highcharts.com/demo/images/samples/maps/demo/color-axis/thumbnail.png"},{"code":"data-class-two-ranges","name":"Data classes and popup","img":"https://www.highcharts.com/demo/images/samples/maps/demo/data-class-two-ranges/thumbnail.png"},{"code":"us-counties","name":"Detailed map, US counties","img":"https://www.highcharts.com/demo/images/samples/maps/demo/us-counties/thumbnail.png"},{"code":"distribution","name":"Distribution map","img":"https://www.highcharts.com/demo/images/samples/maps/demo/distribution/thumbnail.png"},{"code":"flowmap","name":"Flowmap","img":"https://www.highcharts.com/demo/images/samples/maps/demo/flowmap/thumbnail.png"},{"code":"flowmap-world-cup","name":"Flowmap Flight Routes","img":"https://www.highcharts.com/demo/images/samples/maps/demo/flowmap-world-cup/thumbnail.png"},{"code":"mapline-mappoint","name":"GeoJSON with rivers and cities","img":"https://www.highcharts.com/demo/images/samples/maps/demo/mapline-mappoint/thumbnail.png"},{"code":"all-areas-as-null","name":"Highlighted areas","img":"https://www.highcharts.com/demo/images/samples/maps/demo/all-areas-as-null/thumbnail.png"},{"code":"lightning","name":"Lightning Map","img":"https://www.highcharts.com/demo/images/samples/maps/demo/lightning/thumbnail.png"},{"code":"marker-clusters","name":"Map with marker clusters","img":"https://www.highcharts.com/demo/images/samples/maps/demo/marker-clusters/thumbnail.png"},{"code":"map-pies","name":"Map with overlaid pie charts","img":"https://www.highcharts.com/demo/images/samples/maps/demo/map-pies/thumbnail.png"},{"code":"pattern-fill-map","name":"Map with pattern fills","img":"https://www.highcharts.com/demo/images/samples/maps/demo/pattern-fill-map/thumbnail.png"},{"code":"flowmap-migration","name":"Migration Flowmap","img":"https://www.highcharts.com/demo/images/samples/maps/demo/flowmap-migration/thumbnail.png"},{"code":"data-class-ranges","name":"Multiple data classes","img":"https://www.highcharts.com/demo/images/samples/maps/demo/data-class-ranges/thumbnail.png"},{"code":"flight-routes","name":"Simple flight routes","img":"https://www.highcharts.com/demo/images/samples/maps/demo/flight-routes/thumbnail.png"},{"code":"us-data-labels","name":"Small US with data labels","img":"https://www.highcharts.com/demo/images/samples/maps/demo/us-data-labels/thumbnail.png"},{"code":"spider-map","name":"Spider map","img":"https://www.highcharts.com/demo/images/samples/maps/demo/spider-map/thumbnail.png"}]},{"name":"Dynamic","code":"dynamic","children":[{"code":"eu-capitals-temp","name":"Current temperatures in capitals of Europe","img":"https://www.highcharts.com/demo/images/samples/maps/demo/eu-capitals-temp/thumbnail.png"},{"code":"map-drilldown","name":"Drilldown","img":"https://www.highcharts.com/demo/images/samples/maps/demo/map-drilldown/thumbnail.png"},{"code":"tooltip","name":"Fixed tooltip with HTML","img":"https://www.highcharts.com/demo/images/samples/maps/demo/tooltip/thumbnail.png"},{"code":"map-drilldown-preloaded","name":"Map drilldown with preloaded data","img":"https://www.highcharts.com/demo/images/samples/maps/demo/map-drilldown-preloaded/thumbnail.png"},{"code":"projection-explorer","name":"Projection Explorer","img":"https://www.highcharts.com/demo/images/samples/maps/demo/projection-explorer/thumbnail.png"},{"code":"rich-info","name":"Rich information on click","img":"https://www.highcharts.com/demo/images/samples/maps/demo/rich-info/thumbnail.png","parent":"dynamic","data":{"js":"(async () => {\n\n    const topology = await fetch(\n        'https://code.highcharts.com/mapdata/custom/world.topo.json'\n    ).then(response => response.json());\n\n    const csv = await fetch(\n        'https://cdn.jsdelivr.net/gh/highcharts/highcharts@v7.0.0/samples/data/world-population-history.csv'\n    ).then(response => response.text());\n\n    // Very simple and case-specific CSV string splitting\n    const CSVtoArray = text => text.replace(/^\"/, '')\n        .replace(/\",$/, '')\n        .split('\",\"');\n\n    const csvArr = csv.split(/\\n/),\n        countries = {},\n        numRegex = /^[0-9\\.]+$/,\n        lastCommaRegex = /,\\s$/,\n        quoteRegex = /\\\"/g,\n        categories = CSVtoArray(csvArr[2]).slice(4);\n\n    let countryChart;\n\n    // Parse the CSV into arrays, one array each country\n    csvArr.slice(3).forEach(function (line) {\n        var row = CSVtoArray(line),\n            data = row.slice(4);\n\n        data.forEach(function (val, i) {\n            val = val.replace(quoteRegex, '');\n            if (numRegex.test(val)) {\n                val = parseInt(val, 10);\n            } else if (!val || lastCommaRegex.test(val)) {\n                val = null;\n            }\n            data[i] = val;\n        });\n\n        countries[row[1]] = {\n            name: row[0],\n            code3: row[1],\n            data: data\n        };\n    });\n\n    // For each country, use the latest value for current population\n    const data = [];\n    for (const code3 in countries) {\n        if (Object.hasOwnProperty.call(countries, code3)) {\n            const itemData = countries[code3].data;\n            let value = null,\n                i = itemData.length,\n                year;\n\n            while (i--) {\n                if (typeof itemData[i] === 'number') {\n                    value = itemData[i];\n                    year = categories[i];\n                    break;\n                }\n            }\n            data.push({\n                name: countries[code3].name,\n                code3: code3,\n                value: value,\n                year: year\n            });\n        }\n    }\n\n    // Add lower case codes to the data set for inclusion in the tooltip.pointFormat\n    const mapData = Highcharts.geojson(topology);\n    mapData.forEach(function (country) {\n        country.id = country.properties['hc-key']; // for Chart.get()\n        country.flag = country.id.replace('UK', 'GB').toLowerCase();\n    });\n\n    // Wrap point.select to get to the total selected points\n    Highcharts.wrap(Highcharts.Point.prototype, 'select', function (proceed) {\n\n        proceed.apply(this, Array.prototype.slice.call(arguments, 1));\n\n        const points = this.series.chart.getSelectedPoints();\n        if (points.length) {\n            if (points.length === 1) {\n                document.querySelector('#info #flag')\n                    .className = 'flag ' + points[0].flag;\n                document.querySelector('#info h2').innerHTML = points[0].name;\n            } else {\n                document.querySelector('#info #flag')\n                    .className = 'flag';\n                document.querySelector('#info h2').innerHTML = 'Comparing countries';\n\n            }\n            document.querySelector('#info .subheader')\n                .innerHTML = '<h4>Historical population</h4><small><em>Shift + Click on map to compare countries</em></small>';\n\n            if (!countryChart) {\n                countryChart = Highcharts.chart('country-chart', {\n                    chart: {\n                        height: 250\n                    },\n                    credits: {\n                        enabled: false\n                    },\n                    title: {\n                        text: null\n                    },\n                    subtitle: {\n                        text: null\n                    },\n                    xAxis: {\n                        tickPixelInterval: 50,\n                        crosshair: true\n                    },\n                    yAxis: {\n                        title: null,\n                        opposite: true\n                    },\n                    tooltip: {\n                        split: true\n                    },\n                    plotOptions: {\n                        series: {\n                            animation: {\n                                duration: 500\n                            },\n                            marker: {\n                                enabled: false\n                            },\n                            threshold: 0,\n                            pointStart: parseInt(categories[0], 10)\n                        }\n                    }\n                });\n            }\n\n            countryChart.series.slice(0).forEach(function (s) {\n                s.remove(false);\n            });\n            points.forEach(function (p) {\n                countryChart.addSeries({\n                    name: p.name,\n                    data: countries[p.code3].data,\n                    type: points.length > 1 ? 'line' : 'area'\n                }, false);\n            });\n            countryChart.redraw();\n\n        } else {\n            document.querySelector('#info #flag').className = '';\n            document.querySelector('#info h2').innerHTML = '';\n            document.querySelector('#info .subheader').innerHTML = '';\n            if (countryChart) {\n                countryChart = countryChart.destroy();\n            }\n        }\n    });\n\n    // Initiate the map chart\n    const mapChart = Highcharts.mapChart('container', {\n\n        chart: {\n            map: topology\n        },\n\n        title: {\n            text: 'Population history by country'\n        },\n\n        subtitle: {\n            text: 'Source: <a href=\"http://data.worldbank.org/indicator/SP.POP.TOTL/countries/1W?display=default\">The World Bank</a>'\n        },\n\n        mapNavigation: {\n            enabled: true,\n            buttonOptions: {\n                verticalAlign: 'bottom'\n            }\n        },\n\n        mapView: {\n            fitToGeometry: {\n                type: 'MultiPoint',\n                coordinates: [\n                    // Alaska west\n                    [-164, 54],\n                    // Greenland north\n                    [-35, 84],\n                    // New Zealand east\n                    [179, -38],\n                    // Chile south\n                    [-68, -55]\n                ]\n            }\n        },\n\n        colorAxis: {\n            type: 'logarithmic',\n            endOnTick: false,\n            startOnTick: false,\n            min: 50000\n        },\n\n        tooltip: {\n            footerFormat: '<span style=\"font-size: 10px\">(Click for details)</span>'\n        },\n\n        series: [{\n            data: data,\n            mapData: mapData,\n            joinBy: ['iso-a3', 'code3'],\n            name: 'Current population',\n            allowPointSelect: true,\n            cursor: 'pointer',\n            states: {\n                select: {\n                    color: '#a4edba',\n                    borderColor: 'black',\n                    dashStyle: 'shortdot'\n                }\n            },\n            borderWidth: 0.5\n        }]\n    });\n\n    // Pre-select a country\n    mapChart.get('us').select();\n\n})();","css":"* {\n    font-family: sans-serif;\n}\n\n#wrapper {\n    height: 500px;\n    width: 1000px;\n    margin: 0 auto;\n    padding: 0;\n    overflow: visible;\n}\n\n#container {\n    float: left;\n    height: 500px;\n    width: 700px;\n    margin: 0;\n}\n\n#info {\n    float: left;\n    width: 270px;\n    padding-left: 20px;\n    margin: 100px 0 0;\n}\n\n#info h2 {\n    display: inline;\n    font-size: 13pt;\n    text-transform: none;\n}\n\n#info .f32 .flag {\n    vertical-align: bottom !important;\n}\n\n#info h4 {\n    margin: 1em 0 0;\n    font-size: 12pt;\n    text-transform: none;\n}\n\n@media screen and (max-width: 1000px) {\n    #wrapper,\n    #container,\n    #info {\n        float: none;\n        width: 100%;\n        height: auto;\n        margin: 0.5em 0;\n        padding: 0;\n        border: none;\n    }\n}\n.highcharts-menu hr {margin: unset}","html":"Verify that clicking a country makes it appear in the history chart. Shift-click\nmultiple countries and verify that all countries appear in the chart.","npm":"// 安装\nnpm install highcharts@10.3.3 --save\n\n// import 模块 \nimport SandSignika from 'highcharts/themes/sand-signika';\n\n// 初始化模块\nSandSignika(Highcharts);\n","scripts":["https://code.highcharts.com/10.3.3/themes/sand-signika.js"]},"pre":"projection-explorer","next":"doubleclickzoomto"},{"code":"doubleclickzoomto","name":"Zoom to area by double click","img":"https://www.highcharts.com/demo/images/samples/maps/demo/doubleclickzoomto/thumbnail.png"}]},{"name":"Input formats","code":"input-formats","children":[{"code":"latlon-advanced","name":"Advanced lat/long","img":"https://www.highcharts.com/demo/images/samples/maps/demo/latlon-advanced/thumbnail.png"},{"code":"geojson","name":"GeoJSON areas","img":"https://www.highcharts.com/demo/images/samples/maps/demo/geojson/thumbnail.png"},{"code":"mappoint-latlon","name":"Map point with lat/long","img":"https://www.highcharts.com/demo/images/samples/maps/demo/mappoint-latlon/thumbnail.png"}]},{"name":"Series types","code":"series-types","children":[{"code":"mappoint-datalabels-mapmarker","name":"Data labels as map markers","img":"https://www.highcharts.com/demo/images/samples/maps/demo/mappoint-datalabels-mapmarker/thumbnail.png"},{"code":"geoheatmap-orthographic","name":"Density of Cities in the World","img":"https://www.highcharts.com/demo/images/samples/maps/demo/geoheatmap-orthographic/thumbnail.png"},{"code":"geoheatmap-europe","name":"European Train Stations Near Airports","img":"https://www.highcharts.com/demo/images/samples/maps/demo/geoheatmap-europe/thumbnail.png"},{"code":"geoheatmap-equalearth","name":"GeoHeatmap Aerosol Particle Radius In September 2016","img":"https://www.highcharts.com/demo/images/samples/maps/demo/geoheatmap-equalearth/thumbnail.png"},{"code":"heatmap","name":"Heat map","img":"https://www.highcharts.com/demo/images/samples/maps/demo/heatmap/thumbnail.png"},{"code":"map-bubble","name":"Map bubble","img":"https://www.highcharts.com/demo/images/samples/maps/demo/map-bubble/thumbnail.png"},{"code":"mappoint-mapmarker","name":"Map markers","img":"https://www.highcharts.com/demo/images/samples/maps/demo/mappoint-mapmarker/thumbnail.png"},{"code":"circlemap-africa","name":"Tile map, circles","img":"https://www.highcharts.com/demo/images/samples/maps/demo/circlemap-africa/thumbnail.png"},{"code":"diamondmap","name":"Tile map, diamonds","img":"https://www.highcharts.com/demo/images/samples/maps/demo/diamondmap/thumbnail.png"},{"code":"honeycomb-usa","name":"Tile map, honeycomb","img":"https://www.highcharts.com/demo/images/samples/maps/demo/honeycomb-usa/thumbnail.png"}]}],"demo":"rich-info","current":{"code":"rich-info","name":"Rich information on click","img":"https://www.highcharts.com/demo/images/samples/maps/demo/rich-info/thumbnail.png","parent":"dynamic","data":{"js":"(async () => {\n\n    const topology = await fetch(\n        'https://code.highcharts.com/mapdata/custom/world.topo.json'\n    ).then(response => response.json());\n\n    const csv = await fetch(\n        'https://cdn.jsdelivr.net/gh/highcharts/highcharts@v7.0.0/samples/data/world-population-history.csv'\n    ).then(response => response.text());\n\n    // Very simple and case-specific CSV string splitting\n    const CSVtoArray = text => text.replace(/^\"/, '')\n        .replace(/\",$/, '')\n        .split('\",\"');\n\n    const csvArr = csv.split(/\\n/),\n        countries = {},\n        numRegex = /^[0-9\\.]+$/,\n        lastCommaRegex = /,\\s$/,\n        quoteRegex = /\\\"/g,\n        categories = CSVtoArray(csvArr[2]).slice(4);\n\n    let countryChart;\n\n    // Parse the CSV into arrays, one array each country\n    csvArr.slice(3).forEach(function (line) {\n        var row = CSVtoArray(line),\n            data = row.slice(4);\n\n        data.forEach(function (val, i) {\n            val = val.replace(quoteRegex, '');\n            if (numRegex.test(val)) {\n                val = parseInt(val, 10);\n            } else if (!val || lastCommaRegex.test(val)) {\n                val = null;\n            }\n            data[i] = val;\n        });\n\n        countries[row[1]] = {\n            name: row[0],\n            code3: row[1],\n            data: data\n        };\n    });\n\n    // For each country, use the latest value for current population\n    const data = [];\n    for (const code3 in countries) {\n        if (Object.hasOwnProperty.call(countries, code3)) {\n            const itemData = countries[code3].data;\n            let value = null,\n                i = itemData.length,\n                year;\n\n            while (i--) {\n                if (typeof itemData[i] === 'number') {\n                    value = itemData[i];\n                    year = categories[i];\n                    break;\n                }\n            }\n            data.push({\n                name: countries[code3].name,\n                code3: code3,\n                value: value,\n                year: year\n            });\n        }\n    }\n\n    // Add lower case codes to the data set for inclusion in the tooltip.pointFormat\n    const mapData = Highcharts.geojson(topology);\n    mapData.forEach(function (country) {\n        country.id = country.properties['hc-key']; // for Chart.get()\n        country.flag = country.id.replace('UK', 'GB').toLowerCase();\n    });\n\n    // Wrap point.select to get to the total selected points\n    Highcharts.wrap(Highcharts.Point.prototype, 'select', function (proceed) {\n\n        proceed.apply(this, Array.prototype.slice.call(arguments, 1));\n\n        const points = this.series.chart.getSelectedPoints();\n        if (points.length) {\n            if (points.length === 1) {\n                document.querySelector('#info #flag')\n                    .className = 'flag ' + points[0].flag;\n                document.querySelector('#info h2').innerHTML = points[0].name;\n            } else {\n                document.querySelector('#info #flag')\n                    .className = 'flag';\n                document.querySelector('#info h2').innerHTML = 'Comparing countries';\n\n            }\n            document.querySelector('#info .subheader')\n                .innerHTML = '<h4>Historical population</h4><small><em>Shift + Click on map to compare countries</em></small>';\n\n            if (!countryChart) {\n                countryChart = Highcharts.chart('country-chart', {\n                    chart: {\n                        height: 250\n                    },\n                    credits: {\n                        enabled: false\n                    },\n                    title: {\n                        text: null\n                    },\n                    subtitle: {\n                        text: null\n                    },\n                    xAxis: {\n                        tickPixelInterval: 50,\n                        crosshair: true\n                    },\n                    yAxis: {\n                        title: null,\n                        opposite: true\n                    },\n                    tooltip: {\n                        split: true\n                    },\n                    plotOptions: {\n                        series: {\n                            animation: {\n                                duration: 500\n                            },\n                            marker: {\n                                enabled: false\n                            },\n                            threshold: 0,\n                            pointStart: parseInt(categories[0], 10)\n                        }\n                    }\n                });\n            }\n\n            countryChart.series.slice(0).forEach(function (s) {\n                s.remove(false);\n            });\n            points.forEach(function (p) {\n                countryChart.addSeries({\n                    name: p.name,\n                    data: countries[p.code3].data,\n                    type: points.length > 1 ? 'line' : 'area'\n                }, false);\n            });\n            countryChart.redraw();\n\n        } else {\n            document.querySelector('#info #flag').className = '';\n            document.querySelector('#info h2').innerHTML = '';\n            document.querySelector('#info .subheader').innerHTML = '';\n            if (countryChart) {\n                countryChart = countryChart.destroy();\n            }\n        }\n    });\n\n    // Initiate the map chart\n    const mapChart = Highcharts.mapChart('container', {\n\n        chart: {\n            map: topology\n        },\n\n        title: {\n            text: 'Population history by country'\n        },\n\n        subtitle: {\n            text: 'Source: <a href=\"http://data.worldbank.org/indicator/SP.POP.TOTL/countries/1W?display=default\">The World Bank</a>'\n        },\n\n        mapNavigation: {\n            enabled: true,\n            buttonOptions: {\n                verticalAlign: 'bottom'\n            }\n        },\n\n        mapView: {\n            fitToGeometry: {\n                type: 'MultiPoint',\n                coordinates: [\n                    // Alaska west\n                    [-164, 54],\n                    // Greenland north\n                    [-35, 84],\n                    // New Zealand east\n                    [179, -38],\n                    // Chile south\n                    [-68, -55]\n                ]\n            }\n        },\n\n        colorAxis: {\n            type: 'logarithmic',\n            endOnTick: false,\n            startOnTick: false,\n            min: 50000\n        },\n\n        tooltip: {\n            footerFormat: '<span style=\"font-size: 10px\">(Click for details)</span>'\n        },\n\n        series: [{\n            data: data,\n            mapData: mapData,\n            joinBy: ['iso-a3', 'code3'],\n            name: 'Current population',\n            allowPointSelect: true,\n            cursor: 'pointer',\n            states: {\n                select: {\n                    color: '#a4edba',\n                    borderColor: 'black',\n                    dashStyle: 'shortdot'\n                }\n            },\n            borderWidth: 0.5\n        }]\n    });\n\n    // Pre-select a country\n    mapChart.get('us').select();\n\n})();","css":"* {\n    font-family: sans-serif;\n}\n\n#wrapper {\n    height: 500px;\n    width: 1000px;\n    margin: 0 auto;\n    padding: 0;\n    overflow: visible;\n}\n\n#container {\n    float: left;\n    height: 500px;\n    width: 700px;\n    margin: 0;\n}\n\n#info {\n    float: left;\n    width: 270px;\n    padding-left: 20px;\n    margin: 100px 0 0;\n}\n\n#info h2 {\n    display: inline;\n    font-size: 13pt;\n    text-transform: none;\n}\n\n#info .f32 .flag {\n    vertical-align: bottom !important;\n}\n\n#info h4 {\n    margin: 1em 0 0;\n    font-size: 12pt;\n    text-transform: none;\n}\n\n@media screen and (max-width: 1000px) {\n    #wrapper,\n    #container,\n    #info {\n        float: none;\n        width: 100%;\n        height: auto;\n        margin: 0.5em 0;\n        padding: 0;\n        border: none;\n    }\n}\n.highcharts-menu hr {margin: unset}","html":"Verify that clicking a country makes it appear in the history chart. Shift-click\nmultiple countries and verify that all countries appear in the chart.","npm":"// 安装\nnpm install highcharts@10.3.3 --save\n\n// import 模块 \nimport SandSignika from 'highcharts/themes/sand-signika';\n\n// 初始化模块\nSandSignika(Highcharts);\n","scripts":["https://code.highcharts.com/10.3.3/themes/sand-signika.js"]},"pre":"projection-explorer","next":"doubleclickzoomto"},"product":"maps","theme":"sand-signika","_global":{"scripts":["https://code.highcharts.com/10.3.3/themes/sand-signika.js"],"css":"* {\n    font-family: sans-serif;\n}\n\n#wrapper {\n    height: 500px;\n    width: 1000px;\n    margin: 0 auto;\n    padding: 0;\n    overflow: visible;\n}\n\n#container {\n    float: left;\n    height: 500px;\n    width: 700px;\n    margin: 0;\n}\n\n#info {\n    float: left;\n    width: 270px;\n    padding-left: 20px;\n    margin: 100px 0 0;\n}\n\n#info h2 {\n    display: inline;\n    font-size: 13pt;\n    text-transform: none;\n}\n\n#info .f32 .flag {\n    vertical-align: bottom !important;\n}\n\n#info h4 {\n    margin: 1em 0 0;\n    font-size: 12pt;\n    text-transform: none;\n}\n\n@media screen and (max-width: 1000px) {\n    #wrapper,\n    #container,\n    #info {\n        float: none;\n        width: 100%;\n        height: auto;\n        margin: 0.5em 0;\n        padding: 0;\n        border: none;\n    }\n}\n.highcharts-menu hr {margin: unset}","script":"(async () => {\n\n    const topology = await fetch(\n        'https://code.highcharts.com/mapdata/custom/world.topo.json'\n    ).then(response => response.json());\n\n    const csv = await fetch(\n        'https://cdn.jsdelivr.net/gh/highcharts/highcharts@v7.0.0/samples/data/world-population-history.csv'\n    ).then(response => response.text());\n\n    // Very simple and case-specific CSV string splitting\n    const CSVtoArray = text => text.replace(/^\"/, '')\n        .replace(/\",$/, '')\n        .split('\",\"');\n\n    const csvArr = csv.split(/\\n/),\n        countries = {},\n        numRegex = /^[0-9\\.]+$/,\n        lastCommaRegex = /,\\s$/,\n        quoteRegex = /\\\"/g,\n        categories = CSVtoArray(csvArr[2]).slice(4);\n\n    let countryChart;\n\n    // Parse the CSV into arrays, one array each country\n    csvArr.slice(3).forEach(function (line) {\n        var row = CSVtoArray(line),\n            data = row.slice(4);\n\n        data.forEach(function (val, i) {\n            val = val.replace(quoteRegex, '');\n            if (numRegex.test(val)) {\n                val = parseInt(val, 10);\n            } else if (!val || lastCommaRegex.test(val)) {\n                val = null;\n            }\n            data[i] = val;\n        });\n\n        countries[row[1]] = {\n            name: row[0],\n            code3: row[1],\n            data: data\n        };\n    });\n\n    // For each country, use the latest value for current population\n    const data = [];\n    for (const code3 in countries) {\n        if (Object.hasOwnProperty.call(countries, code3)) {\n            const itemData = countries[code3].data;\n            let value = null,\n                i = itemData.length,\n                year;\n\n            while (i--) {\n                if (typeof itemData[i] === 'number') {\n                    value = itemData[i];\n                    year = categories[i];\n                    break;\n                }\n            }\n            data.push({\n                name: countries[code3].name,\n                code3: code3,\n                value: value,\n                year: year\n            });\n        }\n    }\n\n    // Add lower case codes to the data set for inclusion in the tooltip.pointFormat\n    const mapData = Highcharts.geojson(topology);\n    mapData.forEach(function (country) {\n        country.id = country.properties['hc-key']; // for Chart.get()\n        country.flag = country.id.replace('UK', 'GB').toLowerCase();\n    });\n\n    // Wrap point.select to get to the total selected points\n    Highcharts.wrap(Highcharts.Point.prototype, 'select', function (proceed) {\n\n        proceed.apply(this, Array.prototype.slice.call(arguments, 1));\n\n        const points = this.series.chart.getSelectedPoints();\n        if (points.length) {\n            if (points.length === 1) {\n                document.querySelector('#info #flag')\n                    .className = 'flag ' + points[0].flag;\n                document.querySelector('#info h2').innerHTML = points[0].name;\n            } else {\n                document.querySelector('#info #flag')\n                    .className = 'flag';\n                document.querySelector('#info h2').innerHTML = 'Comparing countries';\n\n            }\n            document.querySelector('#info .subheader')\n                .innerHTML = '<h4>Historical population</h4><small><em>Shift + Click on map to compare countries</em></small>';\n\n            if (!countryChart) {\n                countryChart = Highcharts.chart('country-chart', {\n                    chart: {\n                        height: 250\n                    },\n                    credits: {\n                        enabled: false\n                    },\n                    title: {\n                        text: null\n                    },\n                    subtitle: {\n                        text: null\n                    },\n                    xAxis: {\n                        tickPixelInterval: 50,\n                        crosshair: true\n                    },\n                    yAxis: {\n                        title: null,\n                        opposite: true\n                    },\n                    tooltip: {\n                        split: true\n                    },\n                    plotOptions: {\n                        series: {\n                            animation: {\n                                duration: 500\n                            },\n                            marker: {\n                                enabled: false\n                            },\n                            threshold: 0,\n                            pointStart: parseInt(categories[0], 10)\n                        }\n                    }\n                });\n            }\n\n            countryChart.series.slice(0).forEach(function (s) {\n                s.remove(false);\n            });\n            points.forEach(function (p) {\n                countryChart.addSeries({\n                    name: p.name,\n                    data: countries[p.code3].data,\n                    type: points.length > 1 ? 'line' : 'area'\n                }, false);\n            });\n            countryChart.redraw();\n\n        } else {\n            document.querySelector('#info #flag').className = '';\n            document.querySelector('#info h2').innerHTML = '';\n            document.querySelector('#info .subheader').innerHTML = '';\n            if (countryChart) {\n                countryChart = countryChart.destroy();\n            }\n        }\n    });\n\n    // Initiate the map chart\n    const mapChart = Highcharts.mapChart('container', {\n\n        chart: {\n            map: topology\n        },\n\n        title: {\n            text: 'Population history by country'\n        },\n\n        subtitle: {\n            text: 'Source: <a href=\"http://data.worldbank.org/indicator/SP.POP.TOTL/countries/1W?display=default\">The World Bank</a>'\n        },\n\n        mapNavigation: {\n            enabled: true,\n            buttonOptions: {\n                verticalAlign: 'bottom'\n            }\n        },\n\n        mapView: {\n            fitToGeometry: {\n                type: 'MultiPoint',\n                coordinates: [\n                    // Alaska west\n                    [-164, 54],\n                    // Greenland north\n                    [-35, 84],\n                    // New Zealand east\n                    [179, -38],\n                    // Chile south\n                    [-68, -55]\n                ]\n            }\n        },\n\n        colorAxis: {\n            type: 'logarithmic',\n            endOnTick: false,\n            startOnTick: false,\n            min: 50000\n        },\n\n        tooltip: {\n            footerFormat: '<span style=\"font-size: 10px\">(Click for details)</span>'\n        },\n\n        series: [{\n            data: data,\n            mapData: mapData,\n            joinBy: ['iso-a3', 'code3'],\n            name: 'Current population',\n            allowPointSelect: true,\n            cursor: 'pointer',\n            states: {\n                select: {\n                    color: '#a4edba',\n                    borderColor: 'black',\n                    dashStyle: 'shortdot'\n                }\n            },\n            borderWidth: 0.5\n        }]\n    });\n\n    // Pre-select a country\n    mapChart.get('us').select();\n\n})();"},"hidePageCover":true}}]
