{"js":"(async () => {\n    let sonifyOnHover = false;\n\n    const topology = await fetch(\n        'https://code.highcharts.com/mapdata/countries/fr/fr-all.topo.json'\n    ).then(response => response.json());\n\n    // Instantiate the map\n    Highcharts.mapChart('container', {\n        chart: {\n            map: topology\n        },\n        title: {\n            text: 'France population density (/km²)',\n            align: 'left'\n        },\n        subtitle: {\n            text: 'Click a map area to start sonifying as you interact with the map',\n            align: 'left'\n        },\n        sonification: {\n            // Play marker / tooltip can make it hard to click other points\n            // while a point is playing, so we turn it off\n            showTooltip: false\n        },\n        legend: {\n            layout: 'vertical',\n            backgroundColor: 'rgba(255,255,255,0.85)',\n            floating: true,\n            verticalAlign: 'bottom',\n            align: 'left',\n            symbolHeight: 450\n        },\n        colorAxis: {\n            min: 1,\n            max: 1000,\n            type: 'logarithmic',\n            stops: [\n                [0, '#0B4C63'],\n                [0.5, '#7350BB'],\n                [0.7, '#3CD391'],\n                [0.9, '#4AA0FF']\n            ],\n            marker: {\n                color: '#343'\n            }\n        },\n        responsive: {\n            rules: [{\n                condition: {\n                    maxWidth: 580\n                },\n                chartOptions: {\n                    legend: {\n                        layout: 'horizontal',\n                        floating: false,\n                        align: 'center',\n                        symbolHeight: 10\n                    }\n                }\n            }]\n        },\n        tooltip: {\n            valueSuffix: '/km²'\n        },\n        series: [{\n            name: 'Population density',\n            sonification: {\n                tracks: [{\n                    // First play a note to indicate new map area\n                    instrument: 'vibraphone',\n                    mapping: {\n                        pitch: 'c7',\n                        volume: 0.3\n                    }\n                }, {\n                    mapping: {\n                        // Array of notes to play. We just repeat the same note\n                        // and vary the gap between the notes to indicate\n                        // density. Note: Can use Array.from in modern browsers\n                        pitch: Array.apply(null, Array(25)).map(function () {\n                            return 'g2';\n                        }),\n                        gapBetweenNotes: {\n                            mapTo: '-value', // Smaller value = bigger gaps\n                            min: 90,\n                            max: 1000,\n                            mapFunction: 'logarithmic'\n                        },\n                        pan: 0,\n                        noteDuration: 500,\n                        playDelay: 150 // Make space for initial notification\n                    }\n                }, {\n                    // Speak the name after a while\n                    type: 'speech',\n                    language: 'fr-FR', // Speak in French, preferably\n                    mapping: {\n                        text: '{point.name}',\n                        volume: 0.4,\n                        rate: 1.5,\n                        playDelay: 1500\n                    }\n                }]\n            },\n            accessibility: {\n                point: {\n                    valueDescriptionFormat: '{xDescription}, {point.value} people per square kilometer.'\n                }\n            },\n            events: {\n                mouseOut: function () {\n                    // Cancel sonification when mousing out of point\n                    this.chart.sonification.cancel();\n                }\n            },\n            point: {\n                // Handle when to sonify and not\n                events: {\n                    // We require a click before we start playing, so we don't\n                    // surprise users. Also some browsers will block audio\n                    // until there have been interactions.\n                    click: function () {\n                        if (!sonifyOnHover) {\n                            this.sonify();\n                        } else {\n                            this.series.chart.sonification.cancel();\n                        }\n                        sonifyOnHover = !sonifyOnHover;\n                    },\n                    mouseOver: function () {\n                        if (sonifyOnHover) {\n                            this.sonify();\n                        }\n                    }\n                }\n            },\n            cursor: 'pointer',\n            borderColor: '#4A5A4A',\n            dataLabels: {\n                enabled: true,\n                format: '{point.name}'\n            },\n            data: [\n                ['fr-hdf', 189],\n                ['fr-nor', 111],\n                ['fr-idf', 1021],\n                ['fr-ges', 97],\n                ['fr-bre', 123],\n                ['fr-pdl', 119],\n                ['fr-cvl', 66],\n                ['fr-bfc', 59],\n                ['fr-naq', 72],\n                ['fr-ara', 115],\n                ['fr-occ', 82],\n                ['fr-pac', 162],\n                ['fr-lre', 344],\n                ['fr-may', 1],\n                ['fr-gf', 3],\n                ['fr-mq', 323],\n                ['fr-gua', 236],\n                ['fr-cor', 39]\n            ]\n        }]\n    });\n})();","css":".highcharts-figure {\n    min-width: 320px;\n    max-width: 750px;\n    margin: 0 auto;\n}\n\n#container {\n    height: 550px;\n}\n\n.loading {\n    margin-top: 10em;\n    text-align: center;\n    color: gray;\n}\n","html":"\n<figure class=\"highcharts-figure\">\n    <div id=\"container\"></div>\n    <p class=\"highcharts-description\">\n        This audio map can be interacted with by clicking the map regions. The demo illustrates one way to use the sonification module with maps. Repeated sounds play with varying speed to indicate the population density of a region. After a while, the name of the region is announced with speech. A notification sound plays when moving between regions.\n    </p>\n</figure>\n","npm":"// 安装\nnpm install highcharts@11.0.0 --save\n\n// import 模块 \nimport Highcharts    from 'highcharts/highmaps';\nimport Sonification  from 'highcharts/modules/sonification';\nimport Accessibility from 'highcharts/modules/accessibility';\n\n// 初始化模块\nSonification(Highcharts);\nAccessibility(Highcharts);\n","scripts":["https://code.highcharts.com/maps/11.0.0/highmaps.js","https://code.highcharts.com/maps/11.0.0/modules/sonification.js","https://code.highcharts.com/maps/11.0.0/modules/accessibility.js"]}