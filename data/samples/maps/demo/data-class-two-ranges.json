{"js":"(async () => {\n\n    const mapData = await fetch(\n        'https://code.highcharts.com/mapdata/countries/us/us-all.topo.json'\n    ).then(response => response.json());\n\n    // Load the data from a Google Spreadsheet\n    // https://docs.google.com/spreadsheets/d/1uj1Gzv3fpH-b0w2tYpuKNp3TrGr43I9XAAqmgVE_jMs\n    Highcharts.data({\n        googleAPIKey: 'AIzaSyCQ0Jh8OFRShXam8adBbBcctlbeeA-qJOk',\n        googleSpreadsheetKey: '1uj1Gzv3fpH-b0w2tYpuKNp3TrGr43I9XAAqmgVE_jMs',\n\n        // Custom handler for columns\n        parsed: function (columns) {\n\n            /**\n             * Event handler for clicking points. Use jQuery UI to pop up\n             * a pie chart showing the details for each state.\n             */\n            function pointClick() {\n                var row = this.options.row,\n                    $div = $('<div></div>')\n                        .dialog({\n                            title: this.name,\n                            width: 320,\n                            height: 300\n                        });\n\n                window.chart = new Highcharts.Chart({\n                    chart: {\n                        renderTo: $div[0],\n                        type: 'pie',\n                        width: 290,\n                        height: 240\n                    },\n                    title: {\n                        text: null\n                    },\n                    series: [{\n                        name: 'Votes',\n                        data: [{\n                            name: 'Trump',\n                            color: '#C40401',\n                            y: parseInt(columns[3][row], 10)\n                        }, {\n                            name: 'Clinton',\n                            color: '#0200D0',\n                            y: parseInt(columns[2][row], 10)\n                        }],\n                        dataLabels: {\n                            format: '<b>{point.name}</b> {point.percentage:.1f}%'\n                        }\n                    }]\n                });\n            }\n\n            // Make the columns easier to read\n\n            var keys = columns[0],\n                names = columns[1],\n                percent = columns[7],\n                // Build the chart options\n                options = {\n                    chart: {\n                        type: 'map',\n                        map: mapData,\n                        renderTo: 'container',\n                        borderWidth: 1\n                    },\n\n                    title: {\n                        text: 'US presidential election 2016 results',\n                        align: 'left'\n                    },\n                    subtitle: {\n                        text: 'Source: <a href=\"https://transition.fec.gov/pubrec/fe2016/2016presgeresults.pdf\">Federal Election Commission</a>',\n                        align: 'left'\n                    },\n\n                    legend: {\n                        align: 'right',\n                        verticalAlign: 'top',\n                        x: -100,\n                        y: 70,\n                        floating: true,\n                        layout: 'vertical',\n                        valueDecimals: 0,\n                        backgroundColor: ( // theme\n                            Highcharts.defaultOptions &&\n                            Highcharts.defaultOptions.legend &&\n                            Highcharts.defaultOptions.legend.backgroundColor\n                        ) || 'rgba(255, 255, 255, 0.85)'\n                    },\n\n                    mapNavigation: {\n                        enabled: true,\n                        enableButtons: false\n                    },\n\n                    colorAxis: {\n                        dataClasses: [{\n                            from: -100,\n                            to: 0,\n                            color: '#0200D0',\n                            name: 'Clinton'\n                        }, {\n                            from: 0,\n                            to: 100,\n                            color: '#C40401',\n                            name: 'Trump'\n                        }]\n                    },\n\n                    series: [{\n                        data: [],\n                        joinBy: 'postal-code',\n                        dataLabels: {\n                            enabled: true,\n                            color: '#FFFFFF',\n                            format: '{point.postal-code}',\n                            style: {\n                                textTransform: 'uppercase'\n                            }\n                        },\n                        name: 'Republicans margin',\n                        point: {\n                            events: {\n                                click: pointClick\n                            }\n                        },\n                        tooltip: {\n                            ySuffix: ' %'\n                        },\n                        cursor: 'pointer'\n                    }, {\n                        name: 'Separators',\n                        type: 'mapline',\n                        nullColor: 'silver',\n                        showInLegend: false,\n                        enableMouseTracking: false,\n                        accessibility: {\n                            enabled: false\n                        }\n                    }]\n                };\n            keys = keys.map(function (key) {\n                return key.toUpperCase();\n            });\n            mapData.objects.default.geometries.forEach(function (geometry) {\n                if (geometry.properties['postal-code']) {\n                    var postalCode = geometry.properties['postal-code'],\n                        i = $.inArray(postalCode, keys);\n                    options.series[0].data.push(Highcharts.extend({\n                        value: parseFloat(percent[i]),\n                        name: names[i],\n                        'postal-code': postalCode,\n                        row: i\n                    }, geometry));\n                }\n            });\n\n            // Initialize the chart\n            window.chart = new Highcharts.Map(options);\n        },\n\n        error: function () {\n            $('#container').html('<div class=\"loading\">' +\n                '<i class=\"icon-frown icon-large\"></i> ' +\n                '<p>Error loading data from Google Spreadsheets</p>' +\n                '</div>');\n        }\n    });\n\n})();\n","css":"#container {\n    height: 500px;\n    min-width: 310px;\n    max-width: 600px;\n    margin: 0 auto;\n}\n\n.loading {\n    margin-top: 10em;\n    text-align: center;\n    color: gray;\n}\n","html":"   \n<link href=\"https://ajax.googleapis.com/ajax/libs/jqueryui/1.12.1/themes/base/jquery-ui.css\" rel=\"stylesheet\" type=\"text/css\" />\n<link href=\"https://netdna.bootstrapcdn.com/font-awesome/3.2.1/css/font-awesome.css\" rel=\"stylesheet\" type=\"text/css\" />\n\n<div id=\"container\">\n    <div class=\"loading\">\n        <i class=\"icon-spinner icon-spin icon-large\"></i>\n        Loading data from Google Spreadsheets...\n    </div>\n</div>\n","npm":"// 安装\nnpm install highcharts@11.0.0 --save\n\n// import 模块 \nimport Jquery3.1.1.min  from 'https://code.jquery.com/jquery-3.1.1.min.js';\nimport Highcharts       from 'highcharts';\nimport Map              from 'highcharts/modules/map';\nimport Data             from 'highcharts/modules/data';\nimport Exporting        from 'highcharts/modules/exporting';\nimport OfflineExporting from 'highcharts/modules/offline-exporting';\nimport Accessibility    from 'highcharts/modules/accessibility';\nimport JqueryUi.min     from 'https://ajax.googleapis.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.js';\n\n// 初始化模块\nJquery3.1.1.min(Highcharts);\nMap(Highcharts);\nData(Highcharts);\nExporting(Highcharts);\nOfflineExporting(Highcharts);\nAccessibility(Highcharts);\nJqueryUi.min(Highcharts);\n","scripts":["https://code.jquery.com/jquery-3.1.1.min.js","https://code.highcharts.com/11.0.0/highcharts.js","https://code.highcharts.com/maps/11.0.0/modules/map.js","https://code.highcharts.com/maps/11.0.0/modules/data.js","https://code.highcharts.com/maps/11.0.0/modules/exporting.js","https://code.highcharts.com/maps/11.0.0/modules/offline-exporting.js","https://code.highcharts.com/maps/11.0.0/modules/accessibility.js","https://ajax.googleapis.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.js"]}