{"js":"(async () => {\n    const topology = await fetch(\n        'https://code.highcharts.com/mapdata/custom/world-continents.topo.json'\n    ).then(response => response.json());\n\n    Highcharts.mapChart('container', {\n        chart: {\n            map: topology,\n            margin: 1\n        },\n\n        title: {\n            text: 'Early human migration paths',\n            margin: 4,\n            align: 'left',\n            style: {\n                textOutline: '5px contrast'\n            }\n        },\n\n        subtitle: {\n            text: 'Source: <a href=\"https://www.nationalgeographic.com/culture/article/migration\">National Geographic</a>',\n            align: 'left',\n            style: {\n                textOutline: '5px contrast'\n            }\n        },\n\n        mapView: {\n            projection: {\n                rotation: [-150],\n                name: 'Miller'\n            },\n            fitToGeometry: {\n                type: 'MultiPoint',\n                coordinates: [\n                    // Left\n                    [-20, 20],\n                    // right\n                    [-35, 20]\n                ]\n            }\n        },\n\n        legend: {\n            enabled: false\n        },\n\n        accessibility: {\n            point: {\n                valueDescriptionFormat: '{xDescription}.'\n            }\n        },\n\n        plotOptions: {\n            series: {\n                states: {\n                    inactive: {\n                        enabled: false\n                    }\n                }\n            },\n            mappoint: {\n                tooltip: {\n                    headerFormat: '',\n                    pointFormat: '{point.name}<br/>years ago'\n                }\n            },\n            flowmap: {\n                tooltip: {\n                    pointFormat: '{point.options.from} \\u2192 {point.options.to}'\n                }\n            }\n        },\n\n        series: [{\n            name: 'World',\n            borderWidth: 0,\n            nullColor: '#baa',\n            opacity: 0.7\n        }, {\n            name: 'Points in time',\n            type: 'mappoint',\n            dataLabels: {\n                format: '{point.id}',\n                y: -7,\n                color: 'contrast'\n            },\n            marker: {\n                symbol: 'mapmarker'\n            },\n            data: [{\n                id: '200 KYA',\n                name: '200 000',\n                lon: 26,\n                lat: 4,\n                dataLabels: {\n                    y: 0\n                },\n                marker: {\n                    symbol: 'circle'\n                }\n            }, {\n                id: '70-50 KYA',\n                name: '70 000 - 50 000',\n                lon: 46,\n                lat: 24\n            }, {\n                id: '45-35 KYA',\n                name: '45 000 - 35 000',\n                lon: 11,\n                lat: 45\n            }, {\n                id: '50 KYA',\n                name: '50 000',\n                lon: 135,\n                lat: -25\n            }, {\n                id: '45-35 KYA',\n                name: '45 000 - 35 000',\n                lon: 110,\n                lat: 32\n            }, {\n                id: '20-15 KYA',\n                name: '20 000 - 15 000',\n                lon: -165,\n                lat: 62\n            }, {\n                id: '15-12 KYA',\n                name: '15 000 - 12 000',\n                lon: -65,\n                lat: -20\n            }],\n            zIndex: 2\n        }, {\n            name: 'Migrations',\n            color: 'rgb(205, 91, 147)',\n            type: 'flowmap',\n            accessibility: {\n                point: {\n                    valueDescriptionFormat:\n                        'Origin: {point.options.from:.2f}, Destination: {point.options.to:.2f}.'\n                },\n                description:\n                    'This is a map showing where early humans migrated.'\n            },\n            minWidth: 5,\n            maxWidth: 15,\n            growTowards: false,\n            fillOpacity: 1,\n            opacity: 0.8,\n            weight: 1,\n            markerEnd: {\n                width: '50%',\n                height: '50%'\n            },\n            data: [{\n                from: [20, 0],\n                to: [46, 24],\n                curveFactor: 0,\n                weight: 2,\n                color: {\n                    linearGradient: { x1: 0, y1: 1, x2: 1, y2: 0 },\n                    stops: [\n                        [0.25, 'rgba(205, 91, 147, 0)'],\n                        [0.5, 'rgb(205, 91, 147)']\n                    ]\n                }\n            }, {\n                from: [46, 24],\n                to: [-3, 40],\n                curveFactor: -1.2,\n                color: {\n                    linearGradient: { x1: 1, y1: 1, x2: 0, y2: 0 },\n                    stops: [\n                        [0.25, 'rgba(205, 91, 147, 0)'],\n                        [0.5, 'rgb(205, 91, 147)']\n                    ]\n                }\n            }, {\n                from: [46, 24],\n                to: [135, -25],\n                curveFactor: 0.6,\n                color: {\n                    linearGradient: { x1: 0, y1: 0, x2: 1, y2: 0 },\n                    stops: [\n                        [0.1, 'rgba(205, 91, 147, 0)'],\n                        [0.2, 'rgb(205, 91, 147)']\n                    ]\n                }\n            }, {\n                from: [102, 24],\n                to: [156, 66],\n                curveFactor: 0.2,\n                color: {\n                    linearGradient: { x1: 0, y1: 1, x2: 1, y2: 0 },\n                    stops: [\n                        [0.05, 'rgba(205, 91, 147, 0)'],\n                        [0.2, 'rgb(205, 91, 147)']\n                    ]\n                }\n            }, {\n                from: [165, 66],\n                to: [-65, -20],\n                curveFactor: 0.6,\n                color: {\n                    linearGradient: { x1: 0, y1: 0, x2: 1, y2: 0.5 },\n                    stops: [\n                        [0.05, 'rgba(205, 91, 147, 0)'],\n                        [0.2, 'rgb(205, 91, 147)']\n                    ]\n                }\n            }],\n            zIndex: 1\n        }, {\n            name: 'Descriptions',\n            type: 'mappoint',\n            marker: {\n                enabled: false\n            },\n            enableMouseTracking: false,\n            dataLabels: {\n                allowOverlap: true,\n                color: 'contrast',\n                style: {\n                    textOutline: 'none',\n                    fontStyle: 'italic',\n                    opacity: 0.4\n                }\n            },\n            keys: ['lon', 'lat', 'name'],\n            data: [\n                [0, 15, 'Africa'],\n                [72, 50, 'Eurasia'],\n                [-150, 0, 'Pacific<br/>Ocean'],\n                [-90, 40, 'North<br/>America']\n            ]\n        }]\n    });\n})();\n","css":"#container {\n    height: 500px;\n    min-width: 310px;\n    max-width: 800px;\n    margin: 0 auto;\n}\n","html":"\n<div id=\"container\"></div>","npm":"// 安装\nnpm install highcharts@11.0.0 --save\n\n// import 模块 \nimport Highcharts       from 'highcharts/highmaps';\nimport Flowmap          from 'highcharts/modules/flowmap';\nimport Exporting        from 'highcharts/modules/exporting';\nimport OfflineExporting from 'highcharts/modules/offline-exporting';\nimport Accessibility    from 'highcharts/modules/accessibility';\n\n// 初始化模块\nFlowmap(Highcharts);\nExporting(Highcharts);\nOfflineExporting(Highcharts);\nAccessibility(Highcharts);\n","scripts":["https://code.highcharts.com/maps/11.0.0/highmaps.js","https://code.highcharts.com/maps/11.0.0/modules/flowmap.js","https://code.highcharts.com/maps/11.0.0/modules/exporting.js","https://code.highcharts.com/maps/11.0.0/modules/offline-exporting.js","https://code.highcharts.com/maps/11.0.0/modules/accessibility.js"]}