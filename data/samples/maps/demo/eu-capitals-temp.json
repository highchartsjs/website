{"js":"(async () => {\n\n    const topology = await fetch(\n        'https://code.highcharts.com/mapdata/custom/europe.topo.json'\n    ).then(response => response.json());\n\n    // The demo uses https://api.met.no/ API. Every AJAX\n    // call downloads the XML format data, basing on specific capital\n    // city latitude and longitude values.\n\n    function getJSON(url, cb) {\n        const request = new XMLHttpRequest();\n        request.open('GET', url, true);\n\n        request.onload = function () {\n            if (this.status < 400) {\n                return cb(JSON.parse(this.response));\n            }\n        };\n\n        request.send();\n    }\n\n    // Data structure: [country_code, latitude, longitude, capital_city]\n    const newData = [\n        ['dk', 55.66, 12.58, 'Copenhagen'],\n        ['fo', 62, -6.79, 'Torshavn'],\n        ['hr', 45.8, 16, 'Zagreb'],\n        ['nl', 52.35, 4.91, 'Amsterdam'],\n        ['ee', 59.43, 24.71, 'Tallinn'],\n        ['bg', 42.68, 23.31, 'Sofia'],\n        ['es', 40.4, -3.68, 'Madrid'],\n        ['it', 41.9, 12.48, 'Rome'],\n        ['sm', 43.93, 12.41, 'San Marino'],\n        ['va', 41.9, 12.45, 'Vatican'],\n        ['tr', 39.93, 32.86, 'Ankara'],\n        ['mt', 35.88, 14.5, 'Valetta'],\n        ['fr', 48.86, 2.33, 'Paris'],\n        ['no', 59.91, 10.75, 'Oslo'],\n        ['de', 52.51, 13.4, 'Berlin'],\n        ['ie', 53.31, -6.23, 'Dublin'],\n        ['ua', 50.43, 30.51, 'Kyiv'],\n        ['fi', 60.16, 24.93, 'Helsinki'],\n        ['se', 59.33, 18.05, 'Stockholm'],\n        ['ru', 55.75, 37.6, 'Moscow'],\n        ['gb', 51.5, -0.08, 'London'],\n        ['cy', 35.16, 33.36, 'Nicosia'],\n        ['pt', 38.71, -9.13, 'Lisbon'],\n        ['gr', 37.98, 23.73, 'Athens'],\n        ['lt', 54.68, 25.31, 'Vilnius'],\n        ['si', 46.05, 14.51, 'Ljubljana'],\n        ['ba', 43.86, 18.41, 'Sarajevo'],\n        ['mc', 43.73, 7.41, 'Monaco'],\n        ['al', 41.31, 19.81, 'Tirana'],\n        ['nc', 35.18, 33.36, 'North Nicosia'],\n        ['rs', 44.83, 20.5, 'Belgrade'],\n        ['ro', 44.43, 26.1, 'Bucharest'],\n        ['me', 42.43, 19.26, 'Podgorica'],\n        ['li', 47.13, 9.51, 'Vaduz'],\n        ['at', 48.2, 16.36, 'Vienna'],\n        ['sk', 48.15, 17.11, 'Bratislava'],\n        ['hu', 47.5, 19.08, 'Budapest'],\n        ['ad', 42.2, 1.24, 'Andorra la Vella'],\n        ['lu', 49.6, 6.11, 'Luxembourg'],\n        ['ch', 46.91, 7.46, 'Bern'],\n        ['be', 50.83, 4.33, 'Brussels'],\n        ['pl', 52.25, 21, 'Warsaw'],\n        ['mk', 42, 21.43, 'Skopje'],\n        ['lv', 56.95, 24.1, 'Riga'],\n        ['by', 53.9, 27.56, 'Minsk'],\n        ['is', 64.15, -21.95, 'Reykjavik'],\n        ['md', 47, 28.85, 'Chisinau'],\n        ['cz', 50.08, 14.46, 'Prague']\n    ];\n    // Get temperature for specific localization, and add it to the chart.\n    // It takes point as first argument, countries series as second\n    // and capitals series as third. Capitals series have to be the\n    // 'mappoint' series type, and it should be defined before in the\n    // series array.\n    function getTemp(point, countries, capitals) {\n\n        const url = 'https://api.met.no/weatherapi/locationforecast/2.0/?lat=' +\n        point[1] + '&lon=' + point[2];\n\n        const callBack = json => {\n\n            const temp = json.properties.timeseries[0].data.instant.details\n                .air_temperature;\n            const colorAxis = countries.chart.colorAxis[0];\n\n            const country = {\n                'hc-key': point[0],\n                value: parseInt(temp, 10) || null\n            };\n            const capital = {\n                name: point[3],\n                lat: point[1],\n                lon: point[2],\n                color: colorAxis.toColor(temp),\n                temp: parseInt(temp, 10) || 'No data'\n            };\n\n            countries.addPoint(country);\n            capitals.addPoint(capital);\n            return temp;\n        };\n\n        getJSON(url, callBack);\n    }\n\n    // Create the chart\n    Highcharts.mapChart('container', {\n        chart: {\n            map: topology,\n            animation: false,\n            events: {\n                load: function () {\n                    var countries = this.series[0];\n                    var capitals = this.series[1];\n                    newData.forEach(function (elem) {\n                        getTemp(elem, countries, capitals);\n                    });\n                }\n            }\n        },\n\n        title: {\n            text: 'Current temperatures in capitals of Europe'\n        },\n\n        subtitle: {\n            text: 'Data source: <a href=\"https://api.met.no/\">https://api.met.no/</a>'\n        },\n\n        mapNavigation: {\n            enabled: true,\n            buttonOptions: {\n                verticalAlign: 'bottom'\n            }\n        },\n\n        colorAxis: {\n            min: -25,\n            max: 40,\n            labels: {\n                format: '{value}°C'\n            },\n            stops: [\n                [0, '#0000ff'],\n                [0.3, '#6da5ff'],\n                [0.6, '#ffff00'],\n                [1, '#ff0000']\n            ]\n        },\n\n        legend: {\n            title: {\n                text: 'Degrees Celsius'\n            }\n        },\n\n        tooltip: {\n            headerFormat: '<span style=\"color:{point.color}\">\\u25CF</span> {point.key}:<br/>',\n            pointFormatter: function () {\n                var value = Number.isInteger(this.temp) ? this.temp + '°C' : 'No data';\n                return 'Temperature: <b>' + value + '</b>';\n            }\n        },\n\n        series: [{\n            name: 'Temperatures',\n            states: {\n                hover: {\n                    color: '#BADA55'\n                }\n            },\n            dataLabels: {\n                enabled: false\n            },\n            enableMouseTracking: false,\n            accessibility: {\n                point: {\n                    valueDescriptionFormat: '{xDescription}, {point.value}°C.'\n                }\n            }\n        }, {\n            name: 'Capitals of Europe',\n            type: 'mappoint',\n            showInLegend: false,\n            marker: {\n                lineWidth: 1,\n                lineColor: '#000'\n            },\n            dataLabels: {\n                crop: true,\n                formatter: function () {\n                    var value = Number.isInteger(this.point.temp) ? this.point.temp + '°C' : 'No data';\n                    return '<span>' + this.key + '</span><br/><span>' + value + '</span>';\n                }\n            },\n            accessibility: {\n                point: {\n                    valueDescriptionFormat: '{xDescription}, {point.temp}°C.'\n                }\n            }\n        }]\n    });\n\n})();","css":"#container {\n    height: 500px;\n    min-width: 310px;\n    max-width: 800px;\n    margin: 0 auto;\n}\n","html":"\n<div id=\"container\"></div>","npm":"// 安装\nnpm install highcharts@10.3.2 --save\n\n// import 模块 \nimport Proj4         from 'https://cdnjs.cloudflare.com/ajax/libs/proj4js/2.4.4/proj4.js';\nimport Highcharts    from 'highcharts/highmaps';\nimport Exporting     from 'highcharts/modules/exporting';\nimport Accessibility from 'highcharts/modules/accessibility';\nimport Zh_cn         from 'https://code.hcharts.cn/plugins/zh_cn.js';\n\n// 初始化模块\nProj4(Highcharts);\nExporting(Highcharts);\nAccessibility(Highcharts);\nZh_cn(Highcharts);\n","scripts":["https://cdnjs.cloudflare.com/ajax/libs/proj4js/2.4.4/proj4.js","https://code.hcharts.cn/maps/10.3.2/highmaps.js","https://code.hcharts.cn/maps/10.3.2/modules/exporting.js","https://code.hcharts.cn/maps/10.3.2/modules/accessibility.js","https://code.hcharts.cn/plugins/zh_cn.js"]}