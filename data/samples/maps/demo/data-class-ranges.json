{"js":"(async () => {\n\n    const topology = await fetch(\n        'https://code.highcharts.com/mapdata/custom/world.topo.json'\n    ).then(response => response.json());\n\n    function drawChart(data) {\n        return Highcharts.mapChart('container', {\n            chart: {\n                map: topology,\n                borderWidth: 1\n            },\n\n            colors: ['rgba(19,64,117,0.05)', 'rgba(19,64,117,0.2)', 'rgba(19,64,117,0.4)',\n                'rgba(19,64,117,0.5)', 'rgba(19,64,117,0.6)', 'rgba(19,64,117,0.8)', 'rgba(19,64,117,1)'],\n\n            title: {\n                text: 'Population density by country (/km²)',\n                align: 'left'\n            },\n\n            mapNavigation: {\n                enabled: true,\n                buttonOptions: {\n                    align: 'right'\n                }\n            },\n\n            mapView: {\n                fitToGeometry: {\n                    type: 'MultiPoint',\n                    coordinates: [\n                        // Alaska west\n                        [-164, 54],\n                        // Greenland north\n                        [-35, 84],\n                        // New Zealand east\n                        [179, -38],\n                        // Chile south\n                        [-68, -55]\n                    ]\n                }\n            },\n\n            legend: {\n                title: {\n                    text: 'Individuals per km²',\n                    style: {\n                        color: ( // theme\n                            Highcharts.defaultOptions &&\n                            Highcharts.defaultOptions.legend &&\n                            Highcharts.defaultOptions.legend.title &&\n                            Highcharts.defaultOptions.legend.title.style &&\n                            Highcharts.defaultOptions.legend.title.style.color\n                        ) || 'black'\n                    }\n                },\n                align: 'left',\n                verticalAlign: 'bottom',\n                floating: true,\n                layout: 'vertical',\n                valueDecimals: 0,\n                backgroundColor: ( // theme\n                    Highcharts.defaultOptions &&\n                    Highcharts.defaultOptions.legend &&\n                    Highcharts.defaultOptions.legend.backgroundColor\n                ) || 'rgba(255, 255, 255, 0.85)',\n                symbolRadius: 0,\n                symbolHeight: 14\n            },\n\n            colorAxis: {\n                dataClasses: [{\n                    to: 3\n                }, {\n                    from: 3,\n                    to: 10\n                }, {\n                    from: 10,\n                    to: 30\n                }, {\n                    from: 30,\n                    to: 100\n                }, {\n                    from: 100,\n                    to: 300\n                }, {\n                    from: 300,\n                    to: 1000\n                }, {\n                    from: 1000\n                }]\n            },\n\n            series: [{\n                data: data,\n                joinBy: ['iso-a2', 'code'],\n                animation: true,\n                name: 'Population density',\n                tooltip: {\n                    valueSuffix: '/km²'\n                },\n                shadow: false\n            }]\n        });\n    }\n\n    // Load the data from a Google Spreadsheet\n    // https://docs.google.com/spreadsheets/d/1WBx3mRqiomXk_ks1a5sEAtJGvYukguhAkcCuRDrY1L0\n    Highcharts.data({\n        googleAPIKey: 'AIzaSyCQ0Jh8OFRShXam8adBbBcctlbeeA-qJOk',\n        googleSpreadsheetKey: '1eSoQeilFp0HI-qgqr9-oXdCh5G_trQR2HBaWt_U_n78',\n\n        // Custom handler when the spreadsheet is parsed\n        parsed: function (columns) {\n\n            // Read the columns into the data array\n            const data = columns[0].slice(1).map((code, i) => ({\n                code: code.toUpperCase(),\n                value: parseFloat(columns[2][i + 1]),\n                name: columns[1][i + 1]\n            }));\n\n            drawChart(data);\n        },\n        error: function () {\n            const chart = drawChart();\n            chart.showLoading(\n                '<i class=\"icon-frown icon-large\"></i> ' +\n                'Error loading data from Google Spreadsheets'\n            );\n        }\n    });\n\n})();\n","css":"#container {\n    height: 500px;\n    min-width: 310px;\n    max-width: 800px;\n    margin: 0 auto;\n}\n\n.loading {\n    margin-top: 10em;\n    text-align: center;\n    color: gray;\n}\n","html":"\n<div id=\"container\">\n    <div class=\"loading\">\n        <i class=\"icon-spinner icon-spin icon-large\"></i>\n        Loading data from Google Spreadsheets...\n    </div>\n</div>\n","npm":"// 安装\nnpm install highcharts@11.0.1 --save\n\n// import 模块 \nimport Highcharts       from 'highcharts/highmaps';\nimport Data             from 'highcharts/modules/data';\nimport Exporting        from 'highcharts/modules/exporting';\nimport OfflineExporting from 'highcharts/modules/offline-exporting';\nimport Accessibility    from 'highcharts/modules/accessibility';\n\n// 初始化模块\nData(Highcharts);\nExporting(Highcharts);\nOfflineExporting(Highcharts);\nAccessibility(Highcharts);\n","scripts":["https://code.highcharts.com/maps/11.0.1/highmaps.js","https://code.highcharts.com/maps/11.0.1/modules/data.js","https://code.highcharts.com/maps/11.0.1/modules/exporting.js","https://code.highcharts.com/maps/11.0.1/modules/offline-exporting.js","https://code.highcharts.com/maps/11.0.1/modules/accessibility.js"]}