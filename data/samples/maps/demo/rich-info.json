{"js":"(async () => {\n\n    const topology = await fetch(\n        'https://code.highcharts.com/mapdata/custom/world.topo.json'\n    ).then(response => response.json());\n\n    const csv = await fetch(\n        'https://cdn.jsdelivr.net/gh/highcharts/highcharts@v7.0.0/samples/data/world-population-history.csv'\n    ).then(response => response.text());\n\n    // Very simple and case-specific CSV string splitting\n    const CSVtoArray = text => text.replace(/^\"/, '')\n        .replace(/\",$/, '')\n        .split('\",\"');\n\n    const csvArr = csv.split(/\\n/),\n        countries = {},\n        numRegex = /^[0-9\\.]+$/,\n        lastCommaRegex = /,\\s$/,\n        quoteRegex = /\\\"/g,\n        categories = CSVtoArray(csvArr[2]).slice(4);\n\n    let countryChart;\n\n    // Parse the CSV into arrays, one array each country\n    csvArr.slice(3).forEach(function (line) {\n        var row = CSVtoArray(line),\n            data = row.slice(4);\n\n        data.forEach(function (val, i) {\n            val = val.replace(quoteRegex, '');\n            if (numRegex.test(val)) {\n                val = parseInt(val, 10);\n            } else if (!val || lastCommaRegex.test(val)) {\n                val = null;\n            }\n            data[i] = val;\n        });\n\n        countries[row[1]] = {\n            name: row[0],\n            code3: row[1],\n            data: data\n        };\n    });\n\n    // For each country, use the latest value for current population\n    const data = [];\n    for (const code3 in countries) {\n        if (Object.hasOwnProperty.call(countries, code3)) {\n            const itemData = countries[code3].data;\n            let value = null,\n                i = itemData.length,\n                year;\n\n            while (i--) {\n                if (typeof itemData[i] === 'number') {\n                    value = itemData[i];\n                    year = categories[i];\n                    break;\n                }\n            }\n            data.push({\n                name: countries[code3].name,\n                code3: code3,\n                value: value,\n                year: year\n            });\n        }\n    }\n\n    // Add lower case codes to the data set for inclusion in the tooltip.pointFormat\n    const mapData = Highcharts.geojson(topology);\n    mapData.forEach(function (country) {\n        country.id = country.properties['hc-key']; // for Chart.get()\n        country.flag = country.id.replace('UK', 'GB').toLowerCase();\n    });\n\n    // Wrap point.select to get to the total selected points\n    Highcharts.wrap(Highcharts.Point.prototype, 'select', function (proceed) {\n\n        proceed.apply(this, Array.prototype.slice.call(arguments, 1));\n\n        const points = this.series.chart.getSelectedPoints();\n        if (points.length) {\n            if (points.length === 1) {\n                document.querySelector('#info #flag')\n                    .className = 'flag ' + points[0].flag;\n                document.querySelector('#info h2').innerHTML = points[0].name;\n            } else {\n                document.querySelector('#info #flag')\n                    .className = 'flag';\n                document.querySelector('#info h2').innerHTML = 'Comparing countries';\n\n            }\n            document.querySelector('#info .subheader')\n                .innerHTML = '<h4>Historical population</h4><small><em>Shift + Click on map to compare countries</em></small>';\n\n            if (!countryChart) {\n                countryChart = Highcharts.chart('country-chart', {\n                    chart: {\n                        height: 250\n                    },\n                    credits: {\n                        enabled: false\n                    },\n                    title: {\n                        text: null\n                    },\n                    subtitle: {\n                        text: null\n                    },\n                    xAxis: {\n                        tickPixelInterval: 50,\n                        crosshair: true\n                    },\n                    yAxis: {\n                        title: null,\n                        opposite: true\n                    },\n                    tooltip: {\n                        split: true\n                    },\n                    plotOptions: {\n                        series: {\n                            animation: {\n                                duration: 500\n                            },\n                            marker: {\n                                enabled: false\n                            },\n                            threshold: 0,\n                            pointStart: parseInt(categories[0], 10)\n                        }\n                    }\n                });\n            }\n\n            countryChart.series.slice(0).forEach(function (s) {\n                s.remove(false);\n            });\n            points.forEach(function (p) {\n                countryChart.addSeries({\n                    name: p.name,\n                    data: countries[p.code3].data,\n                    type: points.length > 1 ? 'line' : 'area'\n                }, false);\n            });\n            countryChart.redraw();\n\n        } else {\n            document.querySelector('#info #flag').className = '';\n            document.querySelector('#info h2').innerHTML = '';\n            document.querySelector('#info .subheader').innerHTML = '';\n            if (countryChart) {\n                countryChart = countryChart.destroy();\n            }\n        }\n    });\n\n    // Initiate the map chart\n    const mapChart = Highcharts.mapChart('container', {\n\n        chart: {\n            map: topology\n        },\n\n        title: {\n            text: 'Population history by country'\n        },\n\n        subtitle: {\n            text: 'Source: <a href=\"http://data.worldbank.org/indicator/SP.POP.TOTL/countries/1W?display=default\">The World Bank</a>'\n        },\n\n        mapNavigation: {\n            enabled: true,\n            buttonOptions: {\n                verticalAlign: 'bottom'\n            }\n        },\n\n        mapView: {\n            fitToGeometry: {\n                type: 'MultiPoint',\n                coordinates: [\n                    // Alaska west\n                    [-164, 54],\n                    // Greenland north\n                    [-35, 84],\n                    // New Zealand east\n                    [179, -38],\n                    // Chile south\n                    [-68, -55]\n                ]\n            }\n        },\n\n        colorAxis: {\n            type: 'logarithmic',\n            endOnTick: false,\n            startOnTick: false,\n            min: 50000\n        },\n\n        tooltip: {\n            footerFormat: '<span style=\"font-size: 10px\">(Click for details)</span>'\n        },\n\n        series: [{\n            data: data,\n            mapData: mapData,\n            joinBy: ['iso-a3', 'code3'],\n            name: 'Current population',\n            allowPointSelect: true,\n            cursor: 'pointer',\n            states: {\n                select: {\n                    color: '#a4edba',\n                    borderColor: 'black',\n                    dashStyle: 'shortdot'\n                }\n            },\n            borderWidth: 0.5\n        }]\n    });\n\n    // Pre-select a country\n    mapChart.get('us').select();\n\n})();","css":"* {\n    font-family: sans-serif;\n}\n\n#wrapper {\n    height: 500px;\n    width: 1000px;\n    margin: 0 auto;\n    padding: 0;\n    overflow: visible;\n}\n\n#container {\n    float: left;\n    height: 500px;\n    width: 700px;\n    margin: 0;\n}\n\n#info {\n    float: left;\n    width: 270px;\n    padding-left: 20px;\n    margin: 100px 0 0;\n}\n\n#info h2 {\n    display: inline;\n    font-size: 13pt;\n    text-transform: none;\n}\n\n#info .f32 .flag {\n    vertical-align: bottom !important;\n}\n\n#info h4 {\n    margin: 1em 0 0;\n    font-size: 12pt;\n    text-transform: none;\n}\n\n@media screen and (max-width: 1000px) {\n    #wrapper,\n    #container,\n    #info {\n        float: none;\n        width: 100%;\n        height: auto;\n        margin: 0.5em 0;\n        padding: 0;\n        border: none;\n    }\n}\n","html":"Verify that clicking a country makes it appear in the history chart. Shift-click\nmultiple countries and verify that all countries appear in the chart.","npm":"// 安装\nnpm install highcharts@11.0.1 --save\n\n// import 模块 \n\n// 初始化模块\n","scripts":[]}