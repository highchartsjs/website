{"js":"let chart;\n\nfunction showMap(topology) {\n    // Initialize the chart\n    chart = Highcharts.mapChart('container', {\n        chart: {\n            events: {\n                click: function (e) {\n                    const series = this.get(\n                        document\n                            .querySelector('input[name=series]:checked')\n                            .value\n                    );\n\n                    series.addPoint({ lon: e.lon, lat: e.lat });\n                }\n            },\n            animation: false\n        },\n\n        title: {\n            text: 'Draw your own points or lines'\n        },\n\n        subtitle: {\n            style: {\n                color: 'red'\n            }\n        },\n\n        mapNavigation: {\n            enabled: true,\n            buttonOptions: {\n                verticalAlign: 'bottom'\n            }\n        },\n\n        legend: {\n            enabled: false\n        },\n\n        tooltip: {\n            pointFormat: 'Lon: {point.lon:.2f}, Lat: {point.lat:.2f}'\n        },\n\n        plotOptions: {\n            series: {\n                stickyTracking: false,\n                point: {\n                    events: {\n                        // Update lat/lon properties after dragging point\n                        drop: function () {\n                            const newLatLon = this.series.chart\n                                .fromPointToLatLon(this);\n                            this.lat = newLatLon.lat;\n                            this.lon = newLatLon.lon;\n                        }\n                    }\n                }\n            }\n        },\n\n        series: [{\n            mapData: topology\n        }, {\n            type: 'mappoint',\n            id: 'points',\n            name: 'Points',\n            dragDrop: {\n                draggableX: true,\n                draggableY: true\n            },\n            cursor: 'move',\n            point: {\n                events: {\n                    click: function () {\n                        if (document.getElementById('delete').checked) {\n                            this.remove();\n                        }\n                    }\n                }\n            }\n        }, {\n            type: 'mappoint',\n            id: 'connected-points',\n            name: 'Connected points',\n            draggableX: true,\n            draggableY: true,\n            cursor: 'move',\n            color: Highcharts.getOptions().colors[0],\n            lineWidth: 2,\n            point: {\n                events: {\n                    click: function () {\n                        if (document.getElementById('delete').checked) {\n                            this.remove();\n                        }\n                    }\n                }\n            }\n        }]\n    });\n}\n\n(async () => {\n    const topology = await fetch(\n        'https://code.highcharts.com/mapdata/custom/world.topo.json'\n    ).then(response => response.json());\n\n    showMap(topology);\n\n    const container = document.getElementById('container');\n\n    document.getElementById('getconfig').addEventListener('click', e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        let points;\n        let html = '';\n\n        function getPointConfigString(point) {\n            return point.lat ? '{ lat: ' + point.lat + ', lon: ' + point.lon + ' }' :\n                '{ x: ' + point.x + ', y: ' + point.y + ' }';\n        }\n\n        if (chart.get('points').data.length) {\n            points = '{\\n    type: \"mappoint\",\\n    data: [\\n        ' +\n                chart.get('points').data.map(getPointConfigString).join(\",\\n        \") +\n                '\\n    ]\\n}';\n            html += '<h3>Points configuration</h3><pre>' + points + '</pre>';\n        }\n\n        if (chart.get('connected-points').data.length) {\n            points = '{\\n    type: \"mappoint\",\\n    lineWidth: 2,\\n    data: [\\n        ' +\n                chart.get('connected-points').data.map(getPointConfigString).join(\",\\n        \") +\n                '\\n    ]\\n}';\n            html += '<h3>Connected points configuration</h3><pre>' + points + '</pre>';\n        }\n\n        if (!html) {\n            html = 'No points added. Click the map to add points.';\n        }\n\n        document.getElementById('code-inner').innerHTML = html;\n        container.style.marginTop = '-500px';\n    });\n\n    document.getElementById('close').addEventListener('click', () => {\n        container.style.marginTop = 0;\n    });\n\n    const select = document.getElementById('maps');\n\n    for (const group in Highcharts.mapDataIndex) {\n        if (\n            Object.prototype.hasOwnProperty.call(Highcharts.mapDataIndex, group)\n        ) {\n            if (group !== 'version') {\n                for (const name in Highcharts.mapDataIndex[group]) {\n                    if (\n                        Object.prototype.hasOwnProperty.call(\n                            Highcharts.mapDataIndex[group], name\n                        )\n                    ) {\n                        const option = document.createElement('option');\n                        option.value = Highcharts.mapDataIndex[group][name];\n                        option.innerText = name;\n                        option.selected = name ===\n                            'World, Miller projection, medium resolution';\n\n                        select.append(option);\n                    }\n                }\n            }\n        }\n    }\n\n    select.addEventListener('change', async () => {\n        const mapKey = select.value.replace(/\\.js$/, '');\n        const topology = await fetch(\n            `https://code.highcharts.com/mapdata/${mapKey}.topo.json`\n        ).then(response => response.json());\n        showMap(topology);\n    });\n})();","css":"#outer {\n    min-width: 310px;\n    max-width: 800px;\n    margin: 0 auto;\n}\n\n#outer-container {\n    height: 500px;\n    overflow: hidden;\n}\n\n#container {\n    height: 500px;\n    transition: margin-top 500ms;\n}\n\n#code-container {\n    height: 500px;\n    overflow: auto;\n}\n\n.loading {\n    margin-top: 10em;\n    text-align: center;\n    color: gray;\n}\n\n.form {\n    border: 1px solid silver;\n    padding: 0 1em;\n}\n\npre {\n    border: 1px solid green;\n    border-radius: 5px;\n    padding: 1em;\n    color: green;\n}\n\n#close {\n    float: right;\n}\n","html":"\n<div id=\"outer\">\n    <div id=\"outer-container\">\n        <div id=\"container\"></div>\n        <div id=\"code-container\">\n            <button id=\"close\">Back to map</button>\n            <div id=\"code-inner\"></div>\n        </div>\n    </div>\n\n    <form>\n        <div class=\"form\">\n\n            <p>\n                <label>Load another map</label>\n                <select id=\"maps\"></select>\n            </p>\n\n            <p>\n                Clicking adds points to\n                <input type=\"radio\" name=\"series\" value=\"points\" id=\"points\" checked=\"checked\" />\n                <label for=\"points\">Points</label>\n                <input type=\"radio\" name=\"series\" value=\"connected-points\" id=\"connected-points\" />\n                <label for=\"connected-points\">Connected points</label>\n            </p>\n\n            <p>\n                <input type=\"checkbox\" name=\"delete\" id=\"delete\" />\n                <label for=\"delete\">Delete points by click</label>\n            </p>\n            <p>\n                <button id=\"getconfig\">Get series configuration</button>\n            </p>\n        </div>\n    </form>\n</div>","npm":"// 安装\nnpm install highcharts@10.3.2 --save\n\n// import 模块 \nimport Proj4           from 'https://cdnjs.cloudflare.com/ajax/libs/proj4js/2.3.12/proj4.js';\nimport Highcharts      from 'highcharts/highmaps';\nimport Data            from 'highcharts/modules/data';\nimport DraggablePoints from 'highcharts/modules/draggable-points';\nimport Index           from 'highcharts/mapdata/index';\nimport HighchartsZh_CN from 'https://code.hcharts.cn/plugins/highcharts-zh_CN.js';\n\n// 初始化模块\nProj4(Highcharts);\nData(Highcharts);\nDraggablePoints(Highcharts);\nIndex(Highcharts);\nHighchartsZh_CN(Highcharts);\n","scripts":["https://cdnjs.cloudflare.com/ajax/libs/proj4js/2.3.12/proj4.js","https://code.hcharts.cn/maps/10.3.2/highmaps.js","https://code.hcharts.cn/maps/10.3.2/modules/data.js","https://code.hcharts.cn/maps/10.3.2/modules/draggable-points.js","https://code.hcharts.cn/10.3.2/mapdata/index.js","https://code.hcharts.cn/plugins/highcharts-zh_CN.js"]}