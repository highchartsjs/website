{"js":"(async () => {\n\n    const topology = await fetch(\n        'https://code.highcharts.com/mapdata/custom/world.topo.json'\n    ).then(response => response.json());\n\n    function drawChart(data) {\n        return Highcharts.mapChart('container', {\n            chart: {\n                borderWidth: 1\n            },\n\n            colors: ['rgba(19,64,117,0.1)', 'rgba(19,64,117,0.5)', 'rgba(19,64,117,1)'],\n\n            title: {\n                text: 'Data classes with legend label formatter'\n            },\n\n            mapNavigation: {\n                enabled: true\n            },\n\n            legend: {\n                title: {\n                    text: 'Population density'\n                },\n                align: 'left',\n                verticalAlign: 'bottom',\n                floating: true,\n                labelFormatter: function () {\n                    if (this.from === undefined) {\n                        return 'Below ' + this.to;\n                    }\n\n                    if (this.to === undefined) {\n                        return 'Above ' + this.from;\n                    }\n\n                    return this.from + ' to ' + this.to;\n                },\n                layout: 'vertical',\n                valueDecimals: 0,\n                backgroundColor: 'rgba(255,255,255,0.9)',\n                symbolRadius: 0,\n                symbolHeight: 14\n            },\n\n            colorAxis: {\n                dataClasses: [{\n                    to: 20\n                }, {\n                    from: 20,\n                    to: 200\n                }, {\n                    from: 200\n                }]\n            },\n\n            series: [{\n                data: data,\n                mapData: topology,\n                joinBy: ['iso-a2', 'code'],\n                name: 'Population density',\n                states: {\n                    hover: {\n                        color: '#a4edba'\n                    }\n                },\n                tooltip: {\n                    valueSuffix: '/km²'\n                }\n            }]\n        });\n    }\n\n    // Load the data from a Google Spreadsheet\n    // https://docs.google.com/spreadsheets/d/1eSoQeilFp0HI-qgqr9-oXdCh5G_trQR2HBaWt_U_n78\n    Highcharts.data({\n        googleAPIKey: 'AIzaSyCQ0Jh8OFRShXam8adBbBcctlbeeA-qJOk',\n        googleSpreadsheetKey: '1eSoQeilFp0HI-qgqr9-oXdCh5G_trQR2HBaWt_U_n78',\n\n        // custom handler when the spreadsheet is parsed\n        parsed: function (columns) {\n            // Read the columns into the data array\n            const data = [];\n            columns[0].forEach((code, i) => {\n                data.push({\n                    code: code.toUpperCase(),\n                    value: parseFloat(columns[2][i]),\n                    name: columns[1][i]\n                });\n            });\n\n            drawChart(data);\n        },\n\n        error: function (html, xhr) {\n            const chart = drawChart();\n            chart.showLoading('Error loading sample data: ' + xhr.status);\n        }\n\n    });\n\n})();\n","css":"#container {\n    height: 500px;\n    min-width: 310px;\n    max-width: 800px;\n    margin: 0 auto;\n}\n\n.loading {\n    margin-top: 10em;\n    text-align: center;\n    color: gray;\n}\n","html":"\n<div id=\"container\">\n    <div class=\"loading\">\n        <i class=\"icon-spinner icon-spin icon-large\"></i>\n        Loading data from Google Spreadsheets...\n    </div>\n</div>\n","npm":"// 安装\nnpm install highcharts@10.3.2 --save\n\n// import 模块 \nimport Highcharts from 'highcharts/highmaps';\nimport Data       from 'highcharts/modules/data';\nimport Zh_cn      from 'https://code.hcharts.cn/plugins/zh_cn.js';\n\n// 初始化模块\nData(Highcharts);\nZh_cn(Highcharts);\n","scripts":["https://code.hcharts.cn/maps/10.3.2/highmaps.js","https://code.hcharts.cn/maps/10.3.2/modules/data.js","https://code.hcharts.cn/plugins/zh_cn.js"]}