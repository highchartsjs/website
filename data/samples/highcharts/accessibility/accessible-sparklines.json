{"js":"// Table row definitions. The table is built from this data.\nvar tableRows = [{\n    trackTitle: 'Education',\n    chartData: [178, 184, 167, 183, 160, 138]\n}, {\n    trackTitle: 'Employment & Workplace',\n    chartData: [87, 68, 99, 105, 91, 137]\n}, {\n    trackTitle: 'Entertainment & Leisure',\n    chartData: [24, 32, 30, 25, 25, 28]\n}, {\n    trackTitle: 'Independent Living',\n    chartData: [51, 57, 67, 76, 57, 107]\n}, {\n    trackTitle: 'Law & Policy',\n    chartData: [37, 42, 53, 45, 44, 54]\n}, {\n    trackTitle: 'Transportation',\n    chartData: [5, 6, 10, 8, 4, 4]\n}];\n\n\n// Default options for the sparkline charts\nvar defaultChartOptions = {\n    chart: {\n        type: 'line',\n        backgroundColor: 'transparent'\n    },\n\n    accessibility: {\n        landmarkVerbosity: 'disabled',\n        point: {\n            valueSuffix: ' sessions'\n        },\n        screenReaderSection: {\n            beforeChartFormat: '<h5>{chartTitle}</h5>' +\n                    '<div>{chartLongdesc}</div>' +\n                    '<div>{playAsSoundButton}</div>',\n            afterChartFormat: ''\n        }\n    },\n\n    sonification: {\n        enabled: true,\n        duration: 1700\n    },\n\n    // Title is hidden, but exists for better accessibility, as\n    // the title value is picked up by the accessibility module\n    // and gives more context to screen reader users.\n    title: {\n        floating: true,\n        style: {\n            display: 'none'\n        }\n    },\n\n    legend: {\n        enabled: false\n    },\n\n    exporting: {\n        enabled: false\n    },\n\n    credits: {\n        enabled: false\n    },\n\n    plotOptions: {\n        series: {\n            pointStart: 2015,\n            marker: {\n                enabled: false\n            }\n        }\n    },\n\n    tooltip: {\n        outside: true,\n        useHTML: true,\n        hideDelay: 100,\n        backgroundColor: 'rgba(250, 250, 250, 0.95)',\n        style: {\n            width: '200px'\n        },\n        formatter: function () {\n            var point = this.point;\n            var chart = this.series.chart;\n            var longdescText = chart.accessibility.components.infoRegions.getLongdescText() || 'Sessions';\n            var longdescFormat = '<span style=\"font-size: 12px\">' + longdescText + '</span><br/>';\n            var pointFormat = '<div style=\"margin-top:10px;\"><span style=\"color:' + point.color +\n                '\">●</span> ' + point.x + ': <b>' + point.y + '</b></div>';\n\n            return longdescFormat + pointFormat;\n        },\n        positioner: function () {\n            var chart = this.chart;\n            var chartPosition = chart.pointer.getChartPosition();\n            var tooltipBBox = this.label && this.label.getBBox() || { width: 100, height: 100 };\n            var tooltipXOffset = (chart.plotWidth - tooltipBBox.width) / 2;\n            var tooltipYOffset = 12;\n            var x = chartPosition.left + tooltipXOffset;\n            var y = chartPosition.top - tooltipBBox.height - tooltipYOffset;\n            return { x: x, y: y };\n        },\n        shape: 'square'\n    },\n\n    xAxis: {\n        type: 'category',\n        visible: false\n    },\n\n    yAxis: {\n        visible: false\n    }\n};\n\n\n// Get string with basic description of chart data.\nfunction describeChart(data) {\n    var firstPoint = data[0];\n    var lastPoint = data[data.length - 1];\n    var minPoint = Math.min.apply(null, data);\n    var maxPoint = Math.max.apply(null, data);\n    var slopeText = firstPoint < lastPoint ? 'increased' : 'decreased';\n\n    return 'Sessions ' + slopeText + ' overall from 2015 to 2020, starting at ' + firstPoint +\n        ' and ending at ' + lastPoint + '. Values ranged between ' +\n        minPoint + ' and ' + maxPoint + '.';\n}\n\n\n// Add automated descriptions to the data\ntableRows.forEach(function (rowDefinition) {\n    rowDefinition.chartDescription = describeChart(rowDefinition.chartData);\n});\n\n\n// Add a cell with the track title to a table row element\nfunction addTrackCell(tableRowElement, rowDefinition) {\n    var cell = document.createElement('th');\n    cell.setAttribute('scope', 'row');\n    cell.textContent = rowDefinition.trackTitle;\n    tableRowElement.appendChild(cell);\n}\n\n\n// Add a cell with the average data to a table row element\nfunction addAverageCell(tableRowElement, rowDefinition) {\n    var cell = document.createElement('td');\n    var getArrayAverage = arr => arr.reduce((acc, cur) => acc + cur, 0) / arr.length;\n\n    cell.textContent = Math.round(getArrayAverage(rowDefinition.chartData)) + ' sessions';\n    tableRowElement.appendChild(cell);\n}\n\n\n// Add a sparkline cell to a table row element\nfunction addSparklineCell(tableRowElement, rowDefinition) {\n    var cell = document.createElement('td');\n    var sparklineContainer = document.createElement('div');\n\n    sparklineContainer.className = 'sparkline-container';\n    cell.appendChild(sparklineContainer);\n    tableRowElement.appendChild(cell);\n\n    Highcharts.chart(sparklineContainer, Highcharts.merge(defaultChartOptions, {\n        title: {\n            text: rowDefinition.trackTitle + ' Chart'\n        },\n        accessibility: {\n            description: rowDefinition.chartDescription\n        },\n        series: [{\n            name: 'Sessions',\n            data: rowDefinition.chartData\n        }]\n    }));\n}\n\n\n// Populate the table\nvar tableBody = document.getElementById('tbody');\ntableRows.forEach(function (rowDefinition) {\n    var tableRowElement = document.createElement('tr');\n\n    tableBody.appendChild(tableRowElement);\n\n    addTrackCell(tableRowElement, rowDefinition);\n    addAverageCell(tableRowElement, rowDefinition);\n    addSparklineCell(tableRowElement, rowDefinition);\n});\n","css":"#table-intro-text {\n    font-family: Verdana, sans-serif;\n    color: #222;\n    width: 100%;\n    max-width: 950px;\n    margin: 30px auto;\n}\n\n#table-intro-text h1 {\n    font-size: 1.9em;\n    color: #363636;\n}\n\n.sparkline-container {\n    height: 80px;\n    width: 170px;\n    margin: 0 auto;\n}\n\n#table {\n    font-family: Verdana, sans-serif;\n    border-collapse: collapse;\n    margin: 10px auto;\n    text-align: center;\n    width: 100%;\n    max-width: 650px;\n    color: #333;\n}\n\n#table caption {\n    padding: 1.2em 1em;\n    font-size: 1.3em;\n    color: #555;\n}\n\n#table th {\n    font-weight: 400;\n    font-size: 1.1em;\n    padding: 0.8em;\n}\n\n#table th[scope=\"row\"] {\n    text-align: left;\n}\n\n#table td {\n    padding: 0.3em 0.8em;\n}\n\n#table th,\n#table td {\n    border-right: 1px solid #f1f7ff;\n}\n\n#table tr:hover {\n    background: #f1f7ff;\n}\n\n@media screen and (max-width: 500px) {\n    #table th {\n        font-size: 0.8em;\n        font-weight: bold;\n        color: #444;\n        padding: 0.5em;\n    }\n\n    #table td {\n        padding: 0.3em 0.4em;\n    }\n\n    #table {\n        font-size: 0.8em;\n        overflow: scroll;\n    }\n\n    .sparkline-container {\n        width: 100px;\n    }\n}\n","html":"\n<div id=\"table-intro-text\">\n    <h1>CSUN conference historical sessions overview</h1>\n\n    <p>\n        The following table displays historical session data by track,\n        and demonstrates using Highcharts sparklines in a table column\n        to condense historical data and visualize trends.\n    </p>\n</div>\n\n<table id=\"table\">\n    <caption>\n        CSUN Conference Sessions by Track 2015-2020\n    </caption>\n    <thead>\n        <tr>\n            <th scope=\"col\">Track</th>\n            <th scope=\"col\">Average</th>\n            <th scope=\"col\">Historical data</th>\n        </tr>\n    </thead>\n    <tbody id=\"tbody\">\n    </tbody>\n</table>\n","npm":"// 安装\nnpm install highcharts@11.0.1 --save\n\n// import 模块 \nimport Highcharts        from 'highcharts';\nimport Exporting         from 'highcharts/modules/exporting';\nimport ExportData        from 'highcharts/modules/export-data';\nimport Sonification      from 'highcharts/modules/sonification';\nimport Accessibility     from 'highcharts/modules/accessibility';\nimport HighContrastLight from 'highcharts/themes/high-contrast-light';\n\n// 初始化模块\nExporting(Highcharts);\nExportData(Highcharts);\nSonification(Highcharts);\nAccessibility(Highcharts);\nHighContrastLight(Highcharts);\n","scripts":["https://code.highcharts.com/11.0.1/highcharts.js","https://code.highcharts.com/11.0.1/modules/exporting.js","https://code.highcharts.com/11.0.1/modules/export-data.js","https://code.highcharts.com/11.0.1/modules/sonification.js","https://code.highcharts.com/11.0.1/modules/accessibility.js","https://code.highcharts.com/11.0.1/themes/high-contrast-light.js"]}