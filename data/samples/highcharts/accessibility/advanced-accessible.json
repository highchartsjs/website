{"js":"// Define custom series type for displaying low/med/high values using boxplot as a base\nHighcharts.seriesType('lowmedhigh', 'boxplot', {\n    keys: ['low', 'median', 'high'],\n    tooltip: {\n        pointFormat: '<span style=\"color:{point.color}\">\\u25CF</span> {series.name}: ' +\n            'Low <b>{point.low}</b> - Median <b>{point.median}</b> - High <b>{point.high}</b><br/>'\n    }\n}, {\n    // Change point shape to a line with three crossing lines for low/median/high\n    // Stroke width is hardcoded to 1 for simplicity\n    drawPoints: function () {\n        var series = this;\n        this.points.forEach(function (point) {\n            var graphic = point.graphic,\n                verb = graphic ? 'animate' : 'attr',\n                shapeArgs = point.shapeArgs,\n                width = shapeArgs.width,\n                left = Math.floor(shapeArgs.x) + 0.5,\n                right = left + width,\n                crispX = left + Math.round(width / 2) + 0.5,\n                highPlot = Math.floor(point.highPlot) + 0.5,\n                medianPlot = Math.floor(point.medianPlot) + 0.5,\n                // Sneakily draw low marker even if 0\n                lowPlot = Math.floor(point.lowPlot) +\n                    0.5 - (point.low === 0 ? 1 : 0);\n\n            if (point.isNull) {\n                return;\n            }\n\n            if (!graphic) {\n                point.graphic = graphic = series.chart.renderer.path('point').add(series.group);\n            }\n\n            graphic.attr({\n                stroke: point.color || series.color,\n                \"stroke-width\": 1\n            });\n\n            graphic[verb]({\n                d: [\n                    'M', left, highPlot,\n                    'H', right,\n                    'M', left, medianPlot,\n                    'H', right,\n                    'M', left, lowPlot,\n                    'H', right,\n                    'M', crispX, highPlot,\n                    'V', lowPlot\n                ]\n            });\n        });\n    }\n});\n\n// Create chart\nvar chart = Highcharts.chart('container', {\n    chart: {\n        type: 'lowmedhigh'\n    },\n\n    title: {\n        text: 'Daily company fruit consumption 2019'\n    },\n\n    accessibility: {\n        point: {\n            descriptionFormatter: function (point) {\n                // Use default formatter for null points\n                if (point.isNull) {\n                    return false;\n                }\n\n                return point.category + ', low ' + point.low + ', median ' +\n                    point.median + ', high ' + point.high;\n            }\n        },\n\n        series: {\n            descriptionFormat: '{seriesDescription}'\n        },\n\n        typeDescription: 'Low, median, high. Each data point has a low, median and high value, depicted vertically as small ticks.' // Describe the chart type to screen reader users, since this is not a traditional boxplot chart\n    },\n\n    xAxis: [{\n        accessibility: {\n            description: 'Months of the year'\n        },\n        categories: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n    }],\n\n    yAxis: {\n        title: {\n            text: 'Fruits consumed'\n        },\n        min: 0\n    },\n\n    responsive: {\n        rules: [{\n            condition: {\n                maxWidth: 550\n            },\n            chartOptions: {\n                xAxis: {\n                    categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n                }\n            }\n        }]\n    },\n\n    tooltip: {\n        shared: true,\n        stickOnContact: true\n    },\n\n    plotOptions: {\n        series: {\n            stickyTracking: true,\n            whiskerWidth: 5\n        }\n    },\n\n    series: [{\n        name: 'Plums',\n        data: [\n            [0, 8, 19],\n            [1, 11, 23],\n            [3, 16, 28],\n            [2, 15, 28],\n            [1, 15, 27],\n            [0, 9, 21],\n            null,\n            null,\n            [1, 6, 19],\n            [2, 8, 21],\n            [2, 9, 22],\n            [1, 11, 19]\n        ]\n    }, {\n        name: 'Bananas',\n        data: [\n            [0, 3, 6],\n            [1, 2, 4],\n            [0, 2, 5],\n            [2, 2, 5],\n            [1, 3, 6],\n            [0, 1, 3],\n            [1, 1, 2],\n            [0, 1, 3],\n            [1, 1, 3],\n            [0, 2, 4],\n            [1, 2, 5],\n            [1, 3, 5]\n        ]\n    }, {\n        name: 'Apples',\n        data: [\n            [1, 4, 6],\n            [2, 4, 5],\n            [1, 3, 6],\n            [2, 3, 6],\n            [1, 3, 4],\n            [0, 2, 4],\n            [0, 1, 2],\n            [0, 1, 2],\n            [0, 1, 2],\n            [0, 2, 4],\n            [1, 2, 4],\n            [1, 3, 4]\n        ]\n    }]\n});\n\n// Remove click events on container to avoid having \"clickable\" announced by AT\n// These events are needed for custom click events, drag to zoom, and navigator\n// support.\nchart.container.onmousedown = null;\nchart.container.onclick = null;\n","css":"#container {\n    height: 420px;\n}\n\n.highcharts-figure,\n.highcharts-data-table table {\n    min-width: 360px;\n    max-width: 820px;\n    margin: 1em auto;\n}\n\n.highcharts-data-table table {\n    font-family: Verdana, sans-serif;\n    border-collapse: collapse;\n    border: 1px solid #ebebeb;\n    margin: 10px auto;\n    text-align: center;\n    width: 100%;\n    max-width: 500px;\n}\n\n.highcharts-data-table caption {\n    padding: 1em 0;\n    font-size: 1.2em;\n    color: #555;\n}\n\n.highcharts-data-table th {\n    font-weight: 600;\n    padding: 0.5em;\n}\n\n.highcharts-data-table td,\n.highcharts-data-table th,\n.highcharts-data-table caption {\n    padding: 0.5em;\n}\n\n.highcharts-data-table thead tr,\n.highcharts-data-table tr:nth-child(even) {\n    background: #f8f8f8;\n}\n\n.highcharts-data-table tr:hover {\n    background: #f1f7ff;\n}\n","html":"\n<figure class=\"highcharts-figure\">\n    <div id=\"container\"></div>\n    <p class=\"highcharts-description\">\n        Chart demonstrating more advanced accessibility configuration, using\n        a custom series type based on the boxplot series.\n        The chart is depicting fictional fruit consumption data, with the\n        minimum, maximum and median values for each month of 2019. Most plums\n        were eaten in spring, and none at all in July or August. Bananas and\n        apples were both consumed in smaller numbers and steadily throughout\n        the year.\n    </p>\n</figure>\n","npm":"// 安装\nnpm install highcharts@10.3.2 --save\n\n// import 模块 \nimport Highcharts        from 'highcharts';\nimport HighchartsMore    from 'highcharts/highcharts-more';\nimport Exporting         from 'highcharts/modules/exporting';\nimport ExportData        from 'highcharts/modules/export-data';\nimport Accessibility     from 'highcharts/modules/accessibility';\nimport HighContrastLight from 'highcharts/themes/high-contrast-light';\nimport Zh_cn             from 'https://code.hcharts.cn/plugins/zh_cn.js';\n\n// 初始化模块\nHighchartsMore(Highcharts);\nExporting(Highcharts);\nExportData(Highcharts);\nAccessibility(Highcharts);\nHighContrastLight(Highcharts);\nZh_cn(Highcharts);\n","scripts":["https://code.hcharts.cn/10.3.2/highcharts.js","https://code.hcharts.cn/10.3.2/highcharts-more.js","https://code.hcharts.cn/10.3.2/modules/exporting.js","https://code.hcharts.cn/10.3.2/modules/export-data.js","https://code.hcharts.cn/10.3.2/modules/accessibility.js","https://code.hcharts.cn/10.3.2/themes/high-contrast-light.js","https://code.hcharts.cn/plugins/zh_cn.js"]}