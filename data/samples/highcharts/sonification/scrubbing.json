{"js":"// Create some data\nvar data = [];\nfor (var i = 0; i < 1000; ++i) {\n    data.push([\n        i / 100,\n        Math.sin(i / 200) * 6 + Math.random() - 0.5\n    ]);\n}\n// Some less dense data\ndata = data.concat([\n    [11, 0],\n    [11.5, null],\n    [13, 2],\n    [16, 3],\n    [17, -1],\n    [18, -5],\n    [19, 1]\n]);\nvar chart = Highcharts.chart('container', {\n    title: {\n        text: 'Drag slider to sonify'\n    },\n    legend: {\n        enabled: false\n    },\n    series: [{\n        data: data\n    }]\n});\ndocument.getElementById('slider').oninput = function () {\n    chart.sonification.playSegment(this.value);\n};\n","css":".highcharts-figure {\n    max-width: 800px;\n    margin: 0 auto;\n}\n\n#slider {\n    width: 100%;\n    margin-top: 20px;\n    display: block;\n}\n","html":"\n<figure class=\"highcharts-figure\">\n    <input id=\"slider\" type=\"range\" min=\"0\" max=\"100\" value=\"0\">\n    <div id=\"container\"></div>\n    <div class=\"highcharts-description\">\n        <p>\n            This demo demonstrates \"scrubbing\", where the user can drag a slider to sonify the part of the chart where the slider is located. This allows for more control on the speed of the sonification, as well as exploring back and forth.\n        </p>\n        <p>\n            The concept can be extended to pure mouse/touch movements as well, and does not have to be linked to a slider. For example, the same concept can be used to sonify as the user is moving the mouse over the chart.\n        </p>\n    </div>\n</figure>\n","npm":"// 安装\nnpm install highcharts@11.0.1 --save\n\n// import 模块 \nimport Highcharts    from 'highcharts';\nimport Sonification  from 'highcharts/modules/sonification';\nimport Accessibility from 'highcharts/modules/accessibility';\n\n// 初始化模块\nSonification(Highcharts);\nAccessibility(Highcharts);\n","scripts":["https://code.highcharts.com/11.0.1/highcharts.js","https://code.highcharts.com/11.0.1/modules/sonification.js","https://code.highcharts.com/11.0.1/modules/accessibility.js"]}