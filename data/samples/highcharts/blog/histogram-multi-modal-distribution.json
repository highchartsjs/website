{"js":"Highcharts.setOptions({\n    global: {\n        useUTC: false\n    },\n    colors: [\n        'rgba( 0,   154, 253, 0.9 )', // bright blue\n        'rgba( 253, 99,  0,   0.9 )', // bright orange\n        'rgba( 40,  40,  56,  0.9 )', // dark\n        'rgba( 253, 0,   154, 0.9 )', // bright pink\n        'rgba( 154, 253, 0,   0.9 )', // bright green\n        'rgba( 145, 44,  138, 0.9 )', // mid purple\n        'rgba( 45,  47,  238, 0.9 )', // mid blue\n        'rgba( 177, 69,  0,   0.9 )', // dark orange\n        'rgba( 140, 140, 156, 0.9 )', // mid\n        'rgba( 238, 46,  47,  0.9 )', // mid red\n        'rgba( 44,  145, 51,  0.9 )', // mid green\n        'rgba( 103, 16,  192, 0.9 )' // dark purple\n    ],\n    chart: {\n        alignTicks: false,\n        type: '',\n        margin: [60, 25, 100, 90],\n        // borderRadius:10,\n        // borderWidth:1,\n        // borderColor:'rgba(156,156,156,.25)',\n        // backgroundColor:'rgba(204,204,204,.25)',\n        // plotBackgroundColor:'rgba(255,255,255,1)',\n        style: {\n            fontFamily: 'Abel,serif'\n        }\n    },\n    title: {\n        text: 'Generate a Histogram',\n        align: 'left',\n        margin: 10,\n        x: 25,\n        style: {\n            fontWeight: 'bold',\n            color: 'rgba(0,0,0,.9)'\n        }\n    },\n    subtitle: {\n        text: 'From raw data array',\n        align: 'left',\n        x: 30\n    },\n    legend: {\n        enabled: true\n    },\n    plotOptions: {\n        area: {\n            lineWidth: 1,\n            marker: {\n                enabled: false,\n                symbol: 'circle',\n                radius: 4\n            }\n        },\n        arearange: {\n            lineWidth: 1\n        },\n        areaspline: {\n            lineWidth: 1,\n            marker: {\n                enabled: false,\n                symbol: 'circle',\n                radius: 4\n            }\n        },\n        areasplinerange: {\n            lineWidth: 1\n        },\n        boxplot: {\n            groupPadding: 0.05,\n            pointPadding: 0.05,\n            fillColor: 'rgba(255,255,255,.75)'\n        },\n        bubble: {\n            minSize: '0.25%',\n            maxSize: '17%'\n        },\n        column: {\n            // stacking:'normal',\n            groupPadding: 0.05,\n            pointPadding: 0.05\n        },\n        columnrange: {\n            groupPadding: 0.05,\n            pointPadding: 0.05\n        },\n        errorbar: {\n            groupPadding: 0.05,\n            pointPadding: 0.05,\n            showInLegend: true\n        },\n        line: {\n            lineWidth: 1,\n            marker: {\n                enabled: false,\n                symbol: 'circle',\n                radius: 4\n            }\n        },\n        scatter: {\n            marker: {\n                symbol: 'circle',\n                radius: 5\n            }\n        },\n        spline: {\n            lineWidth: 1,\n            marker: {\n                enabled: false,\n                symbol: 'circle',\n                radius: 4\n            }\n        },\n        series: {\n            shadow: false,\n            borderWidth: 0,\n            states: {\n                hover: {\n                    lineWidthPlus: 0\n                }\n            }\n        }\n    },\n    xAxis: {\n        title: {\n            text: 'X Axis Title',\n            rotation: 0,\n            textAlign: 'center',\n            style: {\n                color: 'rgba(0,0,0,.9)'\n            }\n        },\n        labels: {\n            style: {\n                color: 'rgba(0,0,0,.9)',\n                fontSize: '9px'\n            }\n        },\n        lineWidth: 0.5,\n        lineColor: 'rgba(0,0,0,.5)',\n        tickWidth: 0.5,\n        tickLength: 3,\n        tickColor: 'rgba(0,0,0,.75)'\n    },\n    yAxis: {\n        minPadding: 0,\n        maxPadding: 0,\n        gridLineColor: 'rgba(204,204,204,.25)',\n        gridLineWidth: 0.5,\n        title: {\n            text: 'Y Axis<br />Title',\n            rotation: 0,\n            textAlign: 'right',\n            style: {\n                color: 'rgba(0,0,0,.9)'\n            }\n        },\n        labels: {\n            style: {\n                color: 'rgba(0,0,0,.9)',\n                fontSize: '9px'\n            }\n        },\n        lineWidth: 0.5,\n        lineColor: 'rgba(0,0,0,.5)',\n        tickWidth: 0.5,\n        tickLength: 3,\n        tickColor: 'rgba(0,0,0,.75)'\n    }\n});\n\nvar chart,\n    binnedData,\n    rawData = [0.2, 0.2, 0.2, 0.2, 0.2, 0.4, 0.3, 0.2, 0.2, 0.1, 0.2, 0.2, 0.1,\n        0.1, 0.2, 0.4, 0.4, 0.3, 0.3, 0.3, 0.2, 0.4, 0.2, 0.5, 0.2, 0.2, 0.4,\n        0.2, 0.2, 0.2, 0.2, 0.4, 0.1, 0.2, 0.2, 0.2, 0.2, 0.1, 0.2, 0.2, 0.3,\n        0.3, 0.2, 0.6, 0.4, 0.3, 0.2, 0.2, 0.2, 0.2, 1.4, 1.5, 1.5, 1.3, 1.5,\n        1.3, 1.6, 1, 1.3, 1.4, 1, 1.5, 1, 1.4, 1.3, 1.4, 1.5, 1, 1.5, 1.1,\n        1.8, 1.3, 1.5, 1.2, 1.3, 1.4, 1.4, 1.7, 1.5, 1, 1.1, 1, 1.2, 1.6,\n        1.5, 1.6, 1.5, 1.3, 1.3, 1.3, 1.2, 1.4, 1.2, 1, 1.3, 1.2, 1.3,\n        1.3, 1.1, 1.3, 2.5, 1.9, 2.1, 1.8, 2.2, 2.1, 1.7, 1.8, 1.8, 2.5,\n        2, 1.9, 2.1, 2, 2.4, 2.3, 1.8, 2.2, 2.3, 1.5, 2.3, 2, 2, 1.8,\n        2.1, 1.8, 1.8, 1.8, 2.1, 1.6, 1.9, 2, 2.2, 1.5, 1.4, 2.3, 2.4,\n        1.8, 1.8, 2.1, 2.4, 2.3, 1.9, 2.3, 2.5, 2.3, 1.9, 2, 2.3, 1.8];\nbinnedData = binData(rawData);\nchart = Highcharts.chart('container', {\n    chart: {\n        type: 'column',\n        margin: [60, 10, 40, 40]\n    },\n    title: {\n        text: 'Multi-Modal Distribution',\n        x: 25\n    },\n    subtitle: {\n        text: 'Fisher\\'s Iris Data: Petal Width',\n        x: 25\n    },\n    legend: {\n        enabled: false\n    },\n    credits: {\n        enabled: false\n    },\n    exporting: {\n        enabled: false\n    },\n    tooltip: {},\n    plotOptions: {\n        series: {\n            pointPadding: 0,\n            groupPadding: 0,\n            borderWidth: 0.5,\n            borderColor: 'rgba(255,255,255,0.5)',\n            color: Highcharts.getOptions().colors[1]\n        }\n    },\n    xAxis: {\n        title: {\n            text: 'Petal Width (cm)'\n        }\n    },\n    yAxis: {\n        title: {\n            text: ''\n        },\n        maxPadding: 0,\n        endOnTick: false\n    }\n});\nchart.addSeries({\n    name: 'Distribution',\n    data: binnedData\n});\n\n\n//-------------------------------------------------------\nfunction binData(data) {\n\n    var hData = [], // the output array\n        size = data.length, // how many data points\n        bins = Math.round(Math.sqrt(size)); // determine how many bins we need\n    bins = bins > 50 ? 50 : bins; // adjust if more than 50 cells\n    var max = Math.max.apply(null, data), // lowest data value\n        min = Math.min.apply(null, data), // highest data value\n        range = max - min, // total range of the data\n        width = range / bins, // size of the bins\n        binBottom, // place holders for the bounds of each bin\n        binTop;\n\n    // loop through the number of cells\n    for (var i = 0; i < bins; i++) {\n\n        // set the upper and lower limits of the current cell\n        binBottom = min + (i * width);\n        binTop = binBottom + width;\n\n        // check for and set the x value of the bin\n        if (!hData[i]) {\n            hData[i] = [];\n            hData[i][0] = binBottom + (width / 2);\n        }\n\n        // loop through the data to see if it fits in this bin\n        for (var j = 0; j < size; j++) {\n            var x = data[j];\n\n            // adjust if it's the first pass\n            binBottom = i === 0 && j === 0 ? binBottom -= 1 : binBottom;\n\n            // if it fits in the bin, add it\n            if (x > binBottom && x <= binTop) {\n                hData[i][1] = !hData[i][1] ? 1 : hData[i][1] += 1;\n            }\n        }\n    }\n    hData.forEach(function (point, i) {\n        if (typeof point[1] === 'undefined') {\n            hData[i][1] = 0;\n        }\n    });\n    return hData;\n}\n","css":"@import \"https://fonts.googleapis.com/css?family=Changa+One|Loved+by+the+King|Fredericka+the+Great|Droid+Serif:400,700,400italic|Abel|Oswald:400,300,700\";\n\nbody {\n    font-family: Abel, Calibri, Helvetica, sans-serif;\n    font-size: 95%;\n}\n","html":"\n<div id=\"container\" style=\"width:350px;height:250px;margin:1.5em 1em;\"></div>","npm":"// 安装\nnpm install highcharts@11.0.1 --save\n\n// import 模块 \nimport Highcharts     from 'highcharts';\nimport HighchartsMore from 'highcharts/highcharts-more';\nimport Exporting      from 'highcharts/modules/exporting';\nimport Accessibility  from 'highcharts/modules/accessibility';\n\n// 初始化模块\nHighchartsMore(Highcharts);\nExporting(Highcharts);\nAccessibility(Highcharts);\n","scripts":["https://code.highcharts.com/11.0.1/highcharts.js","https://code.highcharts.com/11.0.1/highcharts-more.js","https://code.highcharts.com/11.0.1/modules/exporting.js","https://code.highcharts.com/11.0.1/modules/accessibility.js"]}