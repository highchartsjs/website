{"js":"// Give the points a 3D feel by adding a radial gradient\nHighcharts.getOptions().colors = Highcharts.getOptions().colors.map(\n    function (color) {\n        return {\n            radialGradient: {\n                cx: 0.4,\n                cy: 0.3,\n                r: 0.5\n            },\n            stops: [\n                [0, color],\n                [1, new Highcharts.Color(color).brighten(-0.2).get('rgb')]\n            ]\n        };\n    });\nvar left = Highcharts.chart('left', {\n    chart: {\n        renderTo: 'container',\n        margin: 100,\n        type: 'scatter',\n        options3d: {\n            enabled: true,\n            alpha: 10,\n            beta: 29,\n            depth: 250,\n            viewDistance: 5,\n            fitToPlot: false,\n            frame: {\n                bottom: { size: 1, color: 'rgba(0,0,0,0.02)' },\n                back: { size: 1, color: 'rgba(0,0,0,0.04)' },\n                side: { size: 1, color: 'rgba(0,0,0,0.06)' }\n            }\n        }\n    },\n    title: {\n        text: 'Stereographic 3D scatter'\n    },\n    plotOptions: {\n        scatter: {\n            width: 10,\n            height: 10,\n            depth: 10\n        }\n    },\n    yAxis: {\n        min: 0,\n        max: 10,\n        title: null\n    },\n    xAxis: {\n        min: 0,\n        max: 10,\n        gridLineWidth: 1\n    },\n    zAxis: {\n        min: 0,\n        max: 10,\n        showFirstLabel: false\n    },\n    legend: {\n        enabled: false\n    },\n    series: [{\n        name: 'Reading',\n        colorByPoint: true,\n        data: returnData(),\n        marker: {\n            radius: 2\n        }\n    }]\n});\n\nvar right = Highcharts.chart('right', {\n    chart: {\n        renderTo: 'container',\n        margin: 100,\n        type: 'scatter',\n        options3d: {\n            enabled: true,\n            alpha: 10,\n            beta: 31,\n            depth: 250,\n            viewDistance: 5,\n            fitToPlot: false,\n            frame: {\n                bottom: { size: 1, color: 'rgba(0,0,0,0.02)' },\n                back: { size: 1, color: 'rgba(0,0,0,0.04)' },\n                side: { size: 1, color: 'rgba(0,0,0,0.06)' }\n            }\n        }\n    },\n    title: {\n        text: 'Stereographic 3D scatter'\n    },\n    plotOptions: {\n        scatter: {\n            width: 10,\n            height: 10,\n            depth: 10\n        }\n    },\n    yAxis: {\n        min: 0,\n        max: 10,\n        title: null\n    },\n    xAxis: {\n        min: 0,\n        max: 10,\n        gridLineWidth: 1\n    },\n    zAxis: {\n        min: 0,\n        max: 10,\n        showFirstLabel: false\n    },\n    legend: {\n        enabled: false\n    },\n    series: [{\n        name: 'Reading',\n        colorByPoint: true,\n        data: returnData(),\n        marker: {\n            radius: 2\n        }\n    }]\n});\n\n\nsetInterval(function () {\n    left.options.chart.options3d.beta = left.options.chart.options3d.beta + 1;\n    right.options.chart.options3d.beta = left.options.chart.options3d.beta + 2;\n\n    left.redraw();\n    right.redraw();\n}, 200);\n\nfunction returnData() {\n    return [[1, 6, 5], [8, 7, 9], [1, 3, 4], [4, 6, 8], [5, 7, 7],\n        [6, 9, 6], [7, 0, 5], [2, 3, 3], [3, 9, 8], [3, 6, 5], [4, 9, 4],\n        [2, 3, 3], [6, 9, 9], [0, 7, 0], [7, 7, 9], [7, 2, 9], [0, 6, 2],\n        [4, 6, 7], [3, 7, 7], [0, 1, 7], [2, 8, 6], [2, 3, 7], [6, 4, 8],\n        [3, 5, 9], [7, 9, 5], [3, 1, 7], [4, 4, 2], [3, 6, 2], [3, 1, 6],\n        [6, 8, 5], [6, 6, 7], [4, 1, 1], [7, 2, 7], [7, 7, 0], [8, 8, 9],\n        [9, 4, 1], [8, 3, 4], [9, 8, 9], [3, 5, 3], [0, 2, 4], [6, 0, 2],\n        [2, 1, 3], [5, 8, 9], [2, 1, 1], [9, 7, 6], [3, 0, 2], [9, 9, 0],\n        [3, 4, 8], [2, 6, 1], [8, 9, 2], [7, 6, 5], [6, 3, 1],\n        [9, 3, 1], [8, 9, 3], [9, 1, 0], [3, 8, 7], [8, 0, 0],\n        [4, 9, 7], [8, 6, 2], [4, 3, 0], [2, 3, 5], [9, 1, 4],\n        [1, 1, 4], [6, 0, 2], [6, 1, 6], [3, 8, 8], [8, 8, 7],\n        [5, 5, 0], [3, 9, 6], [5, 4, 3], [6, 8, 3], [0, 1, 5],\n        [6, 7, 3], [8, 3, 2], [3, 8, 3], [2, 1, 6], [4, 6, 7],\n        [8, 9, 9], [5, 4, 2], [6, 1, 3], [6, 9, 5], [4, 8, 2],\n        [9, 7, 4], [5, 4, 2], [9, 6, 1], [2, 7, 3], [4, 5, 4],\n        [6, 8, 1], [3, 4, 0], [2, 2, 6], [5, 1, 2], [9, 9, 7],\n        [6, 9, 9], [8, 4, 3], [4, 1, 7], [6, 2, 5], [0, 4, 9],\n        [3, 5, 9], [6, 9, 1], [1, 9, 2]];\n}","css":"#container {\n    margin: 0 auto;\n}\n\n.eye {\n    width: 49%;\n    height: 320px;\n    margin: 0;\n    display: inline-block;\n}\n","html":"\n<div id=\"container\">\n    <div class=\"eye\" id=\"left\"></div>\n    <div class=\"eye\" id=\"right\"></div>\n</div>","npm":"// 安装\nnpm install highcharts@11.0.1 --save\n\n// import 模块 \nimport Highcharts    from 'highcharts';\nimport Highcharts3d  from 'highcharts/highcharts-3d';\nimport Accessibility from 'highcharts/modules/accessibility';\n\n// 初始化模块\nHighcharts3d(Highcharts);\nAccessibility(Highcharts);\n","scripts":["https://code.highcharts.com/11.0.1/highcharts.js","https://code.highcharts.com/11.0.1/highcharts-3d.js","https://code.highcharts.com/11.0.1/modules/accessibility.js"]}