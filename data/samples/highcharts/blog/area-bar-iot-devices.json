{"js":"Highcharts.setOptions({\n    chart: {\n        style: {\n            fontFamily: 'Helvetica,Arial,sans-serif'\n        }\n    },\n    legend: {\n        borderRadius: 0,\n        layout: 'vertical',\n        align: 'left',\n        x: 30,\n        y: 50,\n        verticalAlign: 'top',\n        floating: true,\n        itemStyle: {\n            color: '#000000',\n            fontFamily: 'Helvetica,Arial,sans-serif'\n        }\n    },\n    title: {\n        style: {\n            color: '#000000',\n            fontFamily: 'Helvetica,Arial,sans-serif',\n            fontSize: '20px',\n            fontWeight: 'bold'\n        }\n    },\n\n\n    xAxis: {\n        labels: {\n            style: {\n                color: '#333333',\n                fontFamily: 'Helvetica,Arial,sans-serif',\n                fontSize: 8\n            },\n            rotation: 0\n        }\n    },\n\n    yAxis: {\n        labels: {\n            style: {\n                color: '#333333',\n                fontFamily: 'Helvetica,Arial,sans-serif'\n            }\n        },\n        min: 0,\n        // max: 7000,\n        plotLines: [{\n            value: 0,\n            width: 1,\n            color: '#808080'\n        }],\n        title: {\n            style: {\n                color: '#333333',\n                fontFamily: 'Helvetica,Arial,sans-serif'\n            },\n            text: 'Total number of devices'\n        }\n    }\n\n});\n\n\nvar years = ['', '`13', '`14', '`15', '`16'];\n\nvar optionsOne = {\n    xAxis: {\n        categories: [{\n            name: 'Bluetooth Headset',\n            categories: years\n        },\n        {\n            name: 'Body Camera',\n            categories: years\n        },\n        {\n            name: 'Chest Strap',\n            categories: years\n        },\n        {\n            name: 'Head Mounted Display',\n            categories: years\n        },\n        {\n            name: 'Other',\n            categories: years\n        },\n        {\n            name: 'Smart Glasses',\n            categories: years\n        },\n        {\n            name: 'Smart Watch',\n            categories: years\n        },\n        {\n            name: 'Sports Watch',\n            categories: years\n        },\n        {\n            name: 'Wristband',\n            categories: years\n        }],\n        labels: {\n            lineWidth: 0,\n            minorGridLineWidth: 0,\n            lineColor: 'transparent'\n        }\n    }\n};\n\nvar chartOne = {\n    chart: {\n        renderTo: 'chartspace',\n        type: 'area'\n    },\n    title: {\n        text: 'IoT devices sales and shipment information'\n    },\n\n    plotOptions: {\n        area: {\n            marker: {\n                enabled: false,\n                symbol: 'circle',\n                radius: 2,\n                states: {\n                    hover: {\n                        enabled: true\n                    }\n                }\n            }\n        }\n    },\n\n\n    series: []\n};\n\nvar optionsTwo = {\n    xAxis: {\n        name: '',\n        categories: ['Bluetooth Headset', 'Body Camera', 'Chest Strap', 'Head Mounted Display', 'Other', 'Smart Glasses', 'Smart Watch', 'Sports Watch', 'Wristband'],\n        labels: {\n            enabled: false\n        }\n    },\n    yAxis: {\n        reversed: true\n    },\n    legend: {\n        x: 50,\n        y: 100\n    },\n    style: {\n        text: 'Number of returns'\n    }\n};\n\nvar chartTwo = {\n    chart: {\n        renderTo: 'dtschart',\n        type: 'column'\n    },\n    title: {\n        text: ''\n    },\n\n    xAxis: {\n        tickWidth: 0,\n        labels: {\n            enabled: false\n        }\n    },\n\n    yAxis: {\n        gridLineWidth: 0,\n        labels: {\n            style: {\n                color: 'transparent'\n            }\n        },\n        title: {\n            text: 'text text text',\n            style: {\n                color: 'transparent'\n            }\n        }\n    },\n\n    plotOptions: {\n        area: {\n            marker: {\n                enabled: false,\n                symbol: 'circle',\n                radius: 2,\n                states: {\n                    hover: {\n                        enabled: true\n                    }\n                }\n            }\n        }\n    },\n\n\n    series: []\n};\n\nfetch('https://cdn.jsdelivr.net/gh/highcharts/highcharts/samples/data/iot-devices.csv').then(function (response) {\n    return response.text();\n}).then(function (result) {\n    var lines = result.split('\\n');\n    var salesNumbers = [];\n    var averageDaysToShip = [];\n    var percReturned = [];\n\n    lines.forEach(function (line, lineNo) {\n        var items = line.split(',');\n        if (lineNo === 0) {\n            return true;\n        }\n        var totalReturned = parseFloat(items[1] * parseFloat(items[4]) / 100);\n\n        if ((lineNo + 3) % 4 === 0) {\n            salesNumbers.push(parseFloat(null));\n            // averageDaysToShip.push(parseFloat(null));\n            percReturned.push(null);\n            averageDaysToShip.push(parseFloat(items[3]));\n            // options.xAxis.categories.push(items[0]);\n            // count += 1;\n        }\n\n        // options.xAxis.categories.push(items[0]);\n\n        salesNumbers.push(parseFloat(items[1]));\n        // averageDaysToShip.push(parseFloat(items[3]));\n        percReturned.push(totalReturned);\n    });\n\n\n    var salesObject = {\n        name: 'total devices sold',\n        data: salesNumbers\n    };\n\n    var returnsObject = {\n        name: 'devices returned',\n        data: percReturned\n    };\n\n    var dtsObject = {\n        name: 'Days to ship',\n        data: averageDaysToShip,\n        color: '#FED001',\n        dataLabels: {\n            enabled: true,\n            style: {\n                fontSize: 8,\n                fontWeight: 1\n            }\n        }\n    };\n\n    chartOne.series.push(salesObject);\n    chartOne.series.push(returnsObject);\n    chartTwo.series.push(dtsObject);\n\n    chartOne = Highcharts.merge(optionsOne, chartOne);\n    var chartOneRendered = new Highcharts.Chart(chartOne);\n\n    chartTwo = Highcharts.merge(optionsTwo, chartTwo);\n    var chartTwoRendere = new Highcharts.Chart(chartTwo);\n\n    console.log(chartOne);\n    console.log(chartTwo);\n\n}).catch(function (error) {\n    console.log(error);\n});","css":"","html":"\n<div id=\"chartspace\" style=\"height:400px;width:800px;margin:0 auto;\"></div>\n<div id=\"dtschart\" style=\"height:200px;width:800px;margin:0 auto;\"></div>","npm":"// 安装\nnpm install highcharts@11.0.1 --save\n\n// import 模块 \nimport Highcharts        from 'highcharts';\nimport GroupedCategories from 'https://blacklabel.github.io/grouped_categories/grouped-categories.js';\nimport Accessibility     from 'highcharts/modules/accessibility';\n\n// 初始化模块\nGroupedCategories(Highcharts);\nAccessibility(Highcharts);\n","scripts":["https://code.highcharts.com/11.0.1/highcharts.js","https://blacklabel.github.io/grouped_categories/grouped-categories.js","https://code.highcharts.com/11.0.1/modules/accessibility.js"]}