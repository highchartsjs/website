{"js":"Math.easeInSine = function (pos) {\n    return -Math.cos(pos * (Math.PI / 2)) + 1;\n};\n\nMath.easeOutQuint = function (pos) {\n    return (Math.pow((pos - 1), 5) + 1);\n};\nMath.easeOutBounce = pos => {\n    if ((pos) < (1 / 2.75)) {\n        return (7.5625 * pos * pos);\n    }\n    if (pos < (2 / 2.75)) {\n        return (7.5625 * (pos -= (1.5 / 2.75)) * pos + 0.75);\n    }\n    if (pos < (2.5 / 2.75)) {\n        return (7.5625 * (pos -= (2.25 / 2.75)) * pos + 0.9375);\n    }\n    return (7.5625 * (pos -= (2.625 / 2.75)) * pos + 0.984375);\n};\n\n\nconst reduced = window.matchMedia('(prefers-reduced-motion: reduce)').matches;\nlet mapLoaded = false;\n\n\nconst imgPath = 'https://cdn.jsdelivr.net/gh/highcharts/highcharts@feb8baf043cffb5e141ab065f95b8ca397569297/samples/graphics/homepage/';\nconst maps = {\n    chart: {\n        animation: {\n            enabled: true,\n            duration: 3000,\n            easing: 'easeOutQuint'\n        },\n        accessibility: {\n            enabled: false\n        },\n        styledMode:\n        true,\n        margin: 0,\n        spacing: 0,\n        plotBackgroundImage: 'bg.png',\n        events: {\n            load: function () {\n                const chart = this;\n\n                const mapPointPoint = document.querySelector('.map-point-point');\n                const mapPointTop = document.getElementsByClassName('map-point-top')[1];\n                const mapPointCenter = document.getElementsByClassName('map-point-center')[1];\n                const leftSide =  document.querySelector('.left');\n                const rightSide =  document.querySelector('.right');\n                const top =  document.querySelector('.top');\n                const bottom =  document.querySelector('.bottom');\n                const background = document.getElementsByClassName('highcharts-plot-background')[0];\n\n                const finalHide = function () {\n                    [].forEach.call(\n                        document.getElementsByClassName('particle'),\n                        p => p.classList.add('fade')\n                    );\n                    [].forEach.call(\n                        document.getElementsByClassName('green'),\n                        g => g.classList.add('fade')\n                    );\n\n                    leftSide.classList.add('fade');\n                    rightSide.classList.add('fade');\n                    bottom.classList.add('fade');\n                    top.classList.add('fade');\n                    leftSide.style.transition = 'all 1s';\n                    rightSide.style.transition = 'all 1s';\n                    mapPointPoint.classList.add('hide');\n                    mapPointTop.classList.add('hide');\n                    mapPointCenter.classList.add('hide');\n                    background.style.fill = '#1f1836';\n                };\n\n\n                const updateData = function () {\n                    chart.series[10].update({\n                        data: [\n                            { x: 4, y: 2 },\n                            { x: 6, y: 7 },\n                            { x: 10, y: 5 }\n                        ]\n                    });\n                    chart.series[11].update({\n                        data: [\n                            { x: 4, y: 2 },\n                            { x: 6, y: 7 },\n                            { x: 10, y: 5 }\n                        ]\n                    });\n                    chart.series[12].update({\n                        data: [\n                            { x: 4, y: 2 },\n                            { x: 10, y: 5 },\n                            { x: 16, y: 2 }\n                        ]\n                    });\n                    chart.series[13].update({\n                        data: [\n                            { x: 6, y: 9 },\n                            { x: 10, y: 11 },\n                            { x: 14, y: 9 }\n                        ]\n                    });\n\n                };\n\n                const growEnvelope = function () {\n\n                    leftSide.style.transition = 'none';\n                    rightSide.style.transition = 'none';\n\n                    chart.series[10].data[2].update({\n                        x: 10, y: 5\n                    });\n                    chart.series[10].data[1].update({\n                        x: 6\n                    });\n                    chart.series[11].data[2].update({\n                        x: 10, y: 5\n                    });\n                    chart.series[11].data[1].update({\n                        x: 6\n                    });\n                    chart.series[12].data[1].update({\n                        x: 10, y: 5\n                    });\n                    chart.series[13].data[1].update({\n                        x: 10, y: 11\n                    });\n                };\n\n                // /if reduced motion, show the envelope right away\n                if (reduced) {\n                    updateData();\n                }\n\n                setTimeout(function () {\n                    // /if not reduced motion, build the envelope\n                    if (!reduced) {\n                        growEnvelope();\n                    }\n                    // /grow the map marker\n                    mapPointPoint.classList.add('grow');\n                    mapPointTop.classList.add('grow');\n                    mapPointCenter.classList.add('grow');\n                }, 1000);\n\n                setTimeout(function () {\n                    // /animation is don\n                    // /hide everything\n                    finalHide();\n                }, 4000);\n\n            }\n        }\n    },\n    credits: {\n        enabled: false\n    },\n\n    title: {\n        text: ''\n    },\n    xAxis: [\n        // 0 - bottom, top map area\n        {\n            min: 0,\n            max: 20,\n            gridLineColor: 'transparent',\n            tickInterval: 1\n        },\n        // 1 - left map area\n        {\n            min: 0,\n            max: 20,\n            gridLineColor: 'transparent',\n            tickInterval: 1\n        },\n        // /2 - right map area\n        {\n            min: 0,\n            max: 20,\n            gridLineColor: 'transparent',\n            tickInterval: 1,\n            reversed: true\n        },\n\n        // /3 - for particle group 2\n        {\n            min: 0,\n            max: 20,\n            gridLineColor: 'transparent',\n            tickInterval: 1\n        }],\n    yAxis: [\n        // 0\n        {\n            min: -2,\n            max: 18,\n            gridZIndex: 20,\n            gridLineColor: 'transparent',\n            tickInterval: 1,\n            startOnTick: false,\n            endOnTick: false\n        },\n        // /1 - for the top map area\n        {\n            min: -2,\n            max: 18,\n            gridZIndex: 20,\n            gridLineColor: 'transparent',\n            tickInterval: 1,\n            startOnTick: false,\n            endOnTick: false,\n            reversed: true\n        }],\n    legend: {\n        enabled: false\n    },\n    tooltip: {\n        enabled: false\n    },\n    plotOptions: {\n        series: {\n            allowOverlap: true,\n            opacity: 1,\n            enableMouseTracking: false,\n            dataLabels: {\n                enabled: false\n            },\n            marker: {\n                enabled: false,\n                allowOverlap: true\n            },\n            states: {\n                hover: {\n                    enabled: false\n                },\n                inactive: {\n                    enabled: false\n                }\n            }\n        },\n        pie: {\n            animation: false\n        },\n        line: {\n            animation: false\n        }\n\n    },\n    series: [\n        // 0 - bottom line\n        {\n            type: 'line',\n            className: 'transparent',\n            data: [\n                { x: 0, y: -1 },\n                { x: 20, y: -1 }\n            ],\n            zIndex: 10\n\n        },\n        // 1 - line\n        {\n            type: 'line',\n            lineWidth: 1,\n            className: 'transparent',\n            data: [\n                { x: 0, y: 0 },\n                { x: 20, y: 0 }\n            ],\n            zIndex: 10\n        },\n        // 2 - line\n        {\n            type: 'line',\n            lineWidth: 1,\n            className: 'transparent',\n            data: [\n                { x: 0, y: 1 },\n                { x: 20, y: 1 }\n            ],\n            zIndex: 10\n        },\n        // 3 - line\n        {\n            type: 'line',\n            className: 'green',\n            lineWidth: 1,\n            data: [\n                { x: 0, y: 2 },\n                { x: 20, y: 2 }\n            ],\n            zIndex: 10\n\n        },\n        // 4 - line\n        {\n            type: 'line',\n            className: 'green',\n            lineWidth: 1,\n            data: [\n                { x: 0, y: 3 },\n                { x: 20, y: 3 }\n            ],\n            zIndex: 10\n\n        },\n        // 5 - line\n        {\n            type: 'line',\n            className: 'green',\n            lineWidth: 1,\n            data: [\n                { x: 0, y: 4 },\n                { x: 20, y: 4 }\n            ],\n            zIndex: 10\n        },\n        // 6 - line\n        {\n            type: 'line',\n            className: 'green',\n            lineWidth: 1,\n            data: [\n                { x: 0, y: 5 },\n                { x: 20, y: 5 }\n            ],\n            zIndex: 10\n\n        },\n        // 7 - line\n        {\n            type: 'line',\n            className: 'green',\n            lineWidth: 1,\n            data: [\n                { x: 0, y: 6 },\n                { x: 20, y: 6 }\n            ],\n            zIndex: 10\n        },\n        // 8 - line\n        {\n            type: 'line',\n            className: 'green',\n            lineWidth: 1,\n            data: [\n                { x: 0, y: 7 },\n                { x: 20, y: 7 }\n            ],\n            zIndex: 10\n        },\n        // 9 area - foreground-water\n        {\n            type: 'arearange',\n            name: 'foreground',\n            className: 'foreground',\n            animation: false,\n            data: [{ x: 0, low: -2, high: 8 }, { x: 20, low: -2, high: 8 }],\n            zIndex: 4,\n            visible: true\n        },\n        // 10 - left map\n        {\n            type: 'area',\n            name: 'left',\n            animation: false,\n            className: 'left',\n            data: [\n                { x: 4, y: 2 },\n                { x: 4, y: 7 },\n                { x: 4, y: 2 }\n\n            ],\n            xAxis: 1,\n            zoneAxis: 'y',\n            zones: [{\n                value: 2,\n                color: 'transparent'\n            }],\n            zIndex: 15,\n            visible: true\n        },\n        // 11 - right map\n        {\n            type: 'area',\n            name: 'right',\n            animation: false,\n            className: 'right',\n            xAxis: 2,\n            data: [\n                { x: 4, y: 2 },\n                { x: 4, y: 7 },\n                { x: 4, y: 2 }\n\n            ],\n            zoneAxis: 'y',\n            zones: [{\n                value: 2,\n                color: 'transparent'\n            }],\n            zIndex: 15,\n            visible: true\n        },\n        // 12 - bottom map\n        {\n            type: 'area',\n            name: 'bottom',\n            animation: false,\n            className: 'bottom',\n            data: [\n                { x: 4, y: 2 },\n                { x: 10, y: 2 },\n                { x: 16, y: 2 }\n\n            ],\n            zoneAxis: 'y',\n            zones: [{\n                value: 2,\n                color: 'transparent'\n            }],\n            zIndex: 15,\n            visible: true\n        },\n        // 13 - top map\n        {\n            type: 'area',\n            name: 'top',\n            animation: false,\n            className: 'top',\n\n            data: [\n                { x: 6, y: 9 },\n                { x: 10, y: 9 },\n                { x: 14, y: 9 }\n\n            ],\n            yAxis: 1,\n            zoneAxis: 'y',\n            zones: [{\n                value: 9,\n                color: 'transparent'\n            }],\n            zIndex: 15,\n            visible: true\n        },\n\n        // 14 - map point top\n        {\n            type: 'scatter',\n            name: 'map point top',\n            animation: false,\n            className: 'map-point-top',\n            data: [\n                {\n                    x: 10,\n                    y: 8.4, // 11,\n                    marker: {\n                        enabled: true,\n                        symbol: 'circle',\n                        radius: 37\n                    }\n                }\n            ],\n            zIndex: 15,\n            xAxis: 1,\n            visible: true\n        },\n        // 15 - map center\n        {\n            type: 'scatter',\n            name: 'map point center',\n            animation: false,\n            className: 'map-point-center',\n            data: [\n                {\n                    x: 10,\n                    y: 8.44,\n                    marker: {\n                        enabled: true,\n                        symbol: 'circle',\n                        radius: 14\n                    }\n                }\n            ],\n            zIndex: 19,\n            xAxis: 1,\n            visible: true\n        },\n        // 16 - map point point\n        {\n            type: 'area',\n            name: 'map point',\n            animation: false,\n            className: 'map-point-point',\n            data: [\n                { x: 8.84, y: 8.48 },\n                { x: 10, y: 10 },\n                { x: 11.16, y: 8.52 }\n\n            ],\n            zoneAxis: 'y',\n            zones: [{\n                value: 7,\n                color: 'transparent'\n            }],\n            zIndex: 18,\n            marker: {\n                enabled: false\n            },\n            yAxis: 1,\n            visible: true\n        },\n        // 17 - particles\n        {\n            type: 'scatter',\n            name: 'particles',\n            animation: false,\n            className: 'particle',\n            data: [\n                {\n                    x: 6.5,\n                    y: 12.7,\n                    className: 'particle-1',\n                    marker: {\n                        enabled: true,\n                        symbol: 'url(' + imgPath + 'p1.svg)',\n                        width: 25,\n                        height: 35\n\n                    }\n                },\n                {\n                    x: 4.5,\n                    y: 8.2,\n                    className: 'particle-2',\n                    marker: {\n                        enabled: true,\n                        symbol: 'url(' + imgPath + 'p2.svg)',\n                        width: 30,\n                        height: 45\n\n                    }\n                },\n                {\n                    x: 3,\n                    y: 1.5,\n                    className: 'particle-6',\n                    marker: {\n                        enabled: true,\n                        symbol: 'url(' + imgPath + 'p6.svg)',\n                        width: 45,\n                        height: 45\n\n                    }\n                },\n                {\n                    x: 16.8,\n                    y: 1.5,\n                    className: 'particle-5',\n                    marker: {\n                        enabled: true,\n                        symbol: 'url(' + imgPath + 'p5.svg)',\n                        width: 35,\n                        height: 50\n\n                    }\n                }\n            ],\n            zIndex: 30,\n            xAxis: 2,\n            visible: true\n        }\n    ]\n};\n\n\nconst finalMap = function () {\n    Highcharts.getJSON('https://cdn.jsdelivr.net/gh/highcharts/highcharts@v7.0.0/samples/data/world-population-density.json',\n        function (data) {\n            // Assign id's\n            data.forEach(function (p) {\n                p.id = p.code;\n            });\n            // Initialize the chart\n            Highcharts.mapChart('maps', {\n                chart: {\n                    styledMode: true,\n                    animation: {\n\n                        duration: 1000\n\n                    },\n                    events: {\n                        load: function () {\n                            const mapSeries = document.querySelector('.highcharts-map-series');\n                            const title = document.querySelector('.highcharts-title');\n                            const subtitle = document.querySelector('.highcharts-subtitle');\n                            mapSeries.style.opacity = 0;\n                            setTimeout(function () {\n                                mapSeries.style.opacity = 0;\n                                title.classList.add('fade-in');\n                                subtitle.classList.add('fade-in');\n                            }, 200);\n\n                            setTimeout(function () {\n                                mapSeries.classList.add('fade-in');\n                            }, 500);\n\n\n                            setTimeout(function () {\n                                mapLoaded  = true;\n                            }, 2000);\n                        },\n                        redraw: function () {\n                            const mapSeries = document.querySelector('.highcharts-map-series');\n                            if (mapLoaded) {\n                                mapSeries.classList.add('show');\n                            }\n                        }\n                    }\n                },\n                credits: {\n                    enabled: false\n                },\n                title: {\n                    text: 'World Population Density',\n                    style: {\n                        fontFamily: 'IBM Plex Sans',\n                        color: '#fff'\n                    }\n                },\n                exporting: {\n                    enabled: false\n                },\n                legend: {\n                    title: {\n                        text: 'Population density per km²'\n                    },\n                    labelStyle: {\n                        color: '#fff'\n\n                    },\n                    floating: true,\n                    y: 20\n                },\n                colorAxis: {\n                    min: 1,\n                    max: 1000,\n                    type: 'logarithmic',\n                    maxColor: '#4455f2'\n                },\n                mapNavigation: {\n                    enabled: true,\n                    buttonOptions: {\n                        verticalAlign: 'bottom',\n                        x: 5\n                    }\n                },\n                // mapView: {\n                //     center: [4100, 8280], // In terms of pre-projected units\n                //     zoom: 0.1\n                // },\n                tooltip: {\n                    useHTML: true,\n                    distance: -15,\n                    formatter: function () {\n                        const htmlString =\n                        `<div class=\"tip-grid\">\n                        <div class=\"tip-content\">\n                            <div class=\"dot\"></div>${this.point.name}\n                        </div>\n                        <i class=\"fas fa-caret-down tip-point\"></i>\n                        </div>\n                        `;\n                        return htmlString;\n                    },\n                    valueSuffix: '/km²'\n                },\n                series: [{\n                    data: data,\n                    mapData: Highcharts.maps['custom/world-highres'],\n                    joinBy: ['iso-a2', 'code'],\n                    name: 'Population density',\n                    allowPointSelect: true,\n                    cursor: 'pointer',\n                    events: {\n                        click: function (e) {\n                            e.point.zoomTo();\n                        }\n                    }\n\n                }],\n                responsive: {\n                    rules: [{\n                        condition: {\n                            maxWidth: 400\n                        },\n                        chartOptions: {\n                            subtitle: {\n                                text: ''\n                            },\n                            chart: {\n                                margin: [40, 1, 65, 0]\n                            }\n                        }\n                    },\n                    {\n                        condition: {\n                            minWidth: 401\n                        },\n                        chartOptions: {\n                            subtitle: {\n                                text: 'Click a country to zoom to it.'\n                            },\n                            chart: {\n                                margin: [60, 1, 65, 0]\n                            }\n\n                        }\n                    }]\n                }\n            });\n        });\n};\n\ndocument.addEventListener('DOMContentLoaded', function () {\n    Highcharts.mapChart('maps', maps);\n    let dtime = 5000;\n\n    if (reduced) {\n        dtime = 5500;\n    }\n    setTimeout(function () {\n        finalMap();\n    }, dtime);\n\n});\n","css":"@import \"https://code.highcharts.com/css/highcharts.css\";\n\nbody {\n    margin: 0;\n}\n\n.chart-container .highcharts-container {\n    position: relative;\n    overflow: hidden;\n    text-align: left;\n    line-height: normal;\n    fill: #fff;\n    z-index: 0;\n    -webkit-tap-highlight-color: rgb(0 0 0 / 0%);\n    font-family: \"IBM Plex Sans\", sans-serif;\n    font-size: 12px;\n    user-select: none;\n    touch-action: manipulation;\n    outline: none;\n}\n\n.chart-container .highcharts-grid-line {\n    fill: none;\n    stroke: transparent;\n    z-index: 40;\n}\n\n.chart-container .highcharts-xaxis-grid .highcharts-grid-line {\n    stroke-width: 1px;\n}\n\n.chart-container .highcharts-plot-band,\n.highcharts-pane {\n    fill: #30426b;\n    fill-opacity: 1;\n    z-index: 30;\n}\n\n.chart-container .highcharts-legend-series-active g.highcharts-series:not(.highcharts-series-hover),\n.chart-container .highcharts-legend-point-active .highcharts-point:not(.highcharts-point-hover),\n.chart-container .highcharts-legend-series-active .highcharts-markers:not(.highcharts-series-hover),\n.chart-container .highcharts-legend-series-active .highcharts-data-labels:not(.highcharts-series-hover) {\n    opacity: 100%;\n}\n\n.chart-container .highcharts-series-inactive {\n    opacity: 100%;\n    transition: opacity 50ms;\n}\n\n.chart-container .highcharts-tooltip-0 {\n    filter: drop-shadow(5px 7px 13px rgb(0 0 0 / 14%)) !important;\n    box-shadow: 5px 7px 13px 1px rgb(0 0 0 / 14%);\n}\n\n.chart-container .highcharts-tooltip-box {\n    stroke-width: 0;\n    border: none;\n    stroke: #ebebeb;\n    fill: #fff;\n    fill-opacity: 1;\n}\n\n.chart-container .highcharts-tooltip text {\n    fill: #333;\n    font-family: \"IBM Plex Sans\", sans-serif;\n}\n\n.chart-container .highcharts-tooltip {\n    z-index: 100;\n}\n\n.chart-container .highcharts-graph {\n    fill: unset;\n    stroke-width: unset;\n    stroke: unset;\n    stroke-linecap: butt;\n    stroke-linejoin: round;\n}\n\n#maps {\n    width: 250px;\n    height: 250px;\n    border-radius: 4px;\n    background-color: #2f2b38;\n    border: 1px solid #46465c;\n}\n\n#maps .highcharts-background {\n    fill: #1f1836;\n}\n\n#maps .highcharts-map-series {\n    opacity: 0%;\n}\n\n#maps .highcharts-plot-background {\n    fill: #46445d;\n    stroke: transparent;\n}\n\n#maps .highcharts-zone-area-0,\n#maps .highcharts-zone-area-1 {\n    fill: transparent;\n    stroke: transparent;\n}\n\n#maps .foreground,\n#maps .map-point-center .highcharts-color-5 {\n    fill: #201836;\n    stroke: transparent;\n}\n\n#maps .map-point-center {\n    transform: translate(63px, 60px) scale(0.5);\n    transition: all 3s;\n}\n\n#maps .map-point-center.grow {\n    transform: translate(0, -25px) scale(1);\n}\n\n#maps .map-point-point,\n#maps .map-point-top,\n#maps .map-point-top .highcharts-color-4 {\n    fill: #8bf2b6;\n    stroke: #8bf2b6;\n    transition: all 3s;\n}\n\n#maps .map-point-point.grow {\n    transform: translate(-87px, -106px) scale(1.7);\n}\n\n#maps .map-point-top {\n    transform: translate(63px, 60px) scale(0.5);\n}\n\n#maps .map-point-top.grow {\n    transform: translate(14px, -11px) scale(0.89);\n}\n\n#maps .top {\n    fill: #79758d;\n    stroke: transparent;\n}\n\n#maps .bottom {\n    fill: #fff;\n    stroke: transparent;\n}\n\n#maps .fade-in {\n    opacity: 100% !important;\n    transition: opacity 1s;\n}\n\n#maps .fade {\n    opacity: 0% !important;\n    transition: opacity 1s;\n}\n\n#maps .hide {\n    opacity: 0% !important;\n    transition: none !important;\n}\n\n#maps .show {\n    opacity: 100% !important;\n    transition: none !important;\n}\n\n#maps .left,\n#maps .right {\n    fill: #8087e8;\n    stroke: transparent;\n    transition: all 3s;\n}\n\n#maps .transparent {\n    fill: transparent;\n    stroke: transparent;\n}\n\n#maps .green {\n    fill: #8bf2b6;\n    stroke: #8bf2b6;\n}\n\n#maps .particle {\n    transform: scale(0.6);\n}\n\n#maps .particle-1 {\n    transform: translate(50px, 85px) rotate(230deg);\n    transform-origin: center;\n}\n\n#maps .particle-2 {\n    transform: translate(120px, 50px);\n    transform-origin: center;\n}\n\n#maps .particle-5 {\n    transform: translate(15px, 110px);\n    transform-origin: center;\n}\n\n#maps .particle-6 {\n    transform: translate(130px, 120px);\n    transform-origin: center;\n}\n\n#maps .highcharts-map-series .highcharts-point {\n    stroke: #f0f0f0;\n}\n\n#maps .highcharts-map-series .highcharts-point-hover {\n    fill-opacity: 1;\n}\n\n#maps .highcharts-tooltip-box {\n    fill: #fff;\n    color: #2f2b38;\n    fill-opacity: 1;\n    filter: drop-shadow(0 8px 24px rgb(0 0 0 / 20%));\n    border-radius: 100px;\n}\n\n#maps .highcharts-label-box {\n    fill: transparent;\n}\n\n#maps .highcharts-tooltip text {\n    fill: #2f2b38;\n    fill: yellow;\n    font-weight: 700;\n    font-size: 1em;\n}\n\n#maps .highcharts-tooltip {\n    stroke: transparent;\n    color: #2f2b38;\n    font-weight: 700;\n    font-size: 0.9em;\n}\n\n#maps .dot {\n    width: 10px;\n    height: 10px;\n    border-radius: 20px;\n    margin-right: 5px;\n    background-color: #1f1836;\n    display: inline-block;\n}\n\n#maps .highcharts-legend-item:hover text {\n    fill: #fff;\n}\n\n#maps .highcharts-axis-labels {\n    fill: white;\n    transform: translateY(-10px);\n}\n\n#maps .highcharts-crosshair-thin {\n    stroke-width: 10px;\n    stroke: #fff;\n}\n\n#maps .highcharts-legend-title {\n    transform: translate(25px, 2px);\n}\n\n#maps .highcharts-zoom-in text,\n#maps .highcharts-zoom-out text {\n    transform: translateX(4px);\n}\n\n#maps .highcharts-title,\n#maps .highcharts-subtitle {\n    opacity: 0%;\n    fill: white;\n}\n\n#maps .tip-grid {\n    margin-left: 30px;\n    display: grid;\n    align-items: start;\n    grid-template-columns: 75px;\n    grid-template-rows: 35px 20px;\n}\n\n#maps .tip-content {\n    position: absolute;\n    left: 25px;\n    background-color: #8af2b6;\n    border: 0 solid transparent;\n    padding: 10px;\n    border-radius: 100px;\n}\n\n#maps .tip-point {\n    font-size: 32px;\n    color: #8af2b6;\n    margin-top: 17px;\n}\n\n@media screen  and (min-width: 300px) {\n    #maps {\n        width: 300px;\n        height: 300px;\n    }\n\n    #maps .map-point-top {\n        transform: translate(70.5px, 70.5px) scale(0.53);\n    }\n\n    #maps .map-point-center {\n        transform: translate(70.5px, 70.5px) scale(0.53);\n    }\n\n    #maps .map-point-point.grow {\n        transform: translate(-105px, -124px) scale(1.7);\n    }\n\n    #maps .map-point-top.grow {\n        transform: translate(15px, -2px) scale(0.9);\n    }\n\n    #maps .map-point-center.grow {\n        transform: translate(15px, -2px) scale(0.9);\n    }\n\n    #maps .particle-6 {\n        transform: translate(155px, 140px);\n    }\n\n    #maps .particle-5 {\n        transform: translate(10px, 130px);\n    }\n}\n\n@media screen  and (min-width: 400px) {\n    #maps {\n        width: 400px;\n        height: 400px;\n    }\n\n    #maps .map-point-top {\n        transform: translate(56px, 57px) scale(0.72);\n    }\n\n    #maps .map-point-center {\n        transform: translate(56px, 57px) scale(0.72);\n    }\n\n    #maps .map-point-point.grow {\n        transform: translate(-22px, -30px) scale(1.11);\n    }\n\n    #maps .map-point-top.grow {\n        transform: translate(16px, 4px) scale(0.92);\n    }\n\n    #maps .map-point-center.grow {\n        transform: translate(16px, 4px) scale(0.92);\n    }\n\n    #maps .particle-6 {\n        transform: translate(210px, 190px);\n    }\n\n    #maps .particle-5 {\n        transform: translate(15px, 180px);\n    }\n\n    #maps .particle-2 {\n        transform: translate(190px, 110px);\n    }\n\n    #maps .particle-1 {\n        transform: translate(50px, 145px) rotate(230deg);\n    }\n}\n\n@media screen  and (min-width: 500px) {\n    #maps {\n        width: 500px;\n        height: 500px;\n    }\n\n    #maps .particle {\n        transform: scale(1);\n    }\n\n    #maps .particle-1 {\n        transform: translate(0, 0) rotate(230deg);\n        transform-origin: center;\n    }\n\n    #maps .particle-2 {\n        transform: translate(-5px, -20px);\n        transform-origin: center;\n    }\n\n    #maps .particle-5 {\n        transform: translate(-20px, -30px);\n        transform-origin: center;\n    }\n\n    #maps .particle-6 {\n        transform: translate(-20px, -25px);\n        transform-origin: center;\n    }\n\n    #maps .map-point-point.on {\n        transform: translate(-250px, -300px) scale(2);\n    }\n\n    #maps .map-point-point.grow {\n        transform: translate(-250px, -300px) scale(2);\n    }\n\n    #maps .map-point-top {\n        transform: translate(0, 0) scale(1);\n    }\n\n    #maps .map-point-top.grow {\n        transform: translate(-250px, -300px) scale(2);\n    }\n\n    #maps .map-point-center {\n        transform: translate(0, 0) scale(1);\n    }\n\n    #maps .map-point-center.grow {\n        transform: translate(-250px, -300px) scale(2);\n    }\n\n    #maps .highcharts-legend-title {\n        transform: translate(30px, 0);\n    }\n}\n","html":"\n\n\t\t\t\t\t\t  \t\t<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\">\n\t<link href=\"https://fonts.googleapis.com/css2?family=IBM+Plex+Sans:wght@200;300;400;600;700&display=swap\" rel=\"stylesheet\">\n\n\t<div class=\"chart-container\" id=\"maps\"></div>\n","npm":"// 安装\nnpm install highcharts@11.0.0 --save\n\n// import 模块 \nimport Highcharts                         from 'highcharts';\nimport HighchartsMore                     from 'highcharts/highcharts-more';\nimport Map                                from 'highcharts/modules/map';\nimport Data                               from 'highcharts/modules/data';\nimport WorldHighres                       from 'highcharts/mapdata/custom/world-highres';\nimport Accessibility                      from 'highcharts/modules/accessibility';\nimport 3c770b0879\" crossorigin=\"anonymous from 'https://kit.fontawesome.com/3c770b0879.js\" crossorigin=\"anonymous';\n\n// 初始化模块\nHighchartsMore(Highcharts);\nMap(Highcharts);\nData(Highcharts);\nWorldHighres(Highcharts);\nAccessibility(Highcharts);\n3c770b0879\" crossorigin=\"anonymous(Highcharts);\n","scripts":["https://code.highcharts.com/11.0.0/highcharts.js","https://code.highcharts.com/11.0.0/highcharts-more.js","https://code.highcharts.com/maps/11.0.0/modules/map.js","https://code.highcharts.com/maps/11.0.0/modules/data.js","https://code.highcharts.com/11.0.0/mapdata/custom/world-highres.js","https://code.highcharts.com/11.0.0/modules/accessibility.js","https://kit.fontawesome.com/3c770b0879.js\" crossorigin=\"anonymous"]}