{"js":"Highcharts.theme = {\n    colors: ['#058DC7', '#50B432', '#ED561B', '#DDDF00', '#24CBE5', '#64E572',\n        '#FF9655', '#FFF263', '#6AF9C4'],\n    chart: {\n        backgroundColor: 'transparent'\n    },\n    title: {\n        style: {\n            color: '#000',\n            font: 'bold 16px \"Arial\"'\n        }\n    },\n    subtitle: {\n        style: {\n            color: '#666666',\n            font: 'bold 12px \"Arial\"'\n        }\n    },\n    legend: {\n        itemStyle: {\n            font: '9pt Arial\"',\n            color: 'black'\n        },\n        itemHoverStyle: {\n            color: 'gray'\n        }\n    }\n};\n// Apply the theme\nHighcharts.setOptions(Highcharts.theme);\n\n// easing functions\nMath.easeOutQuint = function (pos) {\n    return (Math.pow((pos - 1), 5) + 1);\n};\nMath.easeOutElastic = x => {\n    const c4 = (2 * Math.PI) / 3;\n    return x === 0 ?\n        0 :\n        x === 1 ?\n            1 :\n            Math.pow(2, -10 * x) * Math.sin((x * 10 - 0.75) * c4) + 1;\n};\n\nlet demoChart, areaChart;\nlet chartMargin = [0, 0, 0, 0];\nlet chartSpacing = 0;\n\n// for the sliders\nconst initialValues = [\n    [-100, 100, 30, 100],\n    [0, 30, 100, 6],\n    [50, 0, 0, 30],\n    [5, 30, 25, 200]\n];\n\n// /options for each series\nconst itemOptions = {\n    marker: {\n        radius: 8\n    },\n    startAngle: -100,\n    endAngle: 100,\n    innerSize: '30%',\n    center: ['50%', '70%'],\n    size: '100%',\n    dataLabels: {\n        enabled: false\n    }\n};\n\nconst variablePieOptions = {\n    startAngle: 0,\n    innerSize: '30%',\n    center: ['50%', '50%'],\n    size: '125%',\n    dataLabels: {\n        enabled: true,\n        distance: 10\n    }\n};\n\nconst columnOptions = {\n    pointWidth: 30,\n    borderRadius: 5,\n    borderWidth: 0,\n    pointPadding: 0,\n    groupPadding: 0\n};\n\n// chart options\nconst animationOptions = {\n    enabled: true,\n    duration: 700,\n    easing: 'easeOutQuint'\n};\n\nlet axisVisible = false;\n\nconst data = [\n    { y: 10 },\n    { y: 20 },\n    { y: 40 },\n    { y: 5 },\n    { y: 10 },\n    { y: 15 },\n    { y: 40 },\n    { y: 5 },\n    { y: 10 },\n    { y: 15 }\n];\nlet tempData = [];\n\nconst chartHeight = 300;\n\n// /for the ranges\nlet rmin, rmax, activeSlider;\nlet rvalue = -100;\nconst itemRanges = [[-100, 100], [-100, 100], [0, 100], [0, 200]];\nconst variablePieRanges = [[0, 6], [0, 100], [0, 200], [0, 10]];\nconst columnRanges = [[1, 100], [0, 6], [0, 4], [0, 100]];\nconst areaRanges = [[0, 30], [-100, 100], [1, 10], [80, 500]];\nconst ranges = [\n    itemRanges,\n    variablePieRanges,\n    columnRanges,\n    areaRanges\n];\n\n// /series controls\nconst seriesTypes = ['item', 'variablepie', 'column', 'area'];\nlet seriesType = 'item';\n\nconst controls = [\n    ['startAngle', 'endAngle', 'innerSize', 'size'],\n    ['variwide', 'innerSize', 'size', 'slices'],\n    ['width', 'plotBands', 'zones',  'radial'],\n    ['alpha', 'beta', 'viewDistance', 'depth']\n];\nconst controlLabels = [\n    ['start angle', 'end angle', 'inner size', 'size'],\n    ['variable<br>radius', 'inner size', 'size', 'slices'],\n    ['width', 'axis plot bands', 'axis zones', 'radial'],\n    ['alpha', 'beta', 'view distance', 'depth']\n];\nconst controlText = [\n    ['Adjust the start angle',\n        'Adjust the end angle',\n        'Adjust the inner size',\n        'Adjust the size'],\n    ['Use the slider to adjust the slices',\n        'Adjust the inner size',\n        'Adjust the size',\n        'Add/remove slices'],\n    ['Adjust the point width',\n        'Slide to +/- plot bands on the x axis',\n        'Slide to move the columns through the zones',\n        'Adjust the y axis max'],\n    ['Adjust the alpha angle',\n        'Adjust the beta angle',\n        'Adjust the view distance',\n        'Adjust the fill opacity']\n];\n\nlet controlIndex = 0;\nlet seriesIndex = 0;\nlet controlsToUse = controls[0];\nlet thingToChange = 'startAngle';\nlet controlElementActive = '.controls #controlType1';\nlet labelElementActive  = controlElementActive + ' ~ .form-check-label';\n\n// /stand-alone 3d area chart\nconst areaChartOptions = {\n    chart: {\n        type: 'area',\n        height: 270,\n        animation: {\n            duration: 500,\n            easing: 'easeOutQuint'\n        },\n        options3d: {\n            enabled: true,\n            alpha: 15,\n            beta: 1,\n            depth: 200,\n            viewDistance: 25\n        },\n        events: {\n            load: function () {\n                const chart = this;\n                setTimeout(function () {\n                    chart.update({\n                        chart: {\n                            options3d: {\n                                beta: 45\n                            }\n                        }\n                    });\n                }, 1000);\n\n            }\n        }\n    },\n    legend: {\n        enabled: false\n    },\n    title: {\n        text: ''\n    },\n    credits: {\n        enabled: false\n    },\n    yAxis: {\n        title: {\n            text: 'Height Above Sea Level',\n            x: -40\n        },\n        labels: {\n            format: '{value:,.0f} MAMSL'\n        },\n        gridLineDashStyle: 'Dash',\n        gridLineColor: '#999'\n    },\n    xAxis: [{\n        visible: false\n    }, {\n        visible: false\n    }, {\n        visible: false\n    }],\n    plotOptions: {\n        area: {\n            depth: 70,\n            lineWidth: 5,\n            marker: {\n                enabled: false\n            },\n            states: {\n                inactive: {\n                    enabled: false\n                }\n            },\n            fillOpacity: 0.7\n        }\n    },\n    tooltip: {\n        valueSuffix: ' MAMSL'\n    },\n    series: [{\n        name: 'Tatra Mountains visible from Rusinowa polana',\n        data: [\n            ['Murań', 1890],\n            ['Nowy Wierch', 2009],\n            ['Hawrań', 2152],\n            ['Płaczliwa Skała', 2142],\n            ['Szalony Wierch', 2061],\n            ['Karczmarski Wierch', 1438],\n            ['Jagnięcy Szczyt', 2230],\n            ['Czerwona Turnia', 2284],\n            ['Kołowy Szczyt', 2418],\n            ['Czarny Szczyt', 2429],\n            ['Baranie Rogi', 2526],\n            ['Śnieżny Szczyt', 2465],\n            ['Lodowy Szczyt', 2627],\n            ['Lodowa Kopa', 2602],\n            ['Szeroka Jaworzyńska', 2210],\n            ['Horwacki Wierch', 1902],\n            ['Spismichałowa Czuba', 2012],\n            ['Zielona Czuba', 2130],\n            ['Wielicki Szczyt', 2318],\n            ['Gerlach', 2655],\n            ['Batyżowiecki Szczyt', 2448],\n            ['Kaczy Szczyt', 2395],\n            ['Zmarzły Szczyt', 2390],\n            ['Kończysta', 2538],\n            ['Młynarz', 2170],\n            ['Ganek', 2462],\n            ['Wysoka', 2547],\n            ['Ciężki Szczyt', 2520],\n            ['Rysy', 2503],\n            ['Żabi Mnich', 2146],\n            ['Żabi Koń', 2291],\n            ['Żabia Turnia Mięguszowiecka', 2335],\n            ['Wołowa Turnia', 2373]\n        ]\n    }, {\n        xAxis: 1,\n        name: 'Dachstein panorama seen from Krippenstein',\n        data: [\n            ['Kufstein', 2049],\n            ['Hohe Wildstelle', 2746],\n            ['Kleiner Miesberg', 2173],\n            ['Großer Miesberg', 2202],\n            ['Hochstein', 2543],\n            ['Lackner Miesberg', 2232],\n            ['Wasenspitze', 2257],\n            ['Sinabell', 2349],\n            ['Feister Scharte', 2198],\n            ['Eselstein', 2556],\n            ['Landfriedstein', 2536],\n            ['Scheichenspitz', 2667],\n            ['Schmiedstock', 2634],\n            ['Gamsfeldspitze', 2611],\n            ['Edelgriess', 2305],\n            ['Koppenkarstein', 2863],\n            ['Niederer Gjaidstein', 2483],\n            ['Hoher Gjaidstein', 2794],\n            ['Hoher Dachstein', 2995],\n            ['Niederer Dachstein', 2934],\n            ['Hohes Kreuz', 2837],\n            ['Hoher Ochsenkogel', 2513]\n        ]\n    }, {\n        xAxis: 2,\n        name: 'Panorama from Col Des Mines',\n        data: [\n            ['Combin de la Tsessette', 4141],\n            ['Grand Combin de Grafeneire', 4314],\n            ['Combin de Corbassière', 3716],\n            ['Petit Combin', 3672],\n            ['Pointe de Boveire', 3212],\n            ['Grand Aget', 3133],\n            ['Mont Rogneux', 3084],\n            ['Dents du Grand Lé', 2884],\n            ['Monts Telliers', 2951],\n            ['Grand Golliat', 3238],\n            ['Mont Grande Rochère', 3326],\n            ['Mont de la Fouly', 2871],\n            ['Tête de la Payanne', 2452],\n            ['Pointe Allobrogia', 3172],\n            ['Six Blanc', 2334],\n            ['Mont Dolent', 3820],\n            ['Aiguille de Triolet', 3870],\n            ['Le Tour Noir', 3836],\n            ['Aiguille de l\\'A Neuve', 3753],\n            ['Aiguille d\\'Argentière', 3900],\n            ['Aiguille du Chardonnet', 3824],\n            ['Aiguille du Tour', 3540],\n            ['Aiguille du Pissoir', 3440],\n            ['Le Catogne', 2598],\n            ['Pointe de Prosom', 2762],\n            ['Pointe Ronde', 2700],\n            ['Mont Buet', 3096],\n            ['Le Cheval Blanc', 2831],\n            ['Pointe de la Finive', 2838],\n            ['Pic de Tenneverge', 2985],\n            ['Pointe d\\'Aboillon', 2819],\n            ['Tour Sallière', 3220],\n            ['Le Dôme', 3138],\n            ['Haute Cime', 3257],\n            ['Pierre Avoi', 2473],\n            ['Cime de l\\'Est', 3178]\n        ]\n    }]\n};\n\n// chart for the other demos\n// window resize\nconst resizer = function () {\n    const chartWidth = demoChart.chartWidth;\n    if (chartWidth > 410) {\n        $('.highcharts-item-series').css({\n            transform:\n        'translateX(-70px) scale(1.2)'\n        });\n    } else {\n        $('.highcharts-item-series').css({\n            transform:\n        'translateX(0px) scale(1)'\n        });\n    }\n};\nconst demoChartOptions = {\n    chart: {\n        margin: chartMargin,\n        spacing: chartSpacing,\n        animation: animationOptions,\n        height: chartHeight\n    },\n    title: {\n        text: ''\n    },\n    legend: {\n        enabled: false\n    },\n    plotOptions: {\n        series: {\n            colorByPoint: true,\n            pointPadding: 0,\n            zoneAxis: 'y'\n        },\n        item: itemOptions,\n        column: columnOptions,\n        variablepie: variablePieOptions\n    },\n    xAxis: [\n        {\n            visible: axisVisible,\n            plotBands: []\n        },\n        {\n            visible: false\n        },\n        {\n            visible: true\n        },\n        {\n            visible: true\n        }\n    ],\n    yAxis: [{\n        title: '',\n        visible: axisVisible,\n        gridLineDashStyle: 'dash',\n        plotLines: [],\n        min: 0,\n        max: 50\n    }],\n    series: [\n        {\n            type: seriesType,\n            data: [\n                { y: 10 },\n                { y: 20 },\n                { y: 40 },\n                { y: 5 },\n                { y: 10 },\n                { y: 15 }\n            ],\n            zones: [],\n            zoneAxis: 'y'\n        }\n    ]\n};\n\n// /populates the labels\nfunction populateLabel(control, label) {\n    let suffix = '';\n    const thingText = controlText[seriesIndex][controlIndex];\n\n    if (control === 'startAngle' || control === 'endAngle') {\n        suffix = 'deg';\n    }\n    if (control === 'size' || control === 'innerSize') {\n        suffix = '%';\n    }\n    if (control === 'width') {\n        suffix = 'px';\n    }\n    if (control === 'zones' || control === 'yAxis') {\n        suffix = 'max';\n    }\n    if (control === 'radial') {\n        suffix = 'max';\n    }\n    let valueToShow = parseFloat($('#' + controlsToUse[controlIndex]).val());\n    if (control !== 'beta') {\n        valueToShow = Math.abs(valueToShow);\n    }\n    if (control === 'opacity' || control === 'pointPadding') {\n        valueToShow = parseFloat((valueToShow * 0.1), 10).toFixed(1);\n    }\n    if (control === 'zones' || control === 'plotBands' || control === 'variwide') {\n        $(label + ' span').html('');\n        $(label).addClass('font-weight-bold');\n    } else {\n        $(label + ' span').html(valueToShow + ' ' + suffix);\n        $(label).removeClass('font-weight-bold');\n    }\n    $('#thing').html(thingText);\n}\n\n// CHANGE FUNCTIONS triggered by the sliders\n// for item and pie\nfunction innerSizeChange(value) {\n    if (seriesType === 'variablepie') {\n        demoChart.update({\n            plotOptions: {\n                variablepie: {\n                    innerSize: value + '%'\n                }\n            }\n        });\n    } else {\n        demoChart.update({\n            plotOptions: {\n                item: {\n                    innerSize: value + '%'\n                }\n            }\n        });\n    }\n    populateLabel(thingToChange, labelElementActive);\n\n}\n// for item\nfunction startAngleChange(value) {\n    demoChart.update({\n        plotOptions: {\n            item: {\n                startAngle: value\n            }\n        }\n    });\n    populateLabel(thingToChange, labelElementActive);\n\n}\n// for item\nfunction endAngleChange(value) {\n    demoChart.update({\n        plotOptions: {\n            item: {\n                endAngle: value\n            }\n        }\n    });\n    populateLabel(thingToChange, labelElementActive);\n\n}\n// for item and pie\nfunction sizeChange(value) {\n    if (seriesType === 'item') {\n        demoChart.update({\n            plotOptions: {\n                item: {\n                    size: value + '%'\n                }\n            }\n        });\n    } else {\n        demoChart.update({\n            plotOptions: {\n                variablepie: {\n                    size: value + '%'\n                }\n            }\n        });\n    }\n    populateLabel(thingToChange, labelElementActive);\n\n}\n// for pie\nfunction slicesChange(value) {\n    tempData = data.slice(0, value);\n    demoChart.series[0].update({\n        data: tempData\n    });\n    populateLabel(thingToChange, labelElementActive);\n}\n// for pie\nlet variCount = 0;\nlet variDir = 'up';\nfunction variwideChange(value) {\n    const yzVals = [\n        [115, 5100, 10, null],\n        [95, 4600, 20, null],\n        [75, 4100, 40, null],\n        [55, 3600, 5, null],\n        [35, 3100, 10, null],\n        [15, 2600, 15, null]\n    ];\n    if (variDir === 'up') {\n        demoChart.update({\n            plotOptions: {\n                variablepie: {\n                    innerSize: '5%'\n                }\n            }\n        });\n        demoChart.series[0].data[variCount].update({\n            y: yzVals[variCount][0],\n            z: yzVals[variCount][1]\n        });\n        if (value === 6) {\n            variDir = 'down';\n        } else {\n            variCount = value;\n        }\n    } else {\n        demoChart.series[0].data[variCount].update({\n            y: yzVals[variCount][2],\n            z: null\n        });\n        variCount = value;\n        if (value === 0) {\n            demoChart.series[0].data.forEach(function (p) {\n                p.update({\n                    z: null\n                });\n            });\n            demoChart.update({\n                plotOptions: {\n                    variablepie: {\n                        innerSize: '30%'\n                    }\n                }\n            });\n            variDir = 'up';\n        }\n    }\n    populateLabel(thingToChange, labelElementActive);\n}\n// for column\nfunction widthChange(value) {\n    demoChart.update({\n        plotOptions: {\n            column: {\n                pointWidth: value\n            }\n        }\n    });\n    populateLabel(thingToChange, labelElementActive);\n}\n// for column\nfunction radialChange(value) {\n    demoChart.yAxis[0].setExtremes(0, value);\n    populateLabel(thingToChange, labelElementActive);\n}\n// for column\nlet pbStart = 0;\nfunction plotBandsChange(value) {\n    const color = Highcharts.getOptions().colors[value];\n    if (value > pbStart) {\n        demoChart.xAxis[0].addPlotBand({\n            id: '' + value,\n            color: Highcharts.color(color).brighten(0.5).get(),\n            from: value - 1.5,\n            to: value - 0.5,\n            dashStyle: 'solid',\n            borderWidth: 2,\n            borderColor: '#fff',\n            zIndex: 2,\n            label: {\n                text: 'Band ' + value\n            }\n        });\n    } else {\n        demoChart.xAxis[0].removePlotBand('' + pbStart);\n    }\n    pbStart = value;\n    populateLabel(thingToChange, labelElementActive);\n}\n// for column\nfunction zonesChange(value) {\n    const yVals = [\n        [10, 20, 30, 40, 50],\n        [20, 30, 40, 50, 50],\n        [40, 50, 50, 50, 50],\n        [5, 15, 25, 35, 45],\n        [10, 20, 30, 40, 50],\n        [15, 25, 35, 45, 45]\n    ];\n    demoChart.series[0].data.forEach(function (p) {\n        p.update({\n            y: yVals[p.index][value]\n        });\n    });\n    populateLabel(thingToChange, labelElementActive);\n}\n// for area\nfunction alphaChange(value) {\n    areaChart.options.chart.options3d.alpha = parseFloat(value);\n    areaChart.redraw(false);\n    populateLabel(thingToChange, labelElementActive);\n}\n// for area\nfunction betaChange(value) {\n    areaChart.options.chart.options3d.beta = parseFloat(value);\n    areaChart.redraw(false);\n    populateLabel(thingToChange, labelElementActive);\n}\n// for area\nfunction viewDistanceChange(value) {\n    areaChart.options.chart.options3d.viewDistance = parseFloat(value);\n    areaChart.redraw(false);\n    populateLabel(thingToChange, labelElementActive);\n}\n// for area\nfunction depthChange(value) {\n    areaChart.options.chart.options3d.depth = parseFloat(value);\n    areaChart.update({\n        plotOptions: {\n            area: {\n                depth: parseFloat(value) * 0.4\n            }\n        }\n    });\n    areaChart.redraw(false);\n    populateLabel(thingToChange, labelElementActive);\n}\n\n$('document').ready(function () {\n\n    // /build the charts, the area is hidden\n    demoChart = Highcharts.chart('container', demoChartOptions);\n    areaChart = Highcharts.chart('container-area', areaChartOptions);\n\n    // /PLUS MINUS CONTROLS FOR THE SLIDER\n    let pushed;\n    function setMinMaxStates(value, slider) {\n        // /remove disabled states\n        const min = $(slider).attr('min');\n        const max = $(slider).attr('max');\n\n        if (value <= min) {\n            $('#min i').addClass('disabled');\n        } else {\n            $('#min i').removeClass('disabled');\n        }\n        if (value >= max) {\n            $('#max i').addClass('disabled');\n        } else {\n            $('#max i').removeClass('disabled');\n        }\n    }\n\n    function move(dir) {\n        // /only do this if the plus/minus buttons are active\n        if ($(pushed).hasClass('disabled') === false) {\n            let increment = 5;\n            if (thingToChange === 'variwide' || thingToChange === 'slices') {\n                increment = 1;\n            }\n            // current value of the range slider\n            let value = parseFloat($('#' + thingToChange).val());\n            setMinMaxStates(value, pushed);\n            if (dir === 'min') {\n                value = value - increment;\n            } else {\n                value = value + increment;\n            }\n            $('#' + thingToChange).val(value);\n            setMinMaxStates(value, activeSlider);\n            const functionName = thingToChange + 'Change';\n            window[functionName](value);\n        }\n    }\n\n\n    // /reset the series/chart options\n    const resetCharts = function () {\n        // /destroy the chart\n        demoChart.destroy();\n\n        // /special cases\n        if (seriesType === 'item' || seriesType === 'pie') {\n            chartMargin = 0;\n            chartSpacing = 0;\n            axisVisible = false;\n        } else {\n            chartMargin = 40;\n            chartSpacing = 40;\n            axisVisible = true;\n        }\n        demoChartOptions.series[0].data = [\n            { y: 10 },\n            { y: 20 },\n            { y: 40 },\n            { y: 5 },\n            { y: 10 },\n            { y: 15 }\n        ];\n        // /reset stuff\n        demoChartOptions.chart.spacing =  chartSpacing;\n        demoChartOptions.chart.margin =  chartMargin;\n        demoChartOptions.xAxis[0].plotBands = [];\n        demoChartOptions.xAxis[0].visible = axisVisible;\n        demoChartOptions.yAxis[0].visible = axisVisible;\n        demoChartOptions.series[0].type = seriesType;\n\n        // /make the chart again\n        demoChart = Highcharts.chart('container', demoChartOptions);\n\n        if (seriesType !== 'area') {\n            // /show the area chart, hide the demo chart\n            $('#container-area').removeClass('d-flex');\n            $('#container-area').addClass('d-none');\n            $('#container').removeClass('d-none');\n\n        } else {\n            $('#container-area').addClass('d-flex');\n            $('#container-area').removeClass('d-none');\n            $('#container').addClass('d-none');\n        }\n    };\n\n    // /initialize series controls\n    const initControls = function () {\n\n        // /single option to change\n        thingToChange = controls[seriesIndex][controlIndex]; // string\n\n        // hide the radios, clear out the labels, hide sliders\n        $('.form-check').each(function () {\n            $(this).parent().parent().removeClass('flex-fill');\n            $(this).parent().parent().removeClass('flex-grow-1');\n            $(this).parent().addClass('d-none');\n            $(this).removeClass('active');\n        });\n        $('.form-check-label').each(function () {\n            $(this).html('');\n        });\n        $('.slider').each(function () {\n            $(this).addClass('d-none');\n        });\n\n        // build the radios\n        let controlElement, labelElement;\n        for (let ii = 0; ii < controlsToUse.length; ++ii) {\n            // the radio\n            controlElement = '.controls #controlType' + (ii + 1);\n            labelElement  = controlElement + ' ~ .form-check-label';\n            $(labelElement).css({ textAlign: 'center', marginLeft: '0px' });\n\n            // /apply the min, max to the range, set the range value\n            rmin = ranges[seriesIndex][controlIndex][0];\n            rmax = ranges[seriesIndex][controlIndex][1];\n            rvalue = initialValues[seriesIndex][controlIndex];\n            activeSlider = $('#' + thingToChange);\n            $(activeSlider).attr('min', rmin);\n            $(activeSlider).attr('max', rmax);\n            $(activeSlider).val(rvalue);\n            setMinMaxStates(rvalue, activeSlider);\n\n            // populate labels with text\n            $(labelElement).html(controlLabels[seriesIndex][ii]);\n\n            // show the radios\n            $(controlElement).parent().parent().removeClass('d-none');\n            $(controlElement).parent().parent().addClass('flex-fill');\n            if ($(controlElement).hasClass('d-none')) {\n                $(controlElement).removeClass('d-none');\n            }\n            // active the chosen radio label and show the value\n            if (ii === controlIndex) {\n                $(controlElement).parent().addClass('active');\n                $(controlElement).parent().addClass('flex-grow-1');\n                const valueSpan = '<span>' +  initialValues[seriesIndex][ii] + '</span>';\n                $(labelElement).html(\n                    controlLabels[seriesIndex][ii] + ': ' + valueSpan);\n                populateLabel(controlsToUse[ii], labelElement);\n                controlElementActive = controlElement;\n                labelElementActive = labelElement;\n            }\n        }\n        // /show the proper slider\n        $('#' + thingToChange).removeClass('d-none');\n\n        // /configure chart for individual cases\n\n        // /FOR COLUMN: disable polar, inverted, enabled animation\n        if (thingToChange === 'width' || thingToChange === 'plotBands' || thingToChange === 'zones') {\n            demoChart.update({\n                chart: {\n                    polar: false,\n                    inverted: false,\n                    animation: {\n                        enabled: true\n                    }\n                },\n                plotOptions: {\n                    column: {\n                        pointWidth: 30\n                    }\n                }\n            });\n        }\n\n        // /FOR COLUMN: invert, polar, disable animation for radial\n        if (thingToChange === 'radial') {\n            demoChart.update({\n                chart: {\n                    inverted: true,\n                    polar: true,\n                    animation: {\n                        enabled: false\n                    }\n                }\n            });\n            demoChart.yAxis[0].setExtremes(0, 20);\n        }\n\n        // FOR COLUMN: build the zones/plotLines arrays\n        if (thingToChange === 'zones') {\n            const zonesArray = [];\n            const plotLines = [];\n            demoChart.xAxis[0].setExtremes(-1, 5);\n            for (let ii = 0; ii <= 6; ++ii) {\n                let display = 'display: block';\n                if (ii === 6) {\n                    display = 'display: none;';\n                }\n                const zoneValue = ii * 10; // create a zone every 10\n                zonesArray.push({\n                    value: zoneValue,\n                    color: { patternIndex: ii },\n                    fillColor: { patternIndex: ii }\n                });\n                plotLines.push({\n                    value: zoneValue,\n                    color: 'transparent',\n                    label: {\n                        useHTML: true,\n                        formatter: function () {\n                            return '<div style=\"' + display + '\"><img height=15 style=\"border:1px solid #ccc\" src=\"https://www.highcharts.com/samples/graphics/homepage/p' + (ii + 1) + '.png\"> Zone' + (ii) + '</div>';\n                        }\n                    },\n                    align: 'left'\n\n                });\n            }\n            demoChart.series[0].update({\n                zones: zonesArray\n            });\n            demoChart.yAxis[0].update({\n                plotLines: plotLines\n            });\n        }\n    };\n\n\n    // /series buttons (item, pie, column, area)\n    $('.series-types button').click(function () {\n\n        // deactivate all buttons\n        $('.series-types button').each(function () {\n            $(this).removeClass('active');\n        });\n        // highlight the right button\n        $(this).addClass('active');\n\n        // set the series type based on the button id\n        seriesType = this.id;\n\n        // find the right items to manipulate\n        seriesIndex = seriesTypes.findIndex(element => element === seriesType);\n        controlsToUse = controls[seriesIndex];\n        controlIndex = 0;\n\n        // reset charts\n        resetCharts();\n\n        // /check first radio for the series\n        $('#controlType1').trigger('click');\n        initControls();\n\n    });\n\n    // /the radio buttons\n    $('input[name=\"controlType\"]').change(function (e) {\n        // /value of the clicked radio button\n        // 0,1,2,or 3\n        e.preventDefault();\n        $('label').each(function () {\n            $(this).removeClass('font-weight-bold');\n        });\n        controlIndex = parseInt($(this).val(), 10);\n\n        // reset the charts each radio click\n        // keeps things orderly\n        resetCharts();\n\n        // initilize controls for the series\n        initControls();\n    });\n\n\n    // /PLUS MINUS CONTROLS FOR THE SLIDER\n\n    $('#min i:not(.disabled)').click(function () {\n        pushed = this;\n        move('min');\n    });\n    $('#max i').click(function () {\n        pushed = this;\n        move('max');\n    });\n\n    // /EVENT LISTENERS for the sliders\n    // /innerSize - item and pie\n    document.getElementById('innerSize').addEventListener('input',\n        function (e) {\n            e.preventDefault();\n            rvalue = parseFloat(this.value);\n            activeSlider = $(this)[0];\n            setMinMaxStates(rvalue,  activeSlider);\n            innerSizeChange(rvalue);\n        }\n    );\n    // /size - item and pie\n    document.getElementById('size').addEventListener('input',\n        function () {\n            rvalue = parseFloat(this.value);\n            activeSlider = $(this)[0];\n            setMinMaxStates(rvalue,  activeSlider);\n            sizeChange(rvalue);\n        }\n    );\n    // /endAngle - item\n    document.getElementById('endAngle').addEventListener('input',\n        function () {\n            rvalue = parseFloat(this.value);\n            activeSlider = $(this)[0];\n            setMinMaxStates(rvalue,  activeSlider);\n            endAngleChange(rvalue);\n        }\n\n    );\n    // startAngle - item\n    document.getElementById('startAngle').addEventListener('input',\n        function () {\n            rvalue = parseFloat(this.value);\n            activeSlider = $(this)[0];\n            setMinMaxStates(rvalue,  activeSlider);\n            startAngleChange(rvalue);\n        }\n    );\n    // slices - pie\n    document.getElementById('slices').addEventListener('input',\n        function () {\n            rvalue = parseFloat(this.value);\n            activeSlider = $(this)[0];\n            setMinMaxStates(rvalue,  activeSlider);\n            slicesChange(rvalue);\n        }\n    );\n    // /variwide - pie\n    document.getElementById('variwide').addEventListener('input',\n        function () {\n            rvalue = parseFloat(this.value);\n            activeSlider = $(this)[0];\n            setMinMaxStates(rvalue,  activeSlider);\n            variwideChange(rvalue);\n        }\n    );\n    // column width - column\n    document.getElementById('width').addEventListener('input',\n        function () {\n            rvalue = parseFloat(this.value);\n            activeSlider = $(this)[0];\n            setMinMaxStates(rvalue,  activeSlider);\n            widthChange(rvalue);\n        }\n    );\n    // /radial - for column\n    document.getElementById('radial').addEventListener('input',\n        function () {\n            rvalue = parseFloat(this.value);\n            activeSlider = $(this)[0];\n            setMinMaxStates(rvalue,  activeSlider);\n            radialChange(rvalue);\n        }\n    );\n    // /plotBands - column\n    document.getElementById('plotBands').addEventListener('input',\n        function () {\n            rvalue = parseFloat(this.value);\n            activeSlider = $(this)[0];\n            setMinMaxStates(rvalue,  activeSlider);\n            plotBandsChange(rvalue);\n        }\n    );\n    // /zones - column\n    document.getElementById('zones').addEventListener('input',\n        function () {\n            rvalue = parseFloat(this.value);\n            activeSlider = $(this)[0];\n            setMinMaxStates(rvalue,  activeSlider);\n            zonesChange(rvalue);\n        }\n    );\n    // /alpha - 3d area\n    document.getElementById('alpha').addEventListener('input',\n        function () {\n            rvalue = parseFloat(this.value);\n            activeSlider = $(this)[0];\n            setMinMaxStates(rvalue,  activeSlider);\n            alphaChange(rvalue);\n        });\n    // /beta - 3d area\n    document.getElementById('beta').addEventListener('input',\n        function () {\n            rvalue = parseFloat(this.value);\n            activeSlider = $(this)[0];\n            setMinMaxStates(rvalue,  activeSlider);\n            betaChange(rvalue);\n        });\n    // viewDistance - 3d area\n    document.getElementById('viewDistance').addEventListener('input',\n        function () {\n            rvalue = parseFloat(this.value);\n            activeSlider = $(this)[0];\n            setMinMaxStates(rvalue,  activeSlider);\n            viewDistanceChange(rvalue);\n        });\n    // depth - 3d area\n    document.getElementById('depth').addEventListener('input',\n        function () {\n            rvalue = parseFloat(this.value);\n            activeSlider = $(this)[0];\n            setMinMaxStates(rvalue,  activeSlider);\n            depthChange(rvalue);\n        });\n\n\n    // /initial setup\n    setMinMaxStates(rvalue, $('#' + thingToChange));\n\n    window.addEventListener('resize', resizer);\n\n});\n","css":".highcharts-demo .container {\n    margin: 0 auto;\n}\n\n.highcharts-spline-series {\n    transition: all 100ms;\n}\n\n.highcharts-demo h5 {\n    font-size: 16px;\n    font-weight: bold;\n    display: block;\n    color: #333;\n    margin-bottom: 5px;\n}\n\n.highcharts-demo .c-container,\n.highcharts-demo #container-area {\n    height: 300px;\n}\n\n.highcharts-demo #container-area {\n    width: 80%;\n}\n\n.highcharts-demo .btn-sm {\n    max-width: 70px;\n    max-height: 30px;\n}\n\n.highcharts-demo .container.controls {\n    max-width: 320px;\n    border-radius: 4px;\n}\n\n.highcharts-demo .form-group {\n    margin-bottom: 0;\n}\n\n.highcharts-demo .form-check-inline {\n    margin-right: 4px !important;\n}\n\n.highcharts-demo label {\n    line-height: 12px;\n    white-space: normal;\n    display: block !important;\n    text-align: center;\n    font-size: 12px;\n    font-weight: normal;\n}\n\n.highcharts-demo .badge {\n    display: block;\n    width: fit-content;\n}\n\n.highcharts-demo .badge-secondary {\n    color: #000 !important;\n    display: block;\n    font-size: 13px !important;\n    border: 0 solid #424bcd !important;\n    background-color: #fff !important;\n}\n\n.highcharts-demo .badge-secondary label {\n    padding: 4px !important;\n}\n\n.highcharts-demo .highcharts-demo .badge-secondary.active {\n    max-width: 95px;\n    width: 85px;\n}\n\n.highcharts-demo .badge-secondary.active label {\n    font-weight: normal;\n    border-radius: 4px;\n    color: #fff;\n    white-space: pre-wrap;\n    background-color: #424bcd !important;\n}\n\n.highcharts-demo .badge-secondary.active label span {\n    font-weight: bold;\n    font-size: 11px;\n    display: block;\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\n}\n\n.highcharts-demo input[type=\"range\"] {\n    margin-right: 2px;\n    padding: 0;\n}\n\n.highcharts-demo .form-control {\n    height: calc(0.8em + 0.75rem + 2px) !important;\n}\n\n.highcharts-demo .fas,\n.highcharts-demo .fa {\n    font-size: 18px !important;\n    color: #424bcd !important;\n}\n\n.highcharts-demo .fas.disabled,\n.highcharts-demo .fa.disabled {\n    font-size: 18px !important;\n    color: #ccc !important;\n}\n\n.highcharts-demo .fas:hover,\n.highcharts-demo .fa:hover {\n    font-size: 18px !important;\n    font-weight: bold;\n    color: #6a73f1 !important;\n}\n\n.highcharts-demo .fas.disabled:hover,\n.highcharts-demo .fa.disabled:hover {\n    font-size: 18px !important;\n    color: #ccc !important;\n}\n\n.highcharts-demo .btn-primary {\n    color: #424bcd !important;\n    border-color: #424bcd !important;\n    background-color: #fff !important;\n    height: 30px !important;\n    padding-top: 2px !important;\n}\n\n.highcharts-demo .btn-primary:not(:disabled):not(.disabled).active,\n.highcharts-demo .btn-primary:not(:disabled):not(.disabled):active,\n.highcharts-demo .show > .btn-primary.dropdown-toggle {\n    color: #fff !important;\n    font-weight: bold;\n    border-color: #424bcd !important;\n    background-color: #424bcd !important;\n}\n\n.highcharts-demo .btn-secondary {\n    color: #fff !important;\n    border-color: #424bcd !important;\n    background-color: #424bcd !important;\n}\n\n.highcharts-demo .btn-secondary:hover {\n    color: #fff;\n    background-color: #5a6268;\n    border-color: #545b62;\n}\n\n.highcharts-demo .max,\n.min {\n    font-size: 12px;\n}\n\n.highcharts-demo #thing {\n    font-weight: bold;\n}\n\n.highcharts-demo #play:hover,\n.highcharts-demo #play:active {\n    text-decoration: none;\n}\n\n.highcharts-item-series {\n    transform: translateX(-30px) scale(1.2);\n}\n","html":"<script\n  src=\"https://code.jquery.com/jquery-3.6.0.min.js\"\n  integrity=\"sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4=\"\n  crossorigin=\"anonymous\"></script>\n<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/css/bootstrap.min.css\">\n<div class=\"highcharts-demo\">\n\t<div id=\"container\" class=\"c-container justify-content-center mx-auto\" style=\"max-width:600px;max-height:400px\"></div>\n\t<div id=\"container-area\" class=\"c-container justify-content-center d-none mx-auto\" style=\"max-width:600px\"></div>\n\t<div class=\"container pt-2\t pb-0\" style=\"height:auto\">\n\t\t<div class=\"row pb-1 \">\n\t\t\t<div class=\"col-12 series-types text-center\">\n\t\t\t\t<div class=\"\">\n\t\t\t\t\t<button id=\"item\" type=\"button\" class=\"btn btn-primary active btn-sm\">item</button>\n\t\t\t\t\t<button id=\"variablepie\" type=\"button\" class=\"btn btn-primary btn-sm\">pie</button>\n\t\t\t\t\t<button id=\"column\" type=\"button\" class=\"btn btn-primary btn-sm\">column</button>\n\t\t\t\t\t<button id=\"area\" type=\"button\" class=\"btn btn-primary btn-sm\">area</button>\n\t\t\t</div>\n\t\t\t</div>\n\t\t</div> \n\t</div>\n\t<div class=\"container controls px-0 pt-0\">\n\t\t<div class=\"row\">\n\t\t\t<div class=\"pl-0 pr-1 flex-fill\">\n\t\t\t\t<div class=\"form-check form-check-inline badge badge-secondary active\">\n\t\t\t\t\t<input class=\"form-check-input\" type=\"radio\" checked id=\"controlType1\" name=\"controlType\" value=\"0\">\n\t\t\t\t\t<label class=\"form-check-label\" for=\"controlType1\">start angle: <span>-100 deg</span></label>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"pl-0 pr-1 flex-fill\">\n\t\t\t\t<div class=\"form-check form-check-inline badge badge-secondary \">\n\t\t\t\t\t<input class=\"form-check-input\" type=\"radio\" id=\"controlType2\" name=\"controlType\" value=\"1\">\n\t\t\t\t\t<label class=\"form-check-label\" for=\"controlType2\">end angle</label>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"pl-0 pr-1 flex-fill\">\n\t\t\t\t<div class=\"form-check form-check-inline badge badge-secondary \" >\n\t\t\t\t\t<input class=\"form-check-input\" type=\"radio\" id=\"controlType3\" name=\"controlType\" value=\"2\">\n\t\t\t\t\t<label class=\"form-check-label for=\"controlType3\">inner size</label>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"pl-0 pr-1 flex-fill\">\n\t\t\t\t<div class=\"form-check form-check-inline badge badge-secondary \">\n\t\t\t\t\t\t<input class=\"form-check-input\" type=\"radio\" id=\"controlType4\" name=\"controlType\"  value=\"3\">\n\t\t\t\t\t\t<label class=\"form-check-label\" for=\"controlType4\">size  </label> \n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"row align-items-center\">\n\t\t\t<div id=\"min\" class=\"slide col-2 text-right align-self-start\">\n\t\t\t\t\t<i class=\"fas fa-minus\"></i>\n\t\t\t</div>\n\t\t\t<div class=\"col-8 text-center px-0 py-0\">\n\t\t\t\t<div class=\"row\">\n\t\t\t\t\t<div class=\"col-12\">\n\t\t\t\t\t\t\t<!-- innerSize -->\n\t\t\t\t\t\t\t<input type=\"range\" id=\"innerSize\" class=\"form-control d-none slider\" value=\"30\" min=\"0\" max=\"100\" step=\"1\">\n\t\t\t\t\t\t\t<!-- end angle -->\n\t\t\t\t\t\t\t<input type=\"range\" id=\"endAngle\" class=\"form-control d-none slider\" value=\"100\" min=\"-100\" max=\"100\" step=\"1\">\n\t\t\t\t\t\t\t<!-- start angle -->\n\t\t\t\t\t\t\t<input type=\"range\" id=\"startAngle\" class=\"form-control slider\" value=\"-100\" min=\"-100\" max=\"100\" step=\"1\">\n\t\t\t\t\t\t\t<!-- size -->\n\t\t\t\t\t\t\t<input type=\"range\" id=\"size\" class=\"form-control d-none slider\" value=\"145\" min=\"0\" max=\"100\" step=\"1\">\t\n\t\t\t\t\t\t\t<!-- variable pie slices -->\n\t\t\t\t\t\t\t<input type=\"range\" id=\"variwide\" class=\"form-control d-none slider\" value=\"-1\" min=\"-1\" max=\"5\" step=\"1\">\n\t\t\t\t\t\t\t<!-- width -->\n\t\t\t\t\t\t\t<input type=\"range\" id=\"width\" class=\"form-control d-none slider\" value=\"30\" min=\"1\" max=\"100\" step=\"1\">\n\t\t\t\t\t\t\t<!-- number of slices -->\n\t\t\t\t\t\t\t<input type=\"range\" id=\"slices\" class=\"form-control d-none slider\" value=\"6\" min=\"0\" max=\"10\" step=\"1\">\n\t\t\t\t\t\t\t<!-- plotBands -->\n\t\t\t\t\t\t\t<input type=\"range\" min=\"0\" max=\"6\" value=\"0\"  step=\"1\" class=\"form-control d-none slider\" id=\"plotBands\">\n\t\t\t\t\t\t\t<!-- zones -->\n\t\t\t\t\t\t\t<input type=\"range\" min=\"0\" max=\"4\" value=\"0\"  step=\"1\" class=\"form-control d-none slider\" id=\"zones\">\n\t\t\t\t\t\t\t<!-- radial-->\n\t\t\t\t\t\t\t<input type=\"range\" id=\"radial\" class=\"form-control d-none slider\" value=\"50\" min=\"0\" max=\"100\" step=\"1\">\n\t\t\t\t\t\t\t<!-- alpha -->\n\t\t\t\t\t\t\t<input type=\"range\" id=\"alpha\" class=\"form-control d-none slider\"  value=\"5\" min=\"0\" max=\"30\" step=\"1\">\n\t\t\t\t\t\t\t<!-- beta -->\n\t\t\t\t\t\t\t<input type=\"range\" id=\"beta\" class=\"form-control d-none slider\" value=\"30\" min=\"-100\" max=\"100\" step=\"1\">\n\t\t\t\t\t\t\t<!-- viewDistance -->\n\t\t\t\t\t\t\t<input type=\"range\" min=\"0\" max=\"100\" value=\"25\"  class=\"form-control d-none slider\" id=\"viewDistance\">\n\t\t\t\t\t\t\t<!-- depth -->\n\t\t\t\t\t\t\t<input type=\"range\" min=\"0\" max=\"300\" value=\"200\"  step=\"5\" class=\"form-control d-none slider\" id=\"depth\">\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"row\">\n\t\t\t\t\t<div class=\"col-12 text-center \">\n\t\t\t\t\t\t<span id=\"thing\" style=\"font-size:14px\">Adjust the start angle</span>\n\t\t\t\t\t\t<a href=\"#\" class=\"d-none btn-sm btn-secondary\" id=\"play\">spin</a>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div id=\"max\" class=\"slide col-2  align-self-start\">\n\t\t\t\t<i class=\"fas fa-plus\"></i>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>","npm":"// 安装\nnpm install highcharts@11.0.1 --save\n\n// import 模块 \nimport Highcharts     from 'highcharts';\nimport HighchartsMore from 'highcharts/highcharts-more';\nimport ItemSeries     from 'highcharts/modules/item-series';\nimport Highcharts3d   from 'highcharts/highcharts-3d';\nimport PatternFill    from 'highcharts/modules/pattern-fill';\nimport VariablePie    from 'highcharts/modules/variable-pie';\nimport 0cc87dc065     from 'https://kit.fontawesome.com/0cc87dc065.js';\n\n// 初始化模块\nHighchartsMore(Highcharts);\nItemSeries(Highcharts);\nHighcharts3d(Highcharts);\nPatternFill(Highcharts);\nVariablePie(Highcharts);\n0cc87dc065(Highcharts);\n","scripts":["https://code.highcharts.com/11.0.1/highcharts.js","https://code.highcharts.com/11.0.1/highcharts-more.js","https://code.highcharts.com/11.0.1/modules/item-series.js","https://code.highcharts.com/11.0.1/highcharts-3d.js","https://code.highcharts.com/11.0.1/modules/pattern-fill.js","https://code.highcharts.com/11.0.1/modules/variable-pie.js","https://kit.fontawesome.com/0cc87dc065.js"]}