{"js":"const params = (new URL(document.location)).search;\n\nconst pArray = params.split('&');\n\nlet chartStr = '';\nlet chartToShow = 'inverted';\n\n\npArray.forEach(function (element) {\n    if (element.indexOf('charts=') !== -1) {\n        chartStr = element;\n    }\n});\n\nconst chartArray = chartStr.split('=');\n\nif (chartArray.length > 1) {\n    chartToShow = chartArray[1];\n}\n\nfunction inverted() {\n    Highcharts.ganttChart('container', {\n\n        chart: {\n            inverted: true,\n            spacing: [0, 0, 0, 10],\n            margin: 10\n        },\n        title: {\n            text: ''\n        },\n        scrollbar: {\n            enabled: false\n        },\n        credits: {\n            enabled: 0\n        },\n        accessibility: {\n            keyboardNavigation: {\n                seriesNavigation: {\n                    mode: 'serialize'\n                }\n            }\n        },\n        lang: {\n            accessibility: {\n                axis: {\n                    xAxisDescriptionPlural: 'The chart has a two-part X axis showing time in both week numbers and days.'\n                }\n            }\n        },\n        plotOptions: {\n            series: {\n                opacity: 1,\n                pointPadding: 0,\n                groupPadding: 0.1\n            }\n        },\n        xAxis: [{\n            opposite: false,\n            visible: true,\n            min: Date.UTC(2018, 10, 25),\n            max: Date.UTC(2018, 11, 24),\n            labels: {\n                allowOverlap: true,\n                enabled: false\n            },\n            dateTimeLabelFormats: {\n                week: {\n                    list: ['🗓 W%W', '🗓 W%W']\n                }\n            },\n            grid: {\n                borderColor: '#707073',\n                borderWidth: 0,\n                cellHeight: 10\n            },\n            gridLineColor: '#2f2b38',\n            gridLineWidth: 0,\n            gridLineDashStyle: 'dot',\n            maxPadding: 0,\n            minPadding: 0\n        }],\n        yAxis: {\n            offset: -40,\n            uniqueNames: true,\n            opposite: true,\n            title: {\n                text: ''\n            },\n            labels: {\n                rotation: 0,\n                align: 'center',\n                x: -22,\n                style: {\n                    fontSize: '14px',\n                    color: '#000'\n                },\n                padding: 0\n            },\n            gridLineColor: 'transparent',\n            tickColor: 'transparent',\n            gridLineWidth: 0,\n            grid: {\n                enabled: false,\n                cellHeight: 30,\n                borderWidth: 0\n            },\n            plotBands: [{\n                from: 1.5,\n                to: 3,\n                color: 'rgba(217, 219, 248, 0.4)'\n            },\n            {\n                from: 0.5,\n                to: 1.5,\n                color: 'rgba(217, 219, 248, 0.6)'\n            },\n            {\n                from: -1,\n                to: 0.5,\n                color: 'rgba(217, 219, 248, 0.8)'\n            }]\n        },\n        series: [{\n            name: 'Project 1',\n            data: [{\n                start: Date.UTC(2018, 11, 1),\n                end: Date.UTC(2018, 11, 8),\n                // completed: 0.65,\n                name: 'Done',\n                id: 'Prep'\n            },\n            {\n                start: Date.UTC(2018, 11, 9),\n                end: Date.UTC(2018, 11, 16),\n                name: 'Done',\n                id: 'Design'\n            },\n            {\n                start: Date.UTC(2018, 11, 1),\n                end: Date.UTC(2018, 11, 8),\n                // completed: 0.5,\n                name: 'Doing',\n                id: 'Dev'\n            }, {\n                start: Date.UTC(2018, 11, 9),\n                end: Date.UTC(2018, 11, 16),\n                // completed: 0.5,\n                name: 'Doing',\n                id: 'Content'\n            }, {\n                start: Date.UTC(2018, 11, 1),\n                end: Date.UTC(2018, 11, 8),\n                // completed: 0.15,\n                name: 'Do',\n                id: 'QA'\n            }, {\n                start: Date.UTC(2018, 11, 9),\n                end: Date.UTC(2018, 11, 16),\n                // completed: 0.3,\n                name: 'Do',\n                id: 'Launch'\n            },\n            {\n                start: Date.UTC(2018, 11, 17),\n                end: Date.UTC(2018, 11, 23),\n                // completed: 0.3,\n                name: 'Do',\n                id: 'Promo'\n            }]\n        }],\n        responsive: {\n            rules: [\n                // up to 203\n                {\n                    condition: {\n                        // up tp this\n                        maxWidth: 203\n                    },\n                    chartOptions: {\n                        chart: {\n                            height: 140,\n                            margin: [0, 0, 0, 0]\n                        },\n                        plotOptions: {\n                            series: {\n                                dataLabels: {\n                                    enabled: true,\n                                    format: '{point.index}',\n                                    style: {\n                                        textOutline: 'none'\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                {\n                    condition: {\n                        minWidth: 204\n                    },\n                    chartOptions: {\n                        chart: {\n                            height: 255,\n                            margin: [10, 10, 10, 10]\n                        },\n                        plotOptions: {\n                            series: {\n                                dataLabels: {\n                                    enabled: true,\n                                    format: '{point.id}',\n                                    style: {\n                                        textOutline: 'none'\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            ]\n        }\n    });\n}\n\n\nfunction subtasks() {\n    var today = new Date(),\n        day = 1000 * 60 * 60 * 24;\n\n    // Set to 00:00:00:000 today\n    today.setUTCHours(0);\n    today.setUTCMinutes(0);\n    today.setUTCSeconds(0);\n    today.setUTCMilliseconds(0);\n\n\n    // THE CHART\n    Highcharts.ganttChart('container', {\n        chart: {\n            scrollablePlotArea: {\n                minHeight: 800\n            },\n            backgroundColor: '#2F2B38'\n        },\n        credits: {\n            enabled: false\n        },\n        title: {\n            text: ''\n        },\n        xAxis: {\n            visible: true,\n            min: today.getTime() - (1 * day),\n            max: today.getTime() + (14 * day),\n            plotBands: [{\n                from: today.getTime() + (0 * day),\n                to: today.getTime() + (14 * day),\n                color: '#46465C'\n            }],\n            dateTimeLabelFormats: {\n                day: {\n                    list: ['%E']\n                },\n                week: {\n                    list: ['Week %W', 'W%W']\n                }\n            },\n            gridLineColor: '#2F2B38',\n            gridLineWidth: 1,\n            grid: {\n                borderWidth: 0\n            },\n            labels: {\n                allowOverlap: true,\n                style: {\n                    color: '#fff'\n                }\n            }\n        },\n        accessibility: {\n            keyboardNavigation: {\n                seriesNavigation: {\n                    mode: 'serialize'\n                }\n            },\n            point: {\n                descriptionFormatter: function (point) {\n                    var dependency = point.dependency &&\n                        point.series.chart.get(point.dependency).name,\n                        dependsOn = dependency ? ' Depends on ' + dependency + '.' : '';\n\n                    return Highcharts.format(\n                        '{point.yCategory}. Start {point.x:%Y-%m-%d}, end {point.x2:%Y-%m-%d}.{dependsOn}',\n                        { point, dependsOn }\n                    );\n                }\n            }\n        },\n        yAxis: {\n            shadow: true,\n            offset: -10,\n            grid: {\n                cellHeight: 1,\n                borderWidth: 1,\n                borderColor: 'transparent'\n            },\n            maxPadding: 0,\n            minPadding: 0,\n            labels: {\n                indentation: 5,\n                allowOverlap: true,\n                padding: 0,\n                formatter: function () {\n                    return this.value;\n                },\n                symbol: {\n                    // y: 0,\n                    fillColor: '#fff',\n                    padding: 5\n                },\n                style: {\n                    color: '#fff',\n                    fontSize: '12px',\n                    padding: 0\n                }\n            }\n\n        },\n        lang: {\n            accessibility: {\n                axis: {\n                    xAxisDescriptionPlural: 'The chart has a two-part X axis showing time in both week numbers and days.'\n                }\n            }\n        },\n        plotOptions: {\n            series: {\n                groupPadding: 0.1,\n                borderWidth: 0,\n                connectors: {\n                    lineWidth: 2\n                },\n                borderRadius: 0\n            }\n        },\n        series: [{\n            name: 'Project',\n            data: [{\n                name: 'Task 1',\n                collapsed: true,\n                id: '1',\n                start: today.getTime(),\n                end: today.getTime() + (3 * day),\n                color: Highcharts.getOptions().colors[0]\n            }, {\n                name: '1a ',\n                id: '1a',\n                parent: '1',\n                start: today.getTime(),\n                end: today.getTime() + (2 * day),\n                color: 'transparent',\n                borderColor: Highcharts.getOptions().colors[0],\n                borderWidth: 1,\n                connectors: {\n                    dashStyle: 'dot',\n                    lineWidth: 1,\n                    lineColor: Highcharts.getOptions().colors[0]\n                }\n            },\n            {\n                name: '1b',\n                id: '1b',\n                parent: '1',\n                dependency: '1a',\n                start: today.getTime() + (2 * day),\n                end: today.getTime() + (3 * day),\n                color: 'transparent',\n                borderColor: Highcharts.getOptions().colors[0],\n                borderWidth: 1,\n                connectors: {\n                    dashStyle: 'dot',\n                    lineWidth: 1,\n                    lineColor: Highcharts.getOptions().colors[0]\n                }\n            },\n            {\n                name: 'Task 2',\n                collapsed: true,\n                id: '2',\n                dependency: '1',\n                start: today.getTime() + (3.5 * day),\n                end: today.getTime() + (7 * day),\n                color: Highcharts.getOptions().colors[1]\n            }, {\n                name: '2a',\n                id: '2a',\n                parent: '2',\n                start: today.getTime() + (3.5 * day),\n                end: today.getTime() + (5 * day),\n                color: Highcharts.getOptions().colors[1]\n            },\n            {\n                name: '2a-1',\n                id: '2a-1',\n                parent: '2a',\n                start: today.getTime() + (3.5 * day),\n                end: today.getTime() + (4 * day),\n                color: 'transparent',\n                borderColor: Highcharts.getOptions().colors[1],\n                borderWidth: 1,\n                connectors: {\n                    dashStyle: 'dot',\n                    lineWidth: 1,\n                    lineColor: Highcharts.getOptions().colors[1]\n                }\n            },\n            {\n                name: '2a-2',\n                id: '2a-2',\n                dependency: '2a-1',\n                parent: '2a',\n                start: today.getTime() + (4 * day),\n                end: today.getTime() + (4.5 * day),\n                color: 'transparent',\n                borderColor: Highcharts.getOptions().colors[1],\n                borderWidth: 1,\n                connectors: {\n                    dashStyle: 'dot',\n                    lineWidth: 1,\n                    lineColor: Highcharts.getOptions().colors[1]\n                }\n            },\n            {\n                name: '2a-3',\n                id: '2a-3',\n                dependency: '2a-2',\n                parent: '2a',\n                start: today.getTime() + (4.5 * day),\n                end: today.getTime() + (5 * day),\n                color: 'transparent',\n                borderColor: Highcharts.getOptions().colors[1],\n                borderWidth: 1,\n                connectors: {\n                    dashStyle: 'dot',\n                    lineWidth: 1,\n                    lineColor: Highcharts.getOptions().colors[1]\n\n                }\n            },\n            {\n                name: '2b',\n                id: '2b',\n                dependency: '2a',\n                parent: '2',\n                start: today.getTime() + (5 * day),\n                end: today.getTime() + (7 * day),\n                color: Highcharts.getOptions().colors[1]\n            }, {\n                name: '2c',\n                id: '2c',\n                parent: '2',\n                start: today.getTime() + (5 * day),\n                end: today.getTime() + (7 * day),\n                color: Highcharts.getOptions().colors[1]\n            },\n            {\n                name: 'Task 3',\n                id: '3',\n                dependency: '2',\n                collapsed: false,\n                start: today.getTime() + (7.5 * day),\n                end: today.getTime() + (12 * day),\n                color: Highcharts.getOptions().colors[2]\n            }, {\n                name: '3a',\n                id: '3a',\n                parent: '3',\n                start: today.getTime() + (7.5 * day),\n                end: today.getTime() + (10 * day),\n                color: 'transparent',\n                borderColor: Highcharts.getOptions().colors[2],\n                borderWidth: 1,\n                connectors: {\n                    dashStyle: 'dot',\n                    lineWidth: 1,\n                    lineColor: Highcharts.getOptions().colors[2]\n                }\n            }, {\n                name: '3b',\n                id: '3b',\n                dependency: '3a',\n                parent: '3',\n                start: today.getTime() + (10 * day),\n                end: today.getTime() + (12 * day),\n                color: 'transparent',\n                borderColor: Highcharts.getOptions().colors[2],\n                borderWidth: 1,\n                connectors: {\n                    dashStyle: 'dot',\n                    lineWidth: 1,\n                    lineColor: Highcharts.getOptions().colors[2]\n                }\n            }\n            ]\n        }],\n        responsive: {\n            rules: [\n                // up to 203\n                {\n                    condition: {\n                        // up tp this\n                        maxWidth: 203\n                    },\n                    chartOptions: {\n                        chart: {\n                            margin: [10, 10, 0, 70],\n                            scrollablePlotArea: {\n                                minHeight: 500\n                            }\n                        }\n                    }\n                },\n                {\n                    condition: {\n                        minWidth: 204\n                    },\n                    chartOptions: {\n                        chart: {\n                            margin: [45, 20, 0, 70],\n                            height: 260,\n                            scrollablePlotArea: {\n                                minHeight: 450\n                            }\n                        }\n                    }\n                }\n            ]\n        }\n    });\n\n}\n\nfunction nav() {\n    Highcharts.ganttChart('container', {\n        chart: {\n            height: '100%'\n        },\n        title: {\n            text: ''\n        },\n        credits: {\n            enabled: false\n        },\n        yAxis: {\n            uniqueNames: true,\n            visible: false,\n            grid: {\n                enabled: true,\n                cellHeight: 30,\n                borderWidth: 2\n            }\n        },\n        xAxis: {\n            visible: true,\n            zIndex: 10,\n            min: Date.UTC(2017, 11, 1),\n            max: Date.UTC(2018, 2, 4),\n            grid: {\n                enabled: true,\n                cellHeight: 20,\n                borderWidth: 0\n            },\n            gridLineColor: 'rgba(255, 255, 255, 0.5)',\n            gridLineWidth: 1,\n            gridLineDashStyle: 'longDashDot',\n            labels: {\n                padding: 0,\n                style: {\n                    fontWeight: 'normal'\n                }\n            }\n        },\n        navigator: {\n            enabled: true,\n            liveRedraw: true,\n            margin: 0,\n            maskFill: 'rgba(180, 198, 220, 0.5)',\n            series: {\n                type: 'gantt',\n                color: 'white',\n                borderColor: 'white',\n                borderRadius: 0,\n                pointWidth: 10,\n                accessibility: {\n                    enabled: false\n                }\n            },\n            xAxis: {\n                visible: false\n            },\n            yAxis: {\n                visible: false,\n                min: 0,\n                max: 3,\n                reversed: true,\n                categories: []\n            }\n        },\n        rangeSelector: {\n            enabled: false,\n            selected: 2,\n            floating: true,\n            inputSpacing: 2,\n            y: 0,\n            x: 3,\n            inputDateFormat: '%b %e, %Y'\n        },\n        accessibility: {\n            point: {\n                descriptionFormatter: function (point) {\n                    var completedValue = point.completed ?\n                            point.completed.amount || point.completed : null,\n                        completed = completedValue ?\n                            ' Task ' + Math.round(completedValue * 1000) / 10 + '% completed.' :\n                            '';\n                    return Highcharts.format(\n                        '{point.yCategory}.{completed} Start {point.x:%Y-%m-%d}, end {point.x2:%Y-%m-%d}.',\n                        { point, completed }\n                    );\n                }\n            },\n            series: {\n                descriptionFormatter: function (series) {\n                    return series.name;\n                }\n            }\n        },\n        lang: {\n            accessibility: {\n                axis: {\n                    xAxisDescriptionPlural: 'The chart has a two-part X axis showing time in both week numbers and days.',\n                    yAxisDescriptionPlural: 'The chart has one Y axis showing task categories.'\n                }\n            }\n        },\n        plotOptions: {\n            series: {\n                groupPadding: 0.3,\n                pointPadding: 0.3,\n                pointWidth: 30,\n                borderWidth: 0,\n                borderRadius: 0,\n                dataLabels: {\n                    enabled: false,\n                    color: 'white',\n                    style: {\n                        fontSize: '20px',\n                        textOutline: 'none'\n                    }\n                }\n            }\n        },\n        series: [{\n            name: 'Project 1',\n            data: [{\n                start: Date.UTC(2017, 11, 1),\n                end: Date.UTC(2018, 1, 2),\n                completed: 0.85,\n                name: 'Prototyping',\n                borderColor: Highcharts.getOptions().colors[3]\n            }, {\n                start: Date.UTC(2018, 1, 2),\n                end: Date.UTC(2018, 11, 5),\n                completed: 0.5,\n                name: 'Development'\n            }, {\n                start: Date.UTC(2018, 11, 8),\n                end: Date.UTC(2018, 11, 9),\n                completed: 0.15,\n                name: 'Testing'\n            }, {\n                start: Date.UTC(2018, 11, 9),\n                end: Date.UTC(2018, 11, 19),\n                completed: {\n                    amount: 0.3,\n                    fill: '#fa0'\n                },\n                name: 'Development'\n            }, {\n                start: Date.UTC(2018, 11, 10),\n                end: Date.UTC(2018, 11, 23),\n                name: 'Testing'\n            }, {\n                start: Date.UTC(2018, 11, 25, 8),\n                end: Date.UTC(2018, 11, 25, 16),\n                name: 'Release'\n            }]\n        }],\n        responsive: {\n            rules: [{\n                condition: {\n                    maxWidth: 203\n                },\n                chartOptions: {\n                    chart: {\n                        margin: [20, 10, 0, 10]\n                    },\n                    navigator: {\n                        height: 30\n                    }\n                }\n            },\n            {\n                condition: {\n                    minWidth: 204\n                },\n                chartOptions: {\n                    chart: {\n                        margin: [90, 20, 0, 10],\n                        height: 260\n                    },\n                    navigator: {\n                        height: 60\n                    }\n                }\n            }\n            ]\n        }\n    });\n\n}\n\nfunction drag() {\n    /*\n    Simple demo showing some interactivity options of Highcharts Gantt. More\n    custom behavior can be added using event handlers and API calls. See\n    http://api.highcharts.com/gantt.\n*/\n\n    var today = new Date(),\n        day = 1000 * 60 * 60 * 24;\n\n    // Set to 00:00:00:000 today\n    today.setUTCHours(0);\n    today.setUTCMinutes(0);\n    today.setUTCSeconds(0);\n    today.setUTCMilliseconds(0);\n    today = today.getTime();\n\n\n    // Create the chart\n    Highcharts.ganttChart('container', {\n        chart: {\n            borderWidth: 0,\n            height: '100%',\n            events: {\n                load: function () {\n                    const chart = this;\n                    chart.series[0].points[5].onMouseOver();\n                    chart.series[0].points[4].onMouseOver();\n                }\n            }\n        },\n        title: {\n            floating: false\n        },\n        credits: {\n            enabled: false\n        },\n        lang: {\n            accessibility: {\n                axis: {\n                    xAxisDescriptionPlural: 'The chart has a two-part X axis showing time in both week numbers and days.'\n                }\n            }\n        },\n        accessibility: {\n            point: {\n                descriptionFormatter: function (point) {\n                    return Highcharts.format(\n                        point.milestone ?\n                            '{point.name}, milestone for {point.yCategory} at {point.x:%Y-%m-%d}.' :\n                            '{point.name}, assigned to {point.yCategory} from {point.x:%Y-%m-%d} to {point.x2:%Y-%m-%d}.',\n                        { point }\n                    );\n                }\n            }\n        },\n        plotOptions: {\n            series: {\n                animation: true, // Do not animate dependency connectors\n                dragDrop: {\n                    dragHandle: {\n                        cursor: 'move'\n                    },\n                    draggableX: true,\n                    draggableY: true,\n                    dragMinY: 0,\n                    dragMaxY: 2,\n                    dragPrecisionX: day, // 3 // Snap to eight hours\n                    dragMinX: today - (1.75 * day),\n                    dragMaxX: today + day * 12\n                },\n                connectors: {\n                    lineWidth: 2,\n                    algorithmMargin: 5\n                },\n                states: {\n                    select:\n                    {\n                        borderColor: Highcharts.getOptions().colors[6],\n                        color: Highcharts.getOptions().colors[6],\n                        enabled: true\n                    },\n                    hover:\n                    {\n                        borderColor: Highcharts.getOptions().colors[6],\n                        color: Highcharts.getOptions().colors[6],\n                        enabled: true\n                    }\n                },\n                borderColor: 'transparent',\n                pointPadding: 0.2,\n                dataLabels: {\n                    enabled: true,\n                    formatter: function () {\n                        // nothing\n                    },\n                    style: {\n                        cursor: 'default',\n                        pointerEvents: 'none',\n                        color: '#fff',\n                        textOutline: 'none',\n                        fontSize: '18px',\n                        padding: 0\n                    },\n                    y: -5\n                },\n                allowPointSelect: true\n            }\n        },\n        yAxis: {\n            visible: false,\n            type: 'category',\n            categories: ['Build', 'Content', 'Test'],\n            accessibility: {\n                description: 'Organization departments'\n            },\n            tickInterval: 1,\n            title: {\n                text: ''\n            },\n            tickLength: 40,\n            labels: {\n                useHTML: true,\n                allowOverlap: true,\n                rotation: 270,\n                indentation: 0,\n                padding: 0,\n                format: '<p style=\"background-color:transparent;border: 0px solid #e6e6e6;padding:10px 8px 8px;\">{text}</p>'\n            },\n            grid: {\n                enabled: false\n            }\n        },\n        xAxis: {\n            offset: -20,\n            currentDateIndicator: {\n                enabled: true,\n                label: {\n                    style: {\n                        color: '#FEEAC3',\n                        fontSize: '10px',\n                        fontWeight: 'bold'\n                    }\n                },\n                color: '#FEEAC3'\n\n            },\n            dateTimeLabelFormats: {\n                day: {\n                    list: ['%e']\n                }\n            },\n            grid: {\n                backgroundColor: 'transparent',\n                borderColor: 'transparent'\n                // cellHeight: 35\n            },\n            // maxPadding: 0,\n            // minPadding: 0,\n            // margin: 0,\n            // padding: 0,\n            gridLineColor: '#BBBAC5',\n            gridLineWidth: 1,\n            gridLineDashStyle: 'dot',\n            labels: {\n                useHTML: true,\n                allowOverlap: true,\n                padding: 0,\n                format: '<p style=\"font-size:10px;background-color:transparent;color:transparent;padding:20px 8px 8px;\">{value: %E}</p>'\n            }\n        },\n        tooltip: {\n            xDateFormat: '%a %b %d, %H:%M',\n            enabled: false\n        },\n        series: [{\n            name: 'Project 1',\n            data: [{\n                start: today + 2 * day,\n                end: today + day * 4.5,\n                name: '1',\n                id: 'prototype',\n                borderColor: '#E1D369',\n                borderWidth: 2,\n                y: 0,\n                zIndex: 1\n            },  {\n                start: today + day * 4,\n                name: '★',\n                milestone: true,\n                dependency: 'prototype',\n                id: 'proto_done',\n                zIndex: 100,\n                y: 0,\n                borderColor: Highcharts.getOptions().colors[4],\n                borderWidth: 2,\n                color: 'black',\n                connectors: {\n                    lineColor: '#E1D369',\n                    marker: {\n                        color: Highcharts.getOptions().colors[0]\n                    }\n                }\n            }, {\n                start: today + day * 5.5,\n                end: today + day * 6,\n                borderColor: '#E1D369',\n                borderWidth: 2,\n                name: '2',\n                borderRadius: 20,\n                dependency: 'proto_done',\n                zIndex: 1,\n                y: 0,\n                connectors: {\n                    lineColor: '#E1D369',\n                    marker: {\n                        color: Highcharts.getOptions().colors[0]\n                    }\n                }\n            },\n            {\n                start: today + 2 * day,\n                end: today + day * 4.5,\n                name: '3',\n                id: 'prototype2',\n                borderColor: Highcharts.getOptions().colors[2],\n                borderWidth: 2,\n                y: 1\n            },  {\n                start: today + day * 3,\n                name: '★',\n                milestone: true,\n                dependency: 'prototype2',\n                id: 'proto_done2',\n                y: 1,\n                borderColor: Highcharts.getOptions().colors[2],\n                borderWidth: 2,\n                color: 'black',\n                connectors: {\n                    lineColor: Highcharts.getOptions().colors[2],\n                    marker: {\n                        color: Highcharts.getOptions().colors[2]\n                    }\n                }\n            }, {\n                start: today + day * 5.5,\n                end: today + day * 6,\n                name: '4',\n                borderColor: Highcharts.getOptions().colors[2],\n                borderWidth: 2,\n                dependency: 'proto_done2',\n                y: 1,\n                connectors: {\n                    lineColor: Highcharts.getOptions().colors[2],\n                    marker: {\n                        color: Highcharts.getOptions().colors[2]\n                    }\n                }\n\n            }\n\n            ]\n        }],\n        responsive: {\n            rules: [\n                // up to 203\n                {\n                    condition: {\n                        // up tp this\n                        maxWidth: 203\n                    },\n                    chartOptions: {\n                        chart: {\n                            margin: [15, 5, 5, 5]\n                        },\n                        title: {\n                            text: 'Drag to edit',\n                            style: {\n                                fontSize: '12px'\n                            }\n                        },\n                        plotOptions: {\n                            series: {\n                                pointPadding: 0.1\n                            }\n                        }\n                    }\n                },\n                {\n                    condition: {\n                        minWidth: 204\n                        //\n                    },\n                    chartOptions: {\n                        chart: {\n                            margin: [50, 10, 10, 20],\n                            height: 260\n                        },\n                        title: {\n                            text: 'Drag bars to edit',\n                            style: {\n                                fontSize: '14px'\n                            },\n                            y: 20\n                        },\n                        plotOptions: {\n                            series: {\n                                pointPadding: 0.1\n                            }\n                        }\n                    }\n                }\n            ]\n        }\n    });\n\n}\n\nconst charts = {\n    inverted: inverted,\n    subtasks: subtasks,\n    nav: nav,\n    drag: drag\n};\n\ncharts[chartToShow]();","css":"body {\n    background-color: #2f2b38;\n    padding: 0;\n    color: #fff;\n}\n\na,\na:hover {\n    color: #fff;\n}\n\na:hover {\n    text-decoration: underline;\n}\n\n#container {\n    border: 0 solid #000;\n    overflow: visible;\n}\n\n#demo-content {\n    margin: 0;\n}\n\n.chart-container {\n    width: 150px;\n    height: 140px;\n}\n\n@media screen  and (min-width: 220px) {\n    .chart-container {\n        width: 100%;\n        max-width: 100%;\n        height: 260px;\n    }\n}\n\n@media screen  and (min-width: 260px) {\n    .chart-container {\n        width: 100%;\n        max-width: 100%;\n    }\n}\n\n@media screen  and (min-width: 320px) {\n    .chart-container {\n        width: 100%;\n        max-width: 100%;\n        height: 100%;\n    }\n}\n","html":"\n\n\n<div class=\"chart-container\" id=\"container\"></div>","npm":"// 安装\nnpm install highcharts@10.3.2 --save\n\n// import 模块 \nimport Highcharts      from 'highcharts';\nimport Gantt           from 'highcharts/modules/gantt';\nimport DraggablePoints from 'highcharts/modules/draggable-points';\nimport Accessibility   from 'highcharts/modules/accessibility';\nimport BrandDark       from 'highcharts/themes/brand-dark';\nimport HighchartsZh_CN from 'https://code.hcharts.cn/plugins/highcharts-zh_CN.js';\n\n// 初始化模块\nGantt(Highcharts);\nDraggablePoints(Highcharts);\nAccessibility(Highcharts);\nBrandDark(Highcharts);\nHighchartsZh_CN(Highcharts);\n","scripts":["https://code.hcharts.cn/gantt/10.3.2/highcharts.js","https://code.hcharts.cn/gantt/10.3.2/modules/gantt.js","https://code.hcharts.cn/gantt/10.3.2/modules/draggable-points.js","https://code.hcharts.cn/gantt/10.3.2/modules/accessibility.js","https://code.hcharts.cn/10.3.2/themes/brand-dark.js","https://code.hcharts.cn/plugins/highcharts-zh_CN.js"]}