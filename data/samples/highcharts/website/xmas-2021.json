{"js":"Math.easeOutQuint = function (pos) {\n    return (Math.pow((pos - 1), 5) + 1);\n};\n\nHighcharts.theme = {\n    colors: ['#8087E8', '#A3EDBA', '#F19E53', '#6699A1',\n        '#E1D369', '#87B4E7', '#DA6D85', '#BBBAC5'],\n    chart: {\n        style: {\n            fontFamily: 'IBM Plex Sans, sans-serif'\n        }\n    },\n    title: {\n        style: {\n            fontSize: '22px',\n            fontWeight: '500',\n            color: '#2F2B38'\n        }\n    },\n    subtitle: {\n        style: {\n            fontSize: '16px',\n            fontWeight: '400',\n            color: '#2F2B38'\n        }\n    },\n    tooltip: {\n        borderWidth: 0,\n        backgroundColor: '#46465C',\n        style: {\n            color: '#f0f0f0'\n        },\n        shadow: true\n    },\n    legend: {\n        backgroundColor: '#f0f0f0',\n        borderColor: '#BBBAC5',\n        borderWidth: 1,\n        borderRadius: 2,\n        itemStyle: {\n            fontWeight: '400',\n            fontSize: '12px',\n            color: '#2F2B38'\n        },\n        itemHoverStyle: {\n            fontWeight: '700',\n            color: '#46465C'\n        }\n    },\n    plotOptions: {\n        series: {\n            borderWidth: 1,\n            borderColor: '#BBBAC5',\n            dataLabels: {\n                color: '#46465C',\n                style: {\n                    fontSize: '13px'\n                }\n            },\n            marker: {\n                lineColor: '#46465C'\n            }\n        }\n    }\n};\n\nHighcharts.setOptions(Highcharts.theme);\n\n\nconst data = [3.5, 3, 3.2, 3.1, 3.6, 3.9, 3.4, 3.4, 2.9, 3.1, 3.7, 3.4, 3, 3, 4,\n    4.4, 3.9, 3.5, 3.8, 3.8, 3.4, 3.7, 3.6, 3.3, 3.4, 3, 3.4, 3.5, 3.4, 3.2,\n    3.1, 3.4, 4.1, 4.2, 3.1, 3.2, 3.5, 3.6, 3, 3.4, 3.5, 2.3, 3.2, 3.5, 3.8, 3,\n    3.8, 3.2, 3.7, 3.3, 3.2, 3.2, 3.1, 2.3, 2.8, 2.8, 3.3, 2.4, 2.9, 2.7, 2, 3,\n    2.2, 2.9, 2.9, 3.1, 3, 2.7, 2.2, 2.5, 3.2, 2.8, 2.5, 2.8, 2.9, 3, 2.8, 3,\n    2.9, 2.6, 2.4, 2.4, 2.7, 2.7, 3, 3.4, 3.1, 2.3, 3, 2.5, 2.6, 3, 2.6, 2.3,\n    2.7, 3, 2.9, 2.9, 2.5, 2.8, 3.3, 2.7, 3, 2.9, 3, 3, 2.5, 2.9, 2.5, 3.6,\n    3.2, 2.7, 3, 2.5, 2.8, 3.2, 3, 3.8, 2.6, 2.2, 3.2, 2.8, 2.8, 2.7, 3.3, 3.2,\n    2.8, 3, 2.8, 3, 2.8, 3.8, 2.8, 2.8, 2.6, 3, 3.4, 3.1, 3, 3.1, 3.1, 3.1, 2.7,\n    3.2, 3.3, 3, 2.5, 3, 3.4, 3];\n\nconst randomIntFromInterval = function (min, max) { // min and max included\n    return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\nconst big = window.matchMedia('(min-width: 500px)').matches;\n\n\nconst leftSide = {\n    type: 'arearange',\n    enableMouseTracking: false,\n    visible: true,\n    animation: false,\n    color: 'lightcoral',\n    zIndex: 2,\n    yAxis: 1,\n    xAxis: 1,\n    fillOpacity: 1,\n    data: [{\n        x: 0,\n        low: 0,\n        high: 24\n    },\n    {\n        x: 20,\n        low: 0,\n        high: 24\n    }]\n};\n\nconst rightSide = {\n    type: 'arearange',\n    enableMouseTracking: false,\n    visible: true,\n    animation: false,\n    color: 'lightcoral',\n    fillOpacity: 1,\n    yAxis: 2,\n    xAxis: 2,\n    zIndex: 1,\n    data: [\n        {\n            // x: 0,\n            // low: 2,\n            // high: 23\n            x: 0,\n            low: 0,\n            high: 24\n        },\n        {\n            x: 10,\n            low: 0,\n            high: 24\n        }]\n};\n\nconst xAxis1 =  {\n    min: 0,\n    max: 20,\n    visible: false\n};\n\nconst xAxis2 =  {\n    min: 0,\n    max: 160,\n    visible: false,\n    reversed: true\n};\n\nconst yAxis1 = {\n    min: 0,\n    max: 20,\n    visible: false\n};\n\nconst yAxis2 =  {\n    min: 0,\n    max: 20,\n    visible: false\n};\n\nconst flip = function (chart, boxNum, pos, delay) {\n    setTimeout(function () {\n        chart.xAxis[1].setExtremes(0, 13);\n        chart.xAxis[2].setExtremes(0, 40);\n        chart.series[0].update({\n            data: [{\n                x: 0,\n                low: 2,\n                high: 23\n            },\n            {\n                x: 10,\n                low: 0,\n                high: 24\n            }]\n        });\n        if (boxNum !== -1) {\n            const id = 'box' + boxNum;\n            document.getElementById(id).style.opacity = 0;\n        }\n    }, 0 + delay);\n\n    setTimeout(function () {\n        chart.xAxis[1].setExtremes(0, 300);\n        chart.xAxis[2].setExtremes(0, 20);\n\n        chart.series[1].update({\n            data: [{\n                x: 0,\n                low: 0,\n                high: 24\n            },\n            {\n                x: 20,\n                low: 0,\n                high: 24\n            }]\n        });\n        if (boxNum !== -1) {\n            const id = 'box' + boxNum;\n            document.getElementById(id).style.opacity = 0;\n            document.querySelector('.box-' + pos).classList.add('turn');\n        }\n\n    }, 500 + delay);\n\n    setTimeout(function () {\n        chart.series[0].hide();\n        const lastSeries = chart.series.length - 1;\n        const count = 1;\n        for (let ii = lastSeries; ii > count; --ii) {\n            chart.series[ii].show();\n        }\n    }, 1000 + delay);\n\n\n};\n\nlet wordChart;\n\nconst words = function () {\n    const text = 'Twas, Twas, Twas, Twas the night, night, night, night, night, before, before, before, before, Christmas, Christmas, Christmas, Christmas, Christmas, Christmas, not a creature was stirring, when all through the house not a creature was stirring, not even a mouse.',\n        lines = text.split(/[,\\. ]+/gu),\n        data = lines.reduce((arr, word) => {\n            let obj = Highcharts.find(arr, obj => obj.name === word);\n            if (obj) {\n                obj.weight += 1;\n            } else {\n                obj = {\n                    name: word,\n                    weight: 1\n                };\n                arr.push(obj);\n            }\n            return arr;\n        }, []);\n\n    wordChart = Highcharts.chart('word-chart', {\n        chart: {\n            margin: 0,\n            style: {\n                fontFamily: 'IBM Plex Sans'\n            },\n            backgroundColor: 'transparent',\n            events: {\n                load: function () {\n                    const chart = this;\n\n                    chart.series[1].update({\n                        color: '#C9C8D1'\n                    });\n                }\n            }\n        },\n        credits: {\n            enabled: false\n        },\n        legend: {\n            enabled: false\n        },\n        colors: ['#E04B44', '#51BFA7', '#6699A1', '#00786F', '#E04B44', '#A3EDBA'],\n        accessibility: {\n            screenReaderSection: {\n                beforeChartFormat: '<h5>{chartTitle}</h5>' +\n                    '<div>{chartSubtitle}</div>' +\n                    '<div>{chartLongdesc}</div>' +\n                    '<div>{viewTableButton}</div>'\n            }\n        },\n        plotOptions: {\n            series: {\n                marker: {\n                    enabled: false\n                }\n            }\n        },\n        xAxis: [\n            // 0\n            {\n                min: 0,\n                max: 20,\n                visible: false\n            },\n            // 1\n            xAxis1,\n            // 2\n            xAxis2\n        ],\n        yAxis: [\n            // 0\n            {\n                min: 0,\n                max: 20,\n                visible: false\n            },\n            // 1\n            yAxis1,\n            // 2\n            yAxis2\n        ],\n        series: [\n            // 0 - left side\n            leftSide,\n            // 1 -- right side\n            rightSide,\n            {\n                type: 'wordcloud',\n                visible: false,\n                data,\n                name: 'Some words from a poem',\n                zIndex: 10\n            }],\n        title: {\n            text: ''\n        }\n    });\n};\n\nlet bellChart;\nconst bell = function () {\n    bellChart = Highcharts.chart('bell-chart', {\n        chart: {\n            margin: 0,\n            spacing: 0,\n            backgroundColor: 'transparent',\n            animation: {\n                enabled: true,\n                duration: 2000,\n                easing: 'easeOutQuint'\n            },\n            events: {\n                load: function () {\n\n                    const chart = this;\n\n                    chart.series[1].update({\n                        color: '#8BD6F3'\n                    });\n\n                    const bell = document.querySelector('#bell-chart  .highcharts-bellcurve-series');\n                    const hammer = document.querySelector('#bell-chart .highcharts-series-4');\n                    const bellLine = document.querySelector('#bell-chart .highcharts-series-5');\n                    const bow = document.querySelector('#bell-chart .highcharts-series-6.highcharts-markers');\n\n                    let transY = '-40px';\n                    if (!big) {\n                        transY = '-30px';\n                    }\n\n                    bell.style.transformOrigin = 'center';\n                    bellLine.style.transformOrigin = 'center';\n\n                    bell.style.transform = 'rotate(10deg) translateY(' + transY + ')';\n                    bellLine.style.transform = 'rotate(10deg) translateY(0px)';\n                    bow.style.transform = 'rotate(10deg) translate(10px, -10px)';\n                    hammer.style.transform = 'translate(9px, -3px)';\n\n                    let count = 0;\n                    setInterval(function () {\n                        bell.style.transition = 'all 1s';\n                        bellLine.style.transition = 'all 1s';\n                        bow.style.transition = 'all 1s';\n                        hammer.style.transition = 'all 1s';\n\n                        if (count % 2 === 0) {\n                            bell.style.transform = 'rotate(-10deg) translateY(' + transY + ')';\n                            bow.style.transform = 'rotate(-10deg) translate(-20px, 20px)';\n                            bellLine.style.transform = 'rotate(-10deg) translateY(0px)';\n                            hammer.style.transform = 'translate(-10px, -7px)';\n                        } else {\n                            bell.style.transform = 'rotate(10deg) translateY(' + transY + ')';\n                            bellLine.style.transform = 'rotate(10deg) translateY(0px)';\n                            bow.style.transform = 'rotate(10deg) translate(10px, -10px)';\n                            hammer.style.transform = 'translate(9px, -3px)';\n\n                        }\n                        count = count + 1;\n\n                    }, 1000);\n\n                }\n            }\n        },\n        title: {\n            text: ''\n        },\n        legend: {\n            enabled: false\n        },\n        credits: {\n            enabled: false\n        },\n        plotOptions: {\n            arearange: {\n                marker: {\n                    enabled: false\n                }\n            }\n        },\n        xAxis: [\n            // 0\n            {\n                title: {\n                    text: 'Data'\n                },\n                alignTicks: false,\n                visible: false\n            },\n            // 1\n            {\n                min: 0,\n                max: 20,\n                visible: false\n            },\n            // 2\n            {\n                min: 0,\n                max: 20,\n                visible: false,\n                reversed: true\n            },\n            // 3\n            {\n                title: {\n                    text: 'Bell curve'\n                },\n                alignTicks: false,\n                opposite: true,\n                visible: false,\n                min: 1,\n                max: 5\n            },\n            // 4\n            {\n                min: 0,\n                max: 20\n            },\n            // 5\n            {\n                min: 0,\n                max: 140,\n                reversed: true\n            }],\n        yAxis: [\n            // 0\n            {\n                title: { text: 'Data' },\n                visible: true,\n                tickInterval: 1,\n                tickAmount: 7,\n                offset: -30,\n                gridLineColor: '#fff'\n            },\n            // 1\n            {\n                min: 0,\n                max: 20,\n                visible: false\n            },\n            // 2\n            {\n                min: 0,\n                max: 20,\n                visible: false\n            },\n            // 3\n            {\n                title: { text: 'Bell curve' },\n                opposite: true,\n                min: 0.1,\n                visible: true,\n                gridLineColor: '#fff'\n            },\n            // 4\n            {\n                min: 0,\n                max: 20\n            },\n            // 5\n            {\n                min: 0,\n                max: 20\n            }],\n\n        series: [\n            // 0 - left side\n            leftSide,\n            // 1 -- right side\n            rightSide,\n            // 2 bell curve\n            {\n                name: 'Bell curve',\n                visible: false,\n                animation: false,\n                type: 'bellcurve',\n                xAxis: 3,\n                yAxis: 3,\n                baseSeries: 3,\n                color: {\n                    linearGradient: { x1: 0, x2: 1, y1: 0, y2: 0 },\n                    stops: [\n                        [0, '#FEDDB3'], // start\n                        [0.5, '#FCAB42'], // middle\n                        [1, '#FEDDB3'] // end\n                    ]\n                },\n                fillOpacity: 1,\n                lineWidth: 0,\n                lineColor: '#BD8032',\n                zIndex: 20,\n                label: {\n                    enabled: true\n                }\n            },\n            // 3\n            {\n                name: 'Data',\n                animation: false,\n                visible: false,\n                type: 'line',\n                dashStyle: 'dash',\n                color: '#FEDDB3',\n                data: data,\n                accessibility: {\n                    exposeAsGroupOnly: true\n                },\n                zIndex: 21,\n                marker: {\n                    radius: 2\n                }\n            },\n            // 4 -- ringer thing\n            {\n                type: 'pie',\n                animation: false,\n                enableMouseTracking: false,\n                visible: false,\n                borderWidth: 0,\n                opacity: 1,\n                zIndex: 18,\n                data: [{\n                    y: 100,\n                    color: '#BD8032'\n                }\n                ],\n                size: '5%',\n                center: ['50%', '90%'],\n                dataLabels: {\n                    enabled: false\n                }\n            },\n            // 5 --bell bottom\n            {\n                type: 'line',\n                zIndex: 100,\n                visible: false,\n                enableMouseTracking: false,\n                lineWidth: 2,\n                xAxis: 4,\n                yAxis: 4,\n                color: '#BD8032',\n                dragDrop: {\n                    draggableX: true,\n                    draggableY: true\n                },\n                marker: {\n                    enabled: false\n                },\n                data: [{\n                    x: 3.22,\n                    y: 5.46\n                },\n                {\n                    x: 17,\n                    y: 5.46\n                }]\n            },\n            // 6 scatter bow\n            {\n                type: 'scatter',\n                visible: false,\n                zIndex: 100,\n                lineWidth: 2,\n                lineColor: 'transparent',\n                xAxis: 4,\n                yAxis: 4,\n                color: '#FF4540',\n                marker: {\n                    enabled: true,\n                    symbol: 'triangle',\n                    radius: 10\n                },\n                data: [{\n                    x: 9.5,\n                    y: 19.2\n                },\n                {\n                    x: 10.5,\n                    y: 18,\n                    marker: {\n                        enabled: true,\n                        symbol: 'circle',\n                        radius: 8\n                    }\n                },\n                {\n                    x: 11.5,\n                    y: 19.2\n                }]\n            }]\n    });\n};\n\n\nconst tree = function () {\n    Highcharts.chart('tree-chart', {\n\n        chart: {\n            type: 'columnrange',\n            margin: 0,\n            backgroundColor: 'transparent',\n            inverted: true,\n            events: {\n                load: function () {\n                    const chart = this;\n\n                    let count = 0;\n                    const treeData =  [\n                        [10, 10],\n                        [9, 14],\n                        [6, 17],\n                        [3, 20],\n                        [0, 23],\n                        [-3, 26],\n                        [-7, 29],\n                        [-10, 32],\n                        [7, 17],\n                        [7, 17],\n                        [7, 17],\n                        [10, 10],\n                        [0, 0]\n                    ];\n\n                    const topTree = document.querySelector('#tree-chart .highcharts-series-2');\n\n                    chart.series[0].update({\n                        color: '#E05283'\n                    });\n\n                    topTree.style.opacity = 1;\n\n                    setInterval(function () {\n                        topTree.style.transition = 'all 500ms';\n                        if (count % 2 === 0) {\n                            chart.series[3].data.forEach(function (point) {\n                                point.update({\n                                    low: treeData[point.index][0],\n                                    high: treeData[point.index][1]\n                                }, false);\n                            });\n                            chart.redraw();\n                            topTree.style.opacity = 0;\n                        } else {\n                            chart.series[3].data.forEach(function (point) {\n                                point.update({\n                                    low: -30,\n                                    high: 60\n                                }, false);\n                            });\n                            chart.redraw();\n                            topTree.style.opacity = 1;\n                        }\n                        count = count + 1;\n                    }, 2000);\n\n                }\n            }\n        },\n        credits: {\n            enabled: false\n        },\n        colors: ['#00786f'],\n        title: {\n            text: ''\n        },\n        xAxis: [\n            // 0\n            {\n                visible: true,\n                min: 0,\n                labels: {\n                    style: {\n                        color: '#fff'\n                    }\n                }\n            },\n            // 1\n            xAxis1,\n            // 2\n            xAxis2\n        ],\n        yAxis: [\n            // 0\n            {\n                visible: true,\n                min: -20,\n                max: 40,\n                offset: -30,\n                gridLineColor: '#fff',\n                gridLineWidth: 0,\n                tickAmount: 10,\n                gridZIndex: 100,\n                labels: {\n                    style: {\n                        color: '#fff'\n                    }\n                }\n            },\n            // 1\n            yAxis1,\n            // 2\n            yAxis2\n        ],\n\n        tooltip: {\n            valueSuffix: '°C'\n        },\n\n        plotOptions: {\n            series: {\n                enableMouseTracking: true,\n                name: 'tree'\n            },\n            columnrange: {\n                animation: false,\n                name: 'tree',\n                dataLabels: {\n                    enabled: false,\n                    format: '{y}°C'\n                },\n                borderWidth: 0,\n                groupPadding: -0.5\n            }\n        },\n\n        legend: {\n            enabled: false\n        },\n\n        series: [\n            // 0 - left side\n            leftSide,\n            // 1 -- right side\n            rightSide,\n            // 2 tree\n            {\n                color: '#A3ECBA',\n                zIndex: 12,\n                data: [\n                    [0, 0],\n                    [9, 14],\n                    [6, 17],\n                    [3, 20],\n                    [0, 23],\n                    [-3, 26],\n                    [-7, 29],\n                    [-10, 32],\n                    [7, 17],\n                    [7, 17],\n                    [7, 17],\n                    [0, 0]\n                ]\n            },\n            // /3\n            {\n                zIndex: 11,\n                keys: ['x', 'low', 'high', 'color'],\n                data: [\n                    [-1, -30, 60, '#00786f'],\n                    [0, -30, 60, '#00786f'],\n                    [1, -30.1, 60, '#00786f'],\n                    [2, -30.2, 60, '#00786f'],\n                    [3, -30.3, 60, '#00786f'],\n                    [4, -30.4, 60, '#00786f'],\n                    [5, -30.5, 60, '#00786f'],\n                    [6, -30.6, 60, '#00786f'],\n                    [7, -30.7, 60, '#00786f'],\n                    [8, -30.1, 60, '#00786f'],\n                    [9, -30.1, 60, '#00786f'],\n                    [10, -30.1, 60, '#00786f'],\n                    [11, -30.1, 60, '#00786f']\n                ]\n            }]\n\n    });\n};\n\n\n// /Snow Globe\nlet snowglobeChart;\n\nconst snowglobe = function () {\n    snowglobeChart = Highcharts.chart('snowglobe-chart', {\n        chart: {\n            margin: 0,\n            spacing: 0,\n            backgroundColor: 'transparent',\n            events: {\n                load: function () {\n                    const chart = this;\n                    chart.series[1].update({\n                        color: '#FF4540'\n                    });\n                }\n            }\n        },\n        title: {\n            text: ''\n        },\n        tooltip: {\n            useHTML: true,\n            pointFormat: '<b>{point.name}:</b> {point.y}m CO<sub>2</sub>'\n        },\n        legend: {\n            enabled: false\n        },\n        credits: {\n            enabled: false\n        },\n        xAxis: [\n            // 0\n            {\n                min: 0,\n                max: 20,\n                visible: false\n            },\n            // 1\n            xAxis1,\n            // 2\n            xAxis2\n        ],\n        yAxis: [\n            // 0\n            {\n                min: 0,\n                max: 20,\n                visible: false\n            },\n            // 1\n            yAxis1,\n            // 2\n            yAxis2\n        ],\n        plotOptions: {\n            series: {\n                states: {\n                    hover: {\n                        enabled: false,\n                        halo: {\n                            opacity: 1\n                        }\n                    },\n                    inactive: {\n                        enabled: false\n                    }\n                }\n            },\n            arearange: {\n                marker: {\n                    enabled: false\n                }\n            },\n            packedbubble: {\n                marker: {\n                    fillColor: {\n                        radialGradient: { cx: 0.4, cy: 0.3, r: 0.7 },\n                        stops: [\n                            [0, 'rgba(255,255,255,1)'],\n                            [1, 'rgba(255,255,255,0.8)']\n                        ]\n                    },\n                    lineWidth: 0\n                },\n                draggable: true,\n                minSize: '10%',\n                maxSize: '100%',\n                opacity: 1,\n                layoutAlgorithm: {\n                    initialPositionRadius: 200,\n                    bubblePadding: 5,\n                    initialPositions: function () {\n                        const chart = this.series[0].chart,\n                            width = chart.plotWidth;\n                        this.nodes.forEach(function (node) {\n                            // If initial positions were set previously, use that\n                            // positions. Otherwise use random position:\n                            node.plotX = node.plotX === undefined ?\n                                Math.random() * width : node.plotX;\n                            node.plotY = 500;\n                        });\n                    },\n                    gravitationalConstant: 0.01,\n                    splitSeries: true,\n                    parentNodeLimit: true,\n                    parentNodeOptions: {\n                        marker: {\n                            fillColor: '#d9dbfb',\n                            fillOpacity: 1,\n                            lineWidth: 0,\n                            radius: 200\n                        },\n                        initialPositions: function () {\n                            const chart = this.series[0].chart,\n                                width = chart.plotWidth,\n                                height = chart.plotHeight;\n\n                            this.nodes.forEach(function (node) {\n                                // If initial positions were set previously, use that\n                                // positions. Otherwise use random position:\n                                node.plotX = node.plotX === undefined ?\n                                    Math.random() * width : node.plotX;\n                                node.plotY = 500;\n                                node.plotX = width / 2;\n                                node.plotY = height / 2;\n                            });\n                        },\n                        gravitationalConstant: 0.01\n                    }\n                },\n                dataLabels: {\n                    enabled: false,\n                    format: '{point.name}',\n                    filter: {\n                        property: 'y',\n                        operator: '>',\n                        value: 250\n                    },\n                    style: {\n                        color: 'black',\n                        textOutline: 'none',\n                        fontWeight: 'normal'\n                    }\n                }\n            }\n        },\n        series: [\n            // 0 - left side\n            leftSide,\n            // 1 -- right side\n            rightSide,\n            // 2 -- snowglobe (pie)\n            {\n                type: 'pie',\n                name: 'snowglobe',\n                borderWidth: 0,\n                dataLabels: {\n                    enabled: false\n                },\n                animation: false,\n                data: [{\n                    y: 100,\n                    color: '#8bd4f4'\n                }],\n                size: '80%',\n                zIndex: 8,\n                visible: false\n            },\n            // 3 -- packed bubble\n            {\n                type: 'packedbubble',\n                name: 'bubbles',\n                color: '#220000',\n                data: [{\n                    name: 'Germany',\n                    value: 767.1\n                }, {\n                    name: 'Croatia',\n                    value: 20.7\n                },\n                {\n                    name: 'Belgium',\n                    value: 97.2\n                },\n                {\n                    name: 'Czech Republic',\n                    value: 111.7\n                },\n                {\n                    name: 'Netherlands',\n                    value: 158.1\n                },\n                {\n                    name: 'Spain',\n                    value: 241.6\n                },\n                {\n                    name: 'Ukraine',\n                    value: 249.1\n                },\n                {\n                    name: 'Poland',\n                    value: 298.1\n                },\n                {\n                    name: 'France',\n                    value: 323.7\n                },\n                {\n                    name: 'Romania',\n                    value: 78.3\n                },\n                {\n                    name: 'United Kingdom',\n                    value: 415.4\n                }, {\n                    name: 'Turkey',\n                    value: 353.2\n                }, {\n                    name: 'Italy',\n                    value: 337.6\n                },\n                {\n                    name: 'Greece',\n                    value: 71.1\n                },\n                {\n                    name: 'Austria',\n                    value: 69.8\n                },\n                {\n                    name: 'Belarus',\n                    value: 67.7\n                },\n                {\n                    name: 'Serbia',\n                    value: 59.3\n                },\n                {\n                    name: 'Finland',\n                    value: 54.8\n                },\n                {\n                    name: 'Bulgaria',\n                    value: 51.2\n                },\n                {\n                    name: 'Portugal',\n                    value: 48.3\n                },\n                {\n                    name: 'Norway',\n                    value: 44.4\n                },\n                {\n                    name: 'Sweden',\n                    value: 44.3\n                },\n                {\n                    name: 'Hungary',\n                    value: 43.7\n                },\n                {\n                    name: 'Switzerland',\n                    value: 40.2\n                },\n                {\n                    name: 'Denmark',\n                    value: 40\n                },\n                {\n                    name: 'Slovakia',\n                    value: 34.7\n                },\n                {\n                    name: 'Ireland',\n                    value: 34.6\n                },\n                {\n                    name: 'Croatia',\n                    value: 20.7\n                },\n                {\n                    name: 'Estonia',\n                    value: 19.4\n                },\n                {\n                    name: 'Slovenia',\n                    value: 16.7\n                },\n                {\n                    name: 'Lithuania',\n                    value: 12.3\n                },\n                {\n                    name: 'Luxembourg',\n                    value: 10.4\n                },\n                {\n                    name: 'Macedonia',\n                    value: 9.5\n                },\n                {\n                    name: 'Moldova',\n                    value: 7.8\n                },\n                {\n                    name: 'Latvia',\n                    value: 7.5\n                },\n                {\n                    name: 'Cyprus',\n                    value: 7.2\n                }],\n                zIndex: 20,\n                visible: false\n            },\n            // 4 - house\n            {\n                type: 'area',\n                name: 'little red house inside a snowglobe',\n                color: '#ff4540',\n                fillOpacity: 1,\n                marker: {\n                    enabled: false\n                },\n                data: [\n                    {\n                        x: 7,\n                        y: 6\n                    },\n                    {\n                        x: 10,\n                        y: 8\n                    },\n                    {\n                        x: 13,\n                        y: 6\n                    },\n                    {\n                        x: 15,\n                        y: 6\n                    }\n\n\n                ],\n                zIndex: 10,\n                visible: false\n            },\n            // 5 house\n            {\n                type: 'arearange',\n                name: 'little red house inside a snowglobe',\n                color: '#fff',\n                fillOpacity: 1,\n                marker: {\n                    enabled: false\n                },\n                data: [\n                    {\n                        x: 10,\n                        low: 8,\n                        high: 8\n                    },\n                    {\n                        x: 12.5,\n                        low: 6,\n                        high: 8\n                    },\n                    {\n                        x: 15,\n                        low: 6,\n                        high: 6\n                    }\n                ],\n                zIndex: 10,\n                visible: false\n            },\n            // 6 window\n            {\n                type: 'scatter',\n                name: 'little red house inside a snowglobe',\n                color: '#fff',\n                visible: false,\n                fillOpacity: 1,\n                data: [\n                    {\n                        x: 9,\n                        y: 5,\n                        marker: {\n                            symbol: 'square',\n                            radius: 4\n                        }\n                    },\n                    {\n                        x: 9.1,\n                        y: 4,\n                        marker: {\n                            symbol: 'square',\n                            radius: 4\n                        }\n                    },\n                    {\n                        x: 10,\n                        y: 5,\n                        marker: {\n                            symbol: 'square',\n                            radius: 4\n                        }\n                    },\n                    {\n                        x: 10.1,\n                        y: 4,\n                        marker: {\n                            symbol: 'square',\n                            radius: 4\n                        }\n                    }\n                ],\n                zIndex: 11\n            }\n        ]\n    });\n};\n\n// Candy Cane\nlet candycaneChart;\nconst candycane = function () {\n    candycaneChart = Highcharts.chart('cane-chart', {\n\n        chart: {\n            margin: 0,\n            backgroundColor: 'transparent',\n            events: {\n                load: function () {\n                    const chart = this;\n                    chart.series[1].update({\n                        color: '#8085ef'\n                    });\n\n                    if (!big) {\n                        chart.series[2].points[1].update({\n                            low: 0,\n                            high: 18,\n                            color: '#fff'\n                        });\n                        chart.series[3].points[1].update({\n                            low: 0,\n                            high: 18,\n                            color: 'url(#redstripe)'\n                        });\n                    }\n\n                }\n            }\n        },\n        title: {\n            text: ''\n        },\n        credits: {\n            enabled: false\n        },\n        xAxis: [{\n            categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun',\n                'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n            visible: false,\n            gridLineColor: '#fff',\n            labels: {\n                style: {\n                    color: '#fff'\n                }\n            }\n        },\n        // 1\n        xAxis1,\n        // 2\n        xAxis2\n        ],\n        yAxis: [{\n            visible: true,\n            title: {\n                text: ''\n            },\n            zIndex: 5,\n            offset: -30,\n            tickInterval: 1,\n            gridLineColor: '#fff',\n            labels: {\n                style: {\n                    color: '#fff'\n                }\n            }\n        },\n        // 1\n        yAxis1,\n        // 2\n        yAxis2\n        ],\n\n        tooltip: {\n            valueSuffix: '°C'\n        },\n\n        plotOptions: {\n            series: {\n                animation: false,\n                marker: {\n                    enabled: false\n                }\n            },\n            columnrange: {\n                dataLabels: {\n                    enabled: false,\n                    format: '{y}°C'\n                },\n                grouping: false,\n                borderWidth: 0\n            }\n        },\n\n        legend: {\n            enabled: false\n        },\n\n        series: [\n            // 0 - left side\n            leftSide,\n            // 1 -- right side\n            rightSide,\n            // 2 - bottom of cane\n            {\n                type: 'columnrange',\n                name: 'candycane',\n                visible: false,\n                animation: false,\n                groupPadding: 0,\n                pointPadding: 0,\n                zIndex: 6,\n                data: [\n                    {\n                        low: 0,\n                        high: 0,\n                        color: 'transparent'\n                    },\n                    {\n                        low: 0,\n                        high: 25,\n                        color: '#fff'\n                    },\n                    {\n                        high: 30,\n                        low: 25,\n                        color: 'transparent'\n                    },\n                    {\n                        low: 24,\n                        high: 25,\n                        color: 'transparent'\n                    },\n                    {\n                        low: 24,\n                        high: 25,\n                        color: 'transparent'\n                    }\n                ]\n            },\n            // 3 - bottom of cane\n            {\n                type: 'columnrange',\n                name: 'candycane',\n                visible: false,\n                animation: false,\n                zIndex: 7,\n                groupPadding: 0,\n                pointPadding: 0,\n                data: [\n                    {\n                        low: 0,\n                        high: 0,\n                        color: 'transparent'\n                    },\n                    {\n                        low: 0,\n                        high: 25,\n                        color: 'url(#redstripe)'\n                    },\n                    {\n                        low: 25,\n                        high: 30,\n                        color: 'transparent'\n                    },\n                    {\n                        low: 24,\n                        high: 25,\n                        color: 'transparent'\n                    },\n                    {\n                        low: 24,\n                        high: 25,\n                        color: 'transparent'\n                    }\n                ]\n            },\n            // 4 - back of the top of the cane\n            {\n                type: 'pie',\n                name: 'candycane',\n                data: [{\n                    y: 100,\n                    color: '#fff'\n                }],\n                visible: false,\n                dataLabels: {\n                    enabled: false\n                },\n                zIndex: 2,\n                startAngle: -90,\n                endAngle: 90,\n                borderWidth: 0,\n                size: '80%',\n                center: ['59.3%', '48%']\n\n            },\n            // 5 top of cane\n            {\n                type: 'pie',\n                name: 'candycane',\n                zIndex: 3,\n                visible: false,\n                dataLabels: {\n                    enabled: false\n                },\n                data: [{\n                    y: 100,\n                    color: 'url(#redstripe)'\n                }],\n                startAngle: -90,\n                endAngle: 90,\n                borderWidth: 0,\n                size: '80%',\n                center: ['59.3%', '48%']\n\n            },\n            // 6 - cane cover\n            {\n                type: 'pie',\n                zIndex: 4,\n                startAngle: -90,\n                endAngle: 90,\n                enableMouseTracking: false,\n                dataLabels: {\n                    enabled: false\n                },\n                visible: false,\n                data: [{\n                    y: 100,\n                    color: '#8085ef'\n                }],\n                borderWidth: 0,\n                size: '33%',\n                center: ['60%', '52%']\n\n            }]\n\n    });\n};\n\nlet presentsChart;\nconst presents = function () {\n    presentsChart = Highcharts.chart('presents-chart', {\n        chart: {\n            margin: 0,\n            backgroundColor: 'transparent',\n            events: {\n                load: function () {\n                    const chart = this;\n                    chart.series[1].update({\n                        color: '#d9dbfb'\n                    });\n                }\n            }\n        },\n        colors: ['#00786F', '#00786F', '#00786F', 'url(#bluestripe)', 'url(#bluestripe)', 'url(#bluestripe)', 'url(#stars)', 'url(#stars)', 'url(#stars)', 'url(#redstripe2)'],\n        title: {\n            text: '',\n            y: 30\n        },\n        legend: {\n            enabled: false\n        },\n        credits: {\n            enabled: false\n        },\n        xAxis: [\n            // 0\n            {\n                min: -2,\n                max: 18,\n                visible: true,\n                tickInterval: 1\n            },\n            // 1\n            xAxis1,\n            // 2\n            xAxis2\n        ],\n        yAxis: [\n            // 0\n            {\n                min: 0,\n                max: 20,\n                visible: false,\n                tickInterval: 1,\n                labels: {\n                    style: {\n                        color: '#000'\n                    }\n                }\n            },\n            // 1\n            yAxis1,\n            // 2\n            yAxis2\n        ],\n        plotOptions: {\n            series: {\n                animation: false\n            },\n            arearange: {\n                name: 'Presents!',\n                borderWidth: 0,\n                marker: {\n                    enabled: false\n                },\n                zIndex: 20\n            },\n            scatter: {\n                zIndex: 22,\n                name: 'bow'\n            }\n        },\n        tooltip: {\n            enabled: true\n        },\n        series: [\n            // 0 - left side\n            leftSide,\n            // 1 -- right side\n            rightSide,\n            // 2\n            {\n                type: 'arearange',\n                className: 'present',\n                data: [\n                    {\n                        x: 0,\n                        low: 15,\n                        high: 20\n                    },\n                    {\n                        x: 2,\n                        low: 15,\n                        high: 20\n                    },\n                    {\n                        x: 4,\n                        low: 15,\n                        high: 20\n                    }\n                ],\n                visible: false\n            },\n            // 3\n            {\n                type: 'arearange',\n                data: [\n                    {\n                        x: 6,\n                        low: 15,\n                        high: 20\n                    },\n                    {\n                        x: 8,\n                        low: 15,\n                        high: 20\n                    },\n                    {\n                        x: 10,\n                        low: 15,\n                        high: 20\n                    }\n                ],\n                visible: false\n            },\n            // 4\n            {\n                type: 'arearange',\n                data: [\n                    // third\n                    {\n                        x: 12,\n                        low: 15,\n                        high: 20\n                    },\n                    {\n                        x: 14,\n                        low: 15,\n                        high: 20\n                    },\n                    {\n                        x: 16,\n                        low: 15,\n                        high: 20\n                    }\n                ],\n                visible: false\n            },\n            // 5\n            {\n                type: 'arearange',\n                data: [\n                    {\n                        x: 0,\n                        low: 8,\n                        high: 13\n                    },\n                    {\n                        x: 2,\n                        low: 8,\n                        high: 13\n                    },\n                    {\n                        x: 4,\n                        low: 8,\n                        high: 13\n                    }\n                ],\n                visible: false\n            },\n            // 6\n            {\n                type: 'arearange',\n                data: [\n                    // ///second\n                    {\n                        x: 6,\n                        low: 8,\n                        high: 13\n                    },\n                    {\n                        x: 8,\n                        low: 8,\n                        high: 13\n                    },\n                    {\n                        x: 10,\n                        low: 8,\n                        high: 13\n                    }\n                ],\n                visible: false\n            },\n            // 7\n            {\n                type: 'arearange',\n                data: [\n                    // //third\n                    {\n                        x: 12,\n                        low: 8,\n                        high: 13\n                    },\n                    {\n                        x: 14,\n                        low: 8,\n                        high: 13\n                    },\n                    {\n                        x: 16,\n                        low: 8,\n                        high: 13\n                    }\n                ],\n                visible: false\n            },\n            // 8\n            {\n                type: 'arearange',\n                data: [\n                    {\n                        x: 0,\n                        low: 1,\n                        high: 6\n                    },\n                    {\n                        x: 2,\n                        low: 1,\n                        high: 6\n                    },\n                    {\n                        x: 4,\n                        low: 1,\n                        high: 6\n                    }\n                ],\n                visible: false\n            },\n            // 9\n            {\n                type: 'arearange',\n                data: [\n                    // /second\n                    {\n                        x: 6,\n                        low: 1,\n                        high: 6\n                    },\n                    {\n                        x: 8,\n                        low: 1,\n                        high: 6\n                    },\n                    {\n                        x: 10,\n                        low: 1,\n                        high: 6\n                    }\n                ],\n                visible: false\n            },\n            // 10\n            {\n                type: 'arearange',\n                data: [\n                    // //third\n                    {\n                        x: 12,\n                        low: 1,\n                        high: 6\n                    },\n                    {\n                        x: 14,\n                        low: 1,\n                        high: 6\n                    },\n                    {\n                        x: 16,\n                        low: 1,\n                        high: 6\n                    }\n                ],\n                visible: false\n            },\n            // 11\n            {\n                type: 'scatter',\n                data: [\n                    {\n                        x: 1.75,\n                        y: 20.5,\n                        color: 'red',\n                        marker: {\n                            enabled: true,\n                            symbol: 'triangle'\n                        }\n                    },\n                    {\n                        x: 2.25,\n                        y: 20.5,\n                        color: 'red',\n                        marker: {\n                            enabled: true,\n                            symbol: 'triangle'\n                        }\n                    },\n                    {\n                        x: 7.75,\n                        y: 20.5,\n                        color: 'red',\n                        marker: {\n                            enabled: true,\n                            symbol: 'triangle'\n                        }\n                    },\n                    {\n                        x: 8.25,\n                        y: 20.5,\n                        color: 'red',\n                        marker: {\n                            enabled: true,\n                            symbol: 'triangle'\n                        }\n                    },\n                    {\n                        x: 13.75,\n                        y: 20.5,\n                        color: 'red',\n                        marker: {\n                            enabled: true,\n                            symbol: 'triangle'\n                        }\n                    },\n                    {\n                        x: 14.25,\n                        y: 20.5,\n                        color: 'red',\n                        marker: {\n                            enabled: true,\n                            symbol: 'triangle'\n                        }\n                    }\n                ],\n                visible: false\n            },\n            // 12\n            {\n                type: 'scatter',\n                color: 'blue',\n                data: [\n                    {\n                        x: 1.75,\n                        y: 13.5,\n                        marker: {\n                            enabled: true,\n                            symbol: 'triangle'\n                        }\n                    },\n                    {\n                        x: 2.25,\n                        y: 13.5,\n                        marker: {\n                            enabled: true,\n                            symbol: 'triangle'\n                        }\n                    },\n                    {\n                        x: 7.75,\n                        y: 13.5,\n                        marker: {\n                            enabled: true,\n                            symbol: 'triangle'\n                        }\n                    },\n                    {\n                        x: 8.25,\n                        y: 13.5,\n                        marker: {\n                            enabled: true,\n                            symbol: 'triangle'\n                        }\n                    },\n                    {\n                        x: 13.75,\n                        y: 13.5,\n                        marker: {\n                            enabled: true,\n                            symbol: 'triangle'\n                        }\n                    },\n                    {\n                        x: 14.25,\n                        y: 13.5,\n                        marker: {\n                            enabled: true,\n                            symbol: 'triangle'\n                        }\n                    }\n                ],\n                visible: false\n            },\n            // 13\n            {\n                type: 'scatter',\n                color: '#8085EF',\n                data: [\n                    {\n                        x: 1.75,\n                        y: 6.5,\n                        marker: {\n                            enabled: true,\n                            symbol: 'triangle'\n                        }\n                    },\n                    {\n                        x: 2.25,\n                        y: 6.5,\n                        marker: {\n                            enabled: true,\n                            symbol: 'triangle'\n                        }\n                    },\n                    {\n                        x: 7.75,\n                        y: 6.5,\n                        marker: {\n                            enabled: true,\n                            symbol: 'triangle'\n                        }\n                    },\n                    {\n                        x: 8.25,\n                        y: 6.5,\n                        marker: {\n                            enabled: true,\n                            symbol: 'triangle'\n                        }\n                    },\n                    {\n                        x: 13.75,\n                        y: 6.5,\n                        marker: {\n                            enabled: true,\n                            symbol: 'triangle'\n                        }\n                    },\n                    {\n                        x: 14.25,\n                        y: 6.5,\n                        marker: {\n                            enabled: true,\n                            symbol: 'triangle'\n                        }\n                    }\n                ],\n                visible: false\n            }\n        ]\n    });\n};\n\nlet wreathChart;\nconst wreath = function () {\n    wreathChart = Highcharts.chart('donut', {\n        chart: {\n            margin: 0,\n            backgroundColor: 'transparent',\n            events: {\n                load: function () {\n                    const chart = this;\n                    let count = 1;\n\n                    chart.series[1].update({\n                        color: '#a3edba'\n                    });\n\n                    if (!big) {\n                        chart.series[5].points[1].update({\n                            marker: {\n                                radius: 5,\n                                symbol: 'circle'\n                            }\n                        });\n                    }\n\n                    setInterval(function () {\n                        if (count === 1) {\n                            chart.series[3].hide();\n                            chart.series[4].show();\n                            count = 2;\n                        } else {\n                            chart.series[3].show();\n                            chart.series[4].hide();\n                            count = 1;\n                        }\n                    }, 400);\n                }\n            }\n        },\n        title: {\n            text: ''\n        },\n        credits: {\n            enabled: false\n        },\n        legend: {\n            enabled: false\n        },\n        xAxis: [{\n            min: 0,\n            max: 20\n        },\n        xAxis1,\n        xAxis2\n        ],\n        yAxis: [{\n            min: 0,\n            max: 20\n        },\n        yAxis1,\n        yAxis2],\n\n        series: [\n            // 0 left side\n            leftSide,\n            // 1 right side\n            rightSide,\n            // 2 - wreath\n            {\n                type: 'pie',\n                name: 'wreath',\n                animation: false,\n                data: [{\n                    y: 100,\n                    color: '#8087e8'\n                }\n                ],\n                dataLabels: {\n                    enabled: false,\n                    connectorColor: 'transparent'\n                },\n                innerSize: '40%',\n                size: '80%',\n                borderWidth: 0,\n                zIndex: 10,\n                visible: false\n\n            },\n            // 3 - item red\n            {\n                type: 'item',\n                name: 'red lights',\n                animation: false,\n                visible: false,\n                size: '80%',\n                startAngle: 100,\n                endAngle: 100,\n                innerSize: '30%',\n                borderWidth: 0,\n                center: ['52%', '52%'],\n                data: [{\n                    y: 60,\n                    color: '#e04b44'\n                }],\n                dataLabels: {\n                    enabled: false,\n                    connectorColor: 'transparent'\n                },\n                zIndex: 11\n\n            },\n            // 4 - item blue\n            {\n                type: 'item',\n                name: 'blue lights',\n                animation: false,\n                visible: false,\n                size: '80%',\n                center: ['52%', '52%'],\n                startAngle: 100,\n                endAngle: 100,\n                innerSize: '30%',\n                borderWidth: 0,\n                data: [{\n                    y: 30,\n                    color: 'blue'\n                }],\n                dataLabels: {\n                    enabled: false,\n                    connectorColor: 'transparent'\n                },\n                zIndex: 11\n\n            },\n            // 5 scatter bow\n            {\n                type: 'scatter',\n                name: 'decorative bow',\n                zIndex: 100,\n                visible: false,\n                lineWidth: 2,\n                lineColor: 'transparent',\n                color: '#FF4540',\n                data: [{\n                    x: 8,\n                    y: 15\n                },\n                {\n                    x: 10.5,\n                    y: 17,\n                    marker: {\n                        enabled: true,\n                        symbol: 'circle',\n                        radius: 10\n                    }\n                },\n                {\n                    x: 13,\n                    y: 15\n                }]\n            }\n        ],\n        responsive: {\n            rules: [{\n                condition: {\n                    maxWidth: 179\n                },\n                chartOptions: {\n                    plotOptions: {\n                        item: {\n                            marker: {\n                                enabled: true,\n                                radius: 3\n                            }\n                        },\n                        scatter: {\n                            marker: {\n                                enabled: true,\n                                symbol: 'triangle-down',\n                                radius: 10\n                            }\n                        }\n                    }\n                }\n            },\n            {\n                condition: {\n                    minWidth: 180\n                },\n                chartOptions: {\n                    plotOptions: {\n                        item: {\n                            marker: {\n                                enabled: true,\n                                radius: 5\n                            }\n                        },\n                        scatter: {\n                            marker: {\n                                enabled: true,\n                                symbol: 'triangle-down',\n                                radius: 20\n                            }\n                        }\n                    }\n                }\n            }]\n        }\n\n    });\n};\n\nconst flake = function () {\n    Highcharts.chart('flake-chart', {\n\n        chart: {\n            animation: {\n                duration: 5000\n            },\n            margin: 10,\n            backgroundColor: '#f0f0f0',\n            spacing: 0,\n            events: {\n                load: function () {\n                    const chart = this;\n                    const seriesGroup = document.querySelector('#flake-chart .highcharts-series-group');\n                    seriesGroup.style.transformOrigin = 'center';\n                    seriesGroup.style.transform = 'translateY(-200px)';\n\n                    const fall = function () {\n                        setTimeout(function () {\n                            seriesGroup.style.transition = 'all ease-out 3s';\n                            seriesGroup.style.transform = 'translateY(0px) rotate(720deg)';\n                        }, 200);\n\n                        setTimeout(function () {\n                            chart.update({\n                                plotOptions: {\n                                    line: {\n                                        dataLabels: {\n                                            enabled: true\n                                        }\n                                    }\n                                }\n                            });\n                        }, 3500);\n\n                        setTimeout(function () {\n                            chart.update({\n                                plotOptions: {\n                                    line: {\n                                        dataLabels: {\n                                            enabled: false\n                                        }\n                                    }\n                                }\n                            });\n                            seriesGroup.style.transform = 'translateY(300px) rotate(1180deg)';\n                        }, 5000);\n\n                        setTimeout(function () {\n                            seriesGroup.style.transition = 'none';\n                            seriesGroup.style.transform = 'translateY(-200px)';\n                        }, 7000);\n                    };\n\n                    const fallAgain =  function () {\n                        setInterval(function () {\n                            fall();\n                        }, 8000);\n                    };\n\n                    fall();\n                    fallAgain();\n                }\n            }\n        },\n        title: {\n            text: '',\n            y: 30\n        },\n        credits: {\n            enabled: false\n        },\n        legend: {\n            enabled: false\n        },\n        tooltip: {\n            enabled: true\n        },\n        plotOptions: {\n            line: {\n                color: '#8bd6f3',\n                className: 'flake',\n                animation: false,\n                lineWidth: 10,\n                linecap: 'square',\n                marker: {\n                    enabled: true,\n                    fillColor: '#fff'\n                },\n                dataLabels: {\n                    enabled: false,\n                    useHTML: true,\n                    formatter: function () {\n                        const fontSize =  randomIntFromInterval(10, 20) + 'px';\n                        const labelString = `\n                            <p style='font-weight:300;color:#30426B;\n                            font-size: ${fontSize}'>${this.point.y}\n                            </p>\n                        `;\n                        return labelString;\n                    },\n                    style: {\n                        color: '#fff',\n                        textOutline: 'none',\n                        fontSize: randomIntFromInterval(10, 30) + 'px'\n                    }\n                }\n            },\n            series: {\n                name: 'Snow!',\n                states: {\n                    hover: {\n                        enabled: false\n                    },\n                    inactive: {\n                        enabled: false\n                    }\n                }\n            }\n        },\n        xAxis: [\n        // 0\n            {\n                min: -1,\n                max: 20,\n                visible: false\n            },\n            xAxis1,\n            xAxis2,\n            // 3\n            {\n                min: 0,\n                max: 21,\n                reversed: true,\n                visible: false\n            }],\n        yAxis: [\n        // 0\n            {\n                min: 0,\n                max: 20,\n                visible: true,\n                gridLineColor: '#ccc',\n                tickInterval: 2\n            },\n            yAxis1,\n            yAxis2,\n            // 3\n            {\n                min: 0,\n                max: 20,\n                reversed: true,\n                visible: false\n            }],\n        series: [\n            // 2\n            {\n                type: 'line',\n                data: [{\n                    x: -1,\n                    y: 10\n                },\n                {\n                    x: 20,\n                    y: 10.22\n                }]\n\n            },\n            // 3 vertical\n            {\n                type: 'line',\n                xAxis: 3,\n                zIndex: 20,\n                data: [{\n                    x: 5.8,\n                    y: 0.77\n                },\n                {\n                    x: 15.4,\n                    y: 19.6\n                }\n                ]\n            },\n            // 4\n            {\n                type: 'line',\n                zIndex: 2,\n                data: [\n                    {\n                        x: 4.066,\n                        y: 0\n                    },\n                    {\n                        x: 14.73,\n                        y: 20\n                    }\n                ]\n            },\n            // smaller sections\n            // 5 -- left\n            {\n                type: 'line',\n                visible: true,\n                data: [\n                    {\n                        x: 0.76,\n                        y: 14\n                    },\n                    {\n                        x: 4.66,\n                        y: 9.88\n                    }\n                ]\n            },\n            // 6\n            {\n                type: 'line',\n                visible: true,\n                data: [\n                    {\n                        x: 2.16,\n                        y: 15.88\n                    },\n                    {\n                        x: 7.34,\n                        y: 14.32\n                    },\n                    {\n                        x: 8.69,\n                        y: 19.65\n                    }\n                ]\n            },\n            // 7\n            {\n                type: 'line',\n                visible: true,\n                data: [\n                    {\n                        x: 10.96,\n                        y: 19.87\n                    },\n                    {\n                        x: 11.73,\n                        y: 14.63\n                    },\n                    {\n                        x: 16.97,\n                        y: 15.65\n                    }\n                ]\n            },\n            // 8\n            {\n                type: 'line',\n                visible: true,\n                data: [\n                    {\n                        x: 0.87,\n                        y: 6.22\n                    },\n                    {\n                        x: 4.66,\n                        y: 9.88\n                    },\n                    {\n                        x: 14.76,\n                        y: 10.55\n                    },\n                    {\n                        x: 18.07,\n                        y: 14.1\n                    }\n                ]\n            },\n            // 9 - right\n            {\n                type: 'line',\n                data: [\n                    {\n                        x: 0.87,\n                        y: 6.22\n                    },\n                    {\n                        x: 3.84,\n                        y: 9.433\n                    },\n                    {\n                        x: 14.68,\n                        y: 10.55\n                    },\n                    {\n                        x: 18.18,\n                        y: 6.42\n                    }\n                ]\n            },\n            // 10\n            {\n                type: 'line',\n                visible: true,\n                data: [\n                    {\n                        x: 10,\n                        y: 0.38\n                    },\n                    {\n                        x: 11.63,\n                        y: 5.76\n                    },\n                    {\n                        x: 16.43,\n                        y: 4.544\n                    }\n                ]\n            },\n            // 11\n            {\n                type: 'line',\n                visible: true,\n                data: [\n                    {\n                        x: 2,\n                        y: 4.49\n                    },\n                    {\n                        x: 6.7,\n                        y: 5.53\n                    },\n                    {\n                        x: 8.14,\n                        y: 0.43\n                    }\n                ]\n            }\n        ]\n\n    });\n};\n\nlet ballChart;\nconst ball = function () {\n    const data = [\n        {\n            name: 'United States of America',\n            value: 1477\n        },\n        {\n            name: 'Brazil',\n            value: 490\n        },\n        {\n            name: 'Mexico',\n            value: 882\n        },\n        {\n            name: 'Canada',\n            value: 161\n        },\n        {\n            name: 'Russia',\n            value: 74\n        },\n        {\n            name: 'Argentina',\n            value: 416\n        },\n        {\n            name: 'Bolivia',\n            value: 789\n        },\n        {\n            name: 'Colombia',\n            value: 805\n        },\n        {\n            name: 'Paraguay',\n            value: 2011\n        },\n        {\n            name: 'Indonesia',\n            value: 372\n        },\n        {\n            name: 'South Africa',\n            value: 466\n        },\n        {\n            name: 'Papua New Guinea',\n            value: 1239\n        },\n        {\n            name: 'Germany',\n            value: 1546\n        },\n        {\n            name: 'China',\n            value: 54\n        },\n        {\n            name: 'Chile',\n            value: 647\n        },\n        {\n            name: 'Australia',\n            value: 62\n        },\n        {\n            name: 'France',\n            value: 844\n        },\n        {\n            name: 'United Kingdom',\n            value: 1901\n        },\n        {\n            name: 'Venezuela',\n            value: 503\n        },\n        {\n            name: 'Ecuador',\n            value: 1560\n        },\n        {\n            name: 'India',\n            value: 116\n        },\n        {\n            name: 'Iran',\n            value: 208\n        },\n        {\n            name: 'Guatemala',\n            value: 2716\n        },\n        {\n            name: 'Philippines',\n            value: 828\n        },\n        {\n            name: 'Sweden',\n            value: 563\n        },\n        {\n            name: 'Saudi Arabia',\n            value: 100\n        },\n        {\n            name: 'Democratic Republic of the Congo',\n            value: 87\n        },\n        {\n            name: 'Kenya',\n            value: 346\n        },\n        {\n            name: 'Zimbabwe',\n            value: 507\n        },\n        {\n            name: 'Peru',\n            value: 149\n        },\n        {\n            name: 'Ukraine',\n            value: 323\n        },\n        {\n            name: 'Angola',\n            value: 141\n        },\n        {\n            name: 'Japan',\n            value: 480\n        },\n        {\n            name: 'United Republic of Tanzania',\n            value: 187\n        },\n        {\n            name: 'Costa Rica',\n            value: 3153\n        },\n        {\n            name: 'Algeria',\n            value: 66\n        },\n        {\n            name: 'Pakistan',\n            value: 196\n        },\n        {\n            name: 'Spain',\n            value: 301\n        },\n        {\n            name: 'Finland',\n            value: 487\n        },\n        {\n            name: 'Nicaragua',\n            value: 1225\n        },\n        {\n            name: 'Libya',\n            value: 83\n        },\n        {\n            name: 'Cuba',\n            value: 1211\n        },\n        {\n            name: 'Uruguay',\n            value: 760\n        },\n        {\n            name: 'Oman',\n            value: 426\n        },\n        {\n            name: 'Italy',\n            value: 439\n        },\n        {\n            name: 'Czech Republic',\n            value: 1657\n        },\n        {\n            name: 'Poland',\n            value: 414\n        },\n        {\n            name: 'New Zealand',\n            value: 465\n        },\n        {\n            name: 'Guyana',\n            value: 594\n        },\n        {\n            name: 'Panama',\n            value: 1574\n        },\n        {\n            name: 'Malaysia',\n            value: 347\n        },\n        {\n            name: 'Namibia',\n            value: 136\n        },\n        {\n            name: 'South Korea',\n            value: 1145\n        },\n        {\n            name: 'Honduras',\n            value: 921\n        },\n        {\n            name: 'Iraq',\n            value: 233\n        },\n        {\n            name: 'Thailand',\n            value: 198\n        },\n        {\n            name: 'Mozambique',\n            value: 125\n        },\n        {\n            name: 'Turkey',\n            value: 127\n        },\n        {\n            name: 'Iceland',\n            value: 958\n        },\n        {\n            name: 'Kazakhstan',\n            value: 36\n        },\n        {\n            name: 'Norway',\n            value: 312\n        },\n        {\n            name: 'Syria',\n            value: 484\n        },\n        {\n            name: 'Zambia',\n            value: 118\n        },\n        {\n            name: 'South Sudan',\n            value: 132\n        },\n        {\n            name: 'Egypt',\n            value: 83\n        },\n        {\n            name: 'Madagascar',\n            value: 143\n        },\n        {\n            name: 'North Korea',\n            value: 681\n        },\n        {\n            name: 'Denmark',\n            value: 1885\n        },\n        {\n            name: 'Greece',\n            value: 589\n        },\n        {\n            name: 'Botswana',\n            value: 131\n        },\n        {\n            name: 'Sudan',\n            value: 43\n        },\n        {\n            name: 'Croatia',\n            value: 1233\n        },\n        {\n            name: 'Bulgaria',\n            value: 627\n        },\n        {\n            name: 'El Salvador',\n            value: 3282\n        },\n        {\n            name: 'Belarus',\n            value: 320\n        },\n        {\n            name: 'Myanmar',\n            value: 98\n        },\n        {\n            name: 'Portugal',\n            value: 700\n        },\n        {\n            name: 'Switzerland',\n            value: 1575\n        },\n        {\n            name: 'The Bahamas',\n            value: 6094\n        },\n        {\n            name: 'Lithuania',\n            value: 973\n        },\n        {\n            name: 'Somalia',\n            value: 97\n        },\n        {\n            name: 'Chad',\n            value: 47\n        },\n        {\n            name: 'Ethiopia',\n            value: 52\n        },\n        {\n            name: 'Yemen',\n            value: 108\n        },\n        {\n            name: 'Morocco',\n            value: 123\n        },\n        {\n            name: 'Suriname',\n            value: 353\n        },\n        {\n            name: 'French Polynesia',\n            value: 14110\n        },\n        {\n            name: 'Nigeria',\n            value: 59\n        },\n        {\n            name: 'Uzbekistan',\n            value: 125\n        },\n        {\n            name: 'Afghanistan',\n            value: 80\n        },\n        {\n            name: 'Austria',\n            value: 631\n        },\n        {\n            name: 'Belize',\n            value: 2061\n        },\n        {\n            name: 'Israel',\n            value: 2186\n        },\n        {\n            name: 'Nepal',\n            value: 328\n        },\n        {\n            name: 'Uganda',\n            value: 238\n        },\n        {\n            name: 'Romania',\n            value: 196\n        },\n        {\n            name: 'Vietnam',\n            value: 145\n        },\n        {\n            name: 'Gabon',\n            value: 171\n        },\n        {\n            name: 'Mongolia',\n            value: 28\n        },\n        {\n            name: 'United Arab Emirates',\n            value: 514\n        },\n        {\n            name: 'Latvia',\n            value: 675\n        },\n        {\n            name: 'Belgium',\n            value: 1354\n        },\n        {\n            name: 'Hungary',\n            value: 458\n        },\n        {\n            name: 'Laos',\n            value: 178\n        },\n        {\n            name: 'Ireland',\n            value: 581\n        },\n        {\n            name: 'Central African Republic',\n            value: 63\n        },\n        {\n            name: 'Azerbaijan',\n            value: 448\n        },\n        {\n            name: 'Taiwan',\n            value: 1147\n        },\n        {\n            name: 'Dominican Republic',\n            value: 745\n        },\n        {\n            name: 'Solomon Islands',\n            value: 1286\n        },\n        {\n            name: 'Slovakia',\n            value: 728\n        },\n        {\n            name: 'Cameroon',\n            value: 70\n        },\n        {\n            name: 'Malawi',\n            value: 340\n        },\n        {\n            name: 'Vanuatu',\n            value: 2543\n        },\n        {\n            name: 'Mauritania',\n            value: 29\n        },\n        {\n            name: 'Niger',\n            value: 24\n        },\n        {\n            name: 'Liberia',\n            value: 301\n        },\n        {\n            name: 'Netherlands',\n            value: 856\n        },\n        {\n            name: 'Puerto Rico',\n            value: 3237\n        },\n        {\n            name: 'Tunisia',\n            value: 187\n        },\n        {\n            name: 'Fiji',\n            value: 1532\n        },\n        {\n            name: 'Jamaica',\n            value: 2585\n        },\n        {\n            name: 'Kyrgyzstan',\n            value: 146\n        },\n        {\n            name: 'Republic of the Congo',\n            value: 79\n        },\n        {\n            name: 'Ivory Coast',\n            value: 85\n        },\n        {\n            name: 'Republic of Serbia',\n            value: 336\n        },\n        {\n            name: 'Turkmenistan',\n            value: 55\n        },\n        {\n            name: 'Mali',\n            value: 20\n        },\n        {\n            name: 'New Caledonia',\n            value: 1368\n        },\n        {\n            name: 'Bosnia and Herzegovina',\n            value: 469\n        },\n        {\n            name: 'Lesotho',\n            value: 791\n        },\n        {\n            name: 'Tajikistan',\n            value: 170\n        },\n        {\n            name: 'Antarctica',\n            value: 2\n        },\n        {\n            name: 'Burkina Faso',\n            value: 84\n        },\n        {\n            name: 'Georgia',\n            value: 316\n        },\n        {\n            name: 'Senegal',\n            value: 104\n        },\n        {\n            name: 'Kiribati',\n            value: 23428\n        },\n        {\n            name: 'Sri Lanka',\n            value: 294\n        },\n        {\n            name: 'Bangladesh',\n            value: 138\n        },\n        {\n            name: 'Estonia',\n            value: 425\n        },\n        {\n            name: 'Jordan',\n            value: 203\n        },\n        {\n            name: 'Cambodia',\n            value: 91\n        },\n        {\n            name: 'Guinea',\n            value: 65\n        },\n        {\n            name: 'Slovenia',\n            value: 794\n        },\n        {\n            name: 'Northern Cyprus',\n            value: 1623\n        },\n        {\n            name: 'Greenland',\n            value: 7\n        },\n        {\n            name: 'Marshall Islands',\n            value: 82873\n        },\n        {\n            name: 'Swaziland',\n            value: 814\n        },\n        {\n            name: 'Haiti',\n            value: 508\n        },\n        {\n            name: 'Seychelles',\n            value: 30769\n        },\n        {\n            name: 'Djibouti',\n            value: 561\n        },\n        {\n            name: 'Eritrea',\n            value: 129\n        },\n        {\n            name: 'Armenia',\n            value: 390\n        },\n        {\n            name: 'Cook Islands',\n            value: 46610\n        },\n        {\n            name: 'Ghana',\n            value: 44\n        },\n        {\n            name: 'Macedonia',\n            value: 393\n        },\n        {\n            name: 'Cape Verde',\n            value: 2232\n        },\n        {\n            name: 'Maldives',\n            value: 30201\n        },\n        {\n            name: 'Singapore',\n            value: 12690\n        },\n        {\n            name: 'Guinea Bissau',\n            value: 284\n        },\n        {\n            name: 'Lebanon',\n            value: 782\n        },\n        {\n            name: 'Sierra Leone',\n            value: 112\n        },\n        {\n            name: 'Togo',\n            value: 147\n        },\n        {\n            name: 'Turks and Caicos Islands',\n            value: 8439\n        },\n        {\n            name: 'Burundi',\n            value: 273\n        },\n        {\n            name: 'Equatorial Guinea',\n            value: 250\n        },\n        {\n            name: 'Falkland Islands',\n            value: 575\n        },\n        {\n            name: 'Kuwait',\n            value: 393\n        },\n        {\n            name: 'Moldova',\n            value: 213\n        },\n        {\n            name: 'Rwanda',\n            value: 284\n        },\n        {\n            name: 'Benin',\n            value: 54\n        },\n        {\n            name: 'East Timor',\n            value: 403\n        },\n        {\n            name: 'Kosovo',\n            value: 551\n        },\n        {\n            name: 'Micronesia',\n            value: 8547\n        },\n        {\n            name: 'Qatar',\n            value: 518\n        },\n        {\n            name: 'Saint Vincent and the Grenadines',\n            value: 15424\n        },\n        {\n            name: 'Tonga',\n            value: 8368\n        },\n        {\n            name: 'Western Sahara',\n            value: 23\n        },\n        {\n            name: 'Guam',\n            value: 9191\n        },\n        {\n            name: 'Mauritius',\n            value: 2463\n        },\n        {\n            name: 'Montenegro',\n            value: 372\n        },\n        {\n            name: 'Northern Mariana Islands',\n            value: 10776\n        },\n        {\n            name: 'Albania',\n            value: 146\n        },\n        {\n            name: 'Bahrain',\n            value: 5263\n        },\n        {\n            name: 'British Virgin Islands',\n            value: 26490\n        },\n        {\n            name: 'Comoros',\n            value: 1790\n        },\n        {\n            name: 'French Southern and Antarctic Lands',\n            value: 522\n        },\n        {\n            name: 'Samoa',\n            value: 1418\n        },\n        {\n            name: 'Spratly Islands',\n            value: 800000\n        },\n        {\n            name: 'Svalbard',\n            value: 64\n        },\n        {\n            name: 'Trinidad and Tobago',\n            value: 780\n        },\n        {\n            name: 'American Samoa',\n            value: 13393\n        },\n        {\n            name: 'Antigua and Barbuda',\n            value: 6778\n        },\n        {\n            name: 'Cayman Islands',\n            value: 11364\n        },\n        {\n            name: 'Grenada',\n            value: 8721\n        },\n        {\n            name: 'Palau',\n            value: 6536\n        },\n        {\n            name: 'Palestinian Territories',\n            value: 500\n        },\n        {\n            name: 'Anguilla',\n            value: 21978\n        },\n        {\n            name: 'Bhutan',\n            value: 52\n        },\n        {\n            name: 'Dominica',\n            value: 2663\n        },\n        {\n            name: 'Guernsey',\n            value: 25608\n        },\n        {\n            name: 'Hong Kong',\n            value: 1864\n        },\n        {\n            name: 'Luxembourg',\n            value: 773\n        },\n        {\n            name: 'Saint Kitts and Nevis',\n            value: 7663\n        },\n        {\n            name: 'Saint Lucia',\n            value: 3300\n        },\n        {\n            name: 'Saint Pierre and Miquelon',\n            value: 8264\n        },\n        {\n            name: 'São Tomé and Príncipe',\n            value: 2075\n        },\n        {\n            name: 'Virgin Islands of the U.S.',\n            value: 5780\n        },\n        {\n            name: 'Wallis and Futuna',\n            value: 14085\n        },\n        {\n            name: 'Aruba',\n            value: 5556\n        },\n        {\n            name: 'Barbados',\n            value: 2326\n        },\n        {\n            name: 'Bermuda',\n            value: 18657\n        },\n        {\n            name: 'British Indian Ocean Territory',\n            value: 16667\n        },\n        {\n            name: 'Brunei',\n            value: 190\n        },\n        {\n            name: 'Faroe Islands',\n            value: 718\n        },\n        {\n            name: 'Gambia',\n            value: 99\n        },\n        {\n            name: 'Gibraltar',\n            value: 153846\n        },\n        {\n            name: 'Jan Mayen',\n            value: 2653\n        },\n        {\n            name: 'Jersey',\n            value: 8621\n        },\n        {\n            name: 'Macau',\n            value: 35461\n        },\n        {\n            name: 'Malta',\n            value: 3165\n        },\n        {\n            name: 'Isle of Man',\n            value: 1748\n        },\n        {\n            name: 'Montserrat',\n            value: 9804\n        },\n        {\n            name: 'Nauru',\n            value: 47170\n        },\n        {\n            name: 'Niue',\n            value: 3846\n        },\n        {\n            name: 'Paracel Islands',\n            value: 129032\n        },\n        {\n            name: 'Saint Barthelemy',\n            value: 40000\n        },\n        {\n            name: 'Saint Helena, Ascension and Tristan da Cunha',\n            value: 2538\n        },\n        {\n            name: 'Saint Martin',\n            value: 18382\n        },\n        {\n            name: 'Sint Maarten',\n            value: 29412\n        },\n        {\n            name: 'Tuvalu',\n            value: 39063\n        },\n        {\n            name: 'Wake Island',\n            value: 153846\n        }\n    ];\n    let chart;\n    const getGraticule = () => {\n        const data = [];\n\n        // Meridians\n        for (let x = -180; x <= 180; x += 15) {\n            data.push({\n                geometry: {\n                    type: 'LineString',\n                    coordinates: x % 90 === 0 ? [\n                        [x, -90],\n                        [x, 0],\n                        [x, 90]\n                    ] : [\n                        [x, -80],\n                        [x, 80]\n                    ]\n                },\n                color: '#fff',\n                lineWidth: 0\n            });\n        }\n\n        // Latitudes\n        for (let y = -90; y <= 90; y += 10) {\n            const coordinates = [];\n            for (let x = -180; x <= 180; x += 5) {\n                coordinates.push([x, y]);\n            }\n            data.push({\n                geometry: {\n                    type: 'Polygon',\n                    coordinates\n                },\n                lineWidth: y === 1 ? 0 : undefined\n            });\n        }\n\n        return data;\n    };\n\n    const starData = [];\n    const getStarData = function () {\n        for (let ii = 0; ii <= 40; ++ii) {\n            const newX = randomIntFromInterval(0, 10.5);\n            const newY = randomIntFromInterval(5, 8);\n            starData.push([newX, newY]);\n        }\n\n    };\n    getStarData();\n\n    Highcharts.getJSON(\n        'https://cdn.jsdelivr.net/gh/highcharts/highcharts/samples/data/world-countries.topo.json',\n        topology => {\n\n            // Convert the topoJSON feature into geoJSON\n            const geojson = window.topojson.feature(\n                topology,\n                // For this demo, get the first of the named objects\n                topology.objects[Object.keys(topology.objects)[0]]\n            );\n            geojson.copyrightUrl = topology.copyrightUrl;\n            geojson.copyrightShort = topology.copyrightShort;\n\n            chart = Highcharts.mapChart('ball-chart', {\n                chart: {\n                    map: geojson,\n                    animation: {\n                        enabled: false\n                    },\n                    margin: 0,\n                    backgroundColor: 'url(#bg-gradient)',\n                    events: {\n                        load: function () {\n                            const chart = this;\n                            let count = 0;\n\n                            if (!big) {\n                                chart.update({\n                                    plotOptions: {\n                                        pie: {\n                                            center: [70, 155]\n\n                                        }\n                                    }\n                                });\n                            }\n\n                            // spin\n                            setTimeout(function () {\n                                setInterval(function () {\n                                    chart.update({\n                                        mapView: {\n                                            projection: {\n                                                name: 'Orthographic',\n                                                rotation: [count % 360, -30]\n                                            }\n                                        }\n                                    }, true, false, false);\n                                    count = count + 1;\n                                }, 50);\n                            }, 1500);\n\n\n                            let noseCount = 0;\n                            // nose\n                            setInterval(function () {\n                                if (noseCount === 0) {\n                                    chart.series[2].points[0].setState('hover');\n                                    noseCount = 1;\n                                } else {\n                                    chart.series[2].points[0].setState('normal');\n                                    noseCount = 0;\n                                }\n                            }, 1000);\n\n                        }\n\n                    }\n                },\n\n                title: {\n                    text: ''\n                },\n                legend: {\n                    enabled: false\n                },\n\n                xAxis: [\n                // 0\n                    {\n                        min: 0,\n                        max: 20,\n                        labels: {\n                            style: {\n                                color: '#fff'\n                            }\n                        },\n                        visible: false\n                    },\n                    xAxis1,\n                    xAxis2,\n                    // 3\n                    {\n                        visible: false\n                    }\n                ],\n                yAxis: [\n                    // 0\n                    {\n                        min: 0,\n                        max: 20,\n                        labels: {\n                            style: {\n                                color: '#fff'\n                            }\n                        },\n                        visible: false\n                    },\n                    yAxis1,\n                    yAxis2,\n                    // 3\n                    {\n                        visible: false\n                    }],\n\n                mapNavigation: {\n                    enabled: false,\n                    enableDoubleClickZoomTo: true,\n                    buttonOptions: {\n                        verticalAlign: 'bottom'\n                    }\n                },\n                credits: {\n                    enabled: false\n                },\n                mapView: {\n                    maxZoom: 30,\n                    zoom: 1.9,\n                    projection: {\n                        name: 'Orthographic',\n                        rotation: [0, -30]\n                    }\n                },\n\n                tooltip: {\n                    enabled: true,\n                    pointFormat: '{point.y} | {point.x}'\n                },\n\n                plotOptions: {\n                    series: {\n                        animation: false,\n                        clip: false,\n                        point: {\n                            events: {\n                                mouseOver: function () {\n                                    chart.series[3].points[0].setState('hover');\n                                },\n                                mouseOut: function () {\n                                    chart.series[3].points[0].setState('hover');\n                                }\n\n                            }\n                        }\n                    },\n                    pie: {\n                        center: [130, 185],\n                        size: '6%'\n                    },\n                    bubble: {\n                        minSize: 1,\n                        maxSize: 3,\n                        marker: {\n                            lineWidth: 0\n                        },\n                        lineWidth: 0\n                    }\n\n                },\n                series: [\n                    // 0\n                    {\n                        name: 'Graticule',\n                        id: 'graticule',\n                        type: 'mapline',\n                        color: '#fff',\n                        lineWidth: 1,\n                        data: getGraticule(),\n                        nullColor: 'rgba(0, 0, 0, 0.05)'\n                    },\n                    // 1\n                    {\n                        data,\n                        joinBy: 'name',\n                        color: '#78758C',\n                        opacity: 1,\n                        name: 'Earth',\n                        dataLabels: {\n                            enabled: false,\n                            format: '{point.name}'\n                        }\n                    },\n                    // 2 -- sled (scatter)\n                    {\n                        type: 'scatter',\n                        name: 'Santa & Rudolph',\n                        animation: false,\n                        data: [{\n                            x: 14,\n                            y: 8,\n                            color: '#FF4540',\n                            states: {\n                                hover: {\n                                    halo: {\n                                        attributes: {\n                                            fill: 'orange'\n                                        },\n                                        opacity: 1\n                                    }\n                                }\n                            },\n                            marker: {\n                                radius: 3\n                            },\n                            dataLabels: {\n                                enabled: true,\n                                useHTML: true,\n                                formatter: function () {\n                                    return '<div id=\"sled\"></div>';\n                                }\n                            }\n                        }]\n                    },\n                    // 3 -- moon (pie)\n                    {\n                        type: 'pie',\n                        name: 'The Moon',\n                        animation: false,\n                        visible: true,\n                        dataLabels: {\n                            enabled: false\n                        },\n                        states: {\n                            normal: {\n                                enabled: false\n                            },\n                            hover: {\n                                halo: {\n                                    size: 5\n                                }\n                            }\n                        },\n                        data: [\n                            {\n                                y: 100,\n                                color: '#FFFAF0'\n                            }\n                        ]\n\n                    },\n                    // 4 --stars\n                    {\n                        type: 'bubble',\n                        name: 'stars',\n                        xAxis: 3,\n                        yAxis: 3,\n                        color: '#fff',\n                        data: [[9, 81, 63],\n                            [98, 5, 89],\n                            [51, 50, 73],\n                            [41, 22, 14],\n                            [58, 24, 20],\n                            [78, 37, 34],\n                            [55, 56, 53],\n                            [18, 45, 70],\n                            [42, 44, 28],\n                            [3, 52, 59],\n                            [31, 18, 97],\n                            [79, 91, 63],\n                            [93, 23, 23],\n                            [44, 83, 22]\n                        ]\n                    },\n                    // 5 --stars\n                    {\n                        type: 'bubble',\n                        color: '#fff',\n                        name: 'stars',\n                        xAxis: 3,\n                        yAxis: 3,\n                        data: [\n                            [42, 38, 20],\n                            [6, 18, 1],\n                            [1, 93, 55],\n                            [57, 2, 90],\n                            [80, 76, 22],\n                            [11, 74, 96],\n                            [88, 56, 10],\n                            [30, 47, 49],\n                            [57, 62, 98],\n                            [4, 16, 16],\n                            [46, 10, 11],\n                            [22, 87, 89],\n                            [57, 91, 82],\n                            [45, 15, 98]\n                        ]\n                    }]\n            });\n\n            ballChart = chart;\n\n            // Render a circle filled with a radial gradient behind the globe to\n            // make it appear as the sea around the continents\n            const renderSea = () => {\n                let verb = 'animate';\n                if (!chart.sea) {\n                    chart.sea = chart.renderer\n                        .circle()\n                        .attr({\n                            fill: {\n                                radialGradient: {\n                                    cx: 0.4,\n                                    cy: 0.4,\n                                    r: 1\n                                },\n                                stops: [\n                                    [0, 'lightblue'],\n                                    [1, '#30416B']\n                                ]\n                            },\n                            zIndex: -1\n                        })\n                        .add(chart.get('graticule').group);\n                    verb = 'attr';\n                }\n\n                const bounds = chart.get('graticule').bounds,\n                    p1 = chart.mapView.projectedUnitsToPixels({\n                        x: bounds.x1,\n                        y: bounds.y1\n                    }),\n                    p2 = chart.mapView.projectedUnitsToPixels({\n                        x: bounds.x2,\n                        y: bounds.y2\n                    });\n                chart.sea[verb]({\n                    cx: (p1.x + p2.x) / 2,\n                    cy: (p1.y + p2.y) / 2,\n                    r: Math.min(p2.x - p1.x, p1.y - p2.y) / 2\n                });\n            };\n            renderSea();\n            Highcharts.addEvent(chart, 'redraw', renderSea);\n        }\n    );\n\n};\n\nsnowglobe();\ntree();\nbell();\nflake();\npresents();\nwreath();\ncandycane();\nball();\nwords();\n\ndocument.getElementById('open').addEventListener('click',\n    function () {\n\n        [].forEach.call(\n            document.querySelectorAll('.box'),\n            function (elem, index) {\n                if (index !== 4) {\n                    elem.style.visibility = 'hidden';\n                } else {\n                    let boxTop = '260px';\n                    if (!big) {\n                        boxTop = '120px';\n                    }\n                    elem.style.top = boxTop;\n                    elem.style.width = '180px';\n                    elem.style.height = '100px';\n\n                }\n            }\n        );\n\n        this.style.display = 'none';\n        document.getElementById('center-message').style.opacity = 0;\n        document.getElementById('back').style.opacity = 1;\n\n        flip(wordChart, 1, 'left', 0);\n        flip(snowglobeChart, 2, 'center', 0);\n        flip(bellChart, 4, 'left', 100);\n        flip(candycaneChart, 6, 'right', 300);\n        flip(presentsChart, 3, 'right', 300);\n        flip(wreathChart, 9, 'right', 300);\n\n        let sledY = 15;\n        if (!big) {\n            sledY = 12;\n        }\n\n        ballChart.series[2].points[0].update({\n            x: 14,\n            y: sledY\n        });\n\n        let moonCenter = [130, 5];\n\n        if (!big) {\n            moonCenter = [70, 5];\n        }\n\n        ballChart.update({\n            plotOptions: {\n                pie: {\n                    center: moonCenter\n\n                }\n            }\n        }, true);\n\n        setTimeout(function () {\n            ballChart.series[3].points[0].setState('hover');\n        }, 500);\n\n    }\n);\n","css":"/* @import \"https://code.highcharts.com/css/highcharts.css\"; */\n\nbody {\n    margin: 0;\n    background: linear-gradient(180deg, #201836 0%, #46465c 100%) no-repeat;\n    background-color: #46465c;\n    font-family: \"IBM Plex Sans\", Arial, Helvetica, sans-serif !important;\n}\n\n#item .ring0 .highcharts-point {\n    transform-origin: center;\n}\n\n.btn {\n    display: inline-block;\n    font-weight: 400;\n    line-height: 1.5;\n    color: #212529;\n    text-align: center;\n    text-decoration: none;\n    vertical-align: middle;\n    cursor: pointer;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n    background-color: transparent;\n    border: 1px solid transparent;\n    border-top-color: transparent;\n    border-right-color: transparent;\n    border-bottom-color: transparent;\n    border-left-color: transparent;\n    padding: 0.375rem 0.75rem;\n    font-size: 1rem;\n    border-radius: 0.25rem;\n    transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out;\n}\n\n.btn-primary {\n    color: #fff;\n    background-color: #5b46b3;\n    border-color: #5b46b3;\n}\n\n.chart-container {\n    width: 110px;\n    height: 110px;\n    font-family: \"IBM Plex Sans\", Arial, Helvetica, sans-serif;\n}\n\n#message {\n    position: relative;\n    width: 330px;\n}\n\n#sled {\n    position: absolute;\n    top: -6px;\n    left: -70px;\n    width: 68px;\n    height: 25px;\n    background-size: contain;\n    background-image: url(https://cdn.rawgit.com/highcharts/highcharts/8cf76e1945c27e3c187f0273ca670949ce3d1e52/samples/graphics/xmas-card-2021/deer.png);\n}\n\n.button-container {\n    text-align: center;\n    width: 100%;\n    margin-left: auto;\n    position: absolute;\n    top: 250px;\n    z-index: 1000;\n}\n\n#center-message {\n    text-align: center;\n    white-space: normal;\n    position: absolute;\n    width: 110px;\n    font-size: 14px;\n    line-height: 18px;\n    font-weight: 600;\n    margin-top: 5px;\n    letter-spacing: 0;\n}\n\n#charts {\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    width: 330px;\n    background-color: #00786f;\n}\n\n#ball-chart {\n    clip-path: inset(-0.56% 0% 0.22% -1.11% round 10px);\n}\n\n#ball-chart .highcharts-series-0,\n#ball-chart .highcharts-series-1 {\n    transform: translate(30px, 160px);\n}\n\n#presents-chart .highcharts-series-2,\n#presents-chart .highcharts-series-3,\n#presents-chart .highcharts-series-4,\n#presents-chart .highcharts-series-5,\n#presents-chart .highcharts-series-6,\n#presents-chart .highcharts-series-7,\n#presents-chart .highcharts-series-8,\n#presents-chart .highcharts-series-9,\n#presents-chart .highcharts-series-10,\n#presents-chart .highcharts-series-11,\n#presents-chart .highcharts-series-12,\n#presents-chart .highcharts-series-13 {\n    transform: translateY(-20px);\n}\n\n.box {\n    opacity: 100%;\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 330px;\n    height: 110px;\n    z-index: 100;\n}\n\n.box.row2 {\n    top: 110px;\n    width: 110px;\n    height: 110px;\n    left: 0;\n}\n\n.box.row3 {\n    top: 220px;\n    width: 110px;\n    height: 110px;\n    left: 0;\n}\n\n.box.row2.center,\n.box.row3.center {\n    left: 110px;\n}\n\n.box.row2.right,\n.box.row3.right {\n    left: 220px;\n}\n\n.box p {\n    position: absolute;\n    width: 100%;\n    text-align: center;\n    font-size: 40px;\n    font-family: \"IBM Plex Sans\", sans-serif;\n    font-weight: 700;\n    margin-top: 30px;\n}\n\n.box-left,\n.box-center,\n.box-right {\n    display: flex;\n}\n\n.box-left .inner,\n.box-center .inner,\n.box-right .inner {\n    width: 45px;\n    height: 110px;\n    line-height: 110px;\n    font-size: 2.3em;\n    letter-spacing: 1px;\n    font-weight: bold;\n    white-space: nowrap;\n    overflow: hidden;\n}\n\n.box-left .inner:last-child,\n.box-center .inner:last-child,\n.box-right .inner:last-child {\n    background-color: #00786f;\n    color: #f0f0f0;\n    transform-origin: left;\n    transform: perspective(360px) rotateY(0deg);\n    margin-left: 0;\n    height: 110px;\n    width: 320px;\n    overflow: hidden;\n}\n\n#box5 p {\n    color: #fff;\n}\n\n.box-center.row2 .inner:last-child {\n    background-color: transparent;\n    margin-left: 0;\n}\n\n.box-center.row3 .inner:last-child {\n    margin-left: 0;\n}\n\n.box-center .inner:last-child {\n    margin-left: 110px;\n}\n\n.box-right .inner:last-child {\n    margin-left: 232px;\n}\n\n.box-right.row2 .inner:last-child,\n.box-right.row3 .inner:last-child {\n    margin-left: 0;\n}\n\n.box-left.turn .inner:last-child,\n.box-center.turn .inner:last-child,\n.box-right.turn .inner:last-child {\n    transform: perspective(120px) rotateY(15deg);\n    margin-left: 140px;\n}\n\n.box-center.turn .inner:last-child {\n    margin-left: 182px;\n}\n\n.box-center.row2.turn .inner:last-child {\n    margin-left: 12px;\n}\n\n.box-left.row2.turn .inner:last-child {\n    margin-left: 12px;\n}\n\n.box-right.turn .inner:last-child {\n    margin-left: 330px;\n}\n\n.box-left .inner span,\n.box-center .inner span,\n.box-right .inner span {\n    position: absolute;\n}\n\n.box-left .inner span {\n    left: 80px;\n}\n\n.box-center .inner span {\n    left: 0;\n}\n\n.box-right .inner span {\n    left: -18px;\n}\n\n#box1 {\n    z-index: 200;\n}\n\n#box1 .inner span {\n    margin-left: -7px;\n}\n\n#box5 {\n    clip-path: inset(-0.56% 0% 0.22% -1.11% round 10px);\n}\n\n#item .ring1 {\n    transform-origin: center;\n    transition: all 1s;\n}\n\n#item .ring1.turn {\n    transform: translate(-45px, 18px) rotate(56deg);\n}\n\n#item .ring1 .highcharts-point {\n    transform-origin: center;\n    transform: rotate(20deg);\n}\n\n#back {\n    width: 100%;\n    text-align: center;\n    margin-top: 10px;\n    opacity: 0%;\n}\n\n#back a {\n    color: #fff;\n    opacity: 100%;\n}\n\n#back a:hover {\n    opacity: 80%;\n}\n\n/* ----------------------------------------------\n * Generated by Animista on 2021-12-7 7:38:31\n * Licensed under FreeBSD License.\n * See http://animista.net/license for more info.\n * w: http://animista.net, t: @cssanimista\n * ---------------------------------------------- */\n\n/**\n * ----------------------------------------\n * animation swing-in-right-bck\n * ----------------------------------------\n */\n@keyframes swing-in-right-bck {\n    0% {\n        -webkit-transform: rotateY(70deg);\n        transform: rotateY(70deg);\n        -webkit-transform-origin: right;\n        transform-origin: right;\n        opacity: 0%;\n    }\n\n    100% {\n        -webkit-transform: rotateY(0);\n        transform: rotateY(0);\n        -webkit-transform-origin: right;\n        transform-origin: right;\n        opacity: 100%;\n    }\n}\n\n@keyframes swing-in-right-bck {\n    0% {\n        -webkit-transform: rotateY(70deg);\n        transform: rotateY(70deg);\n        -webkit-transform-origin: right;\n        transform-origin: right;\n        opacity: 0%;\n    }\n\n    100% {\n        -webkit-transform: rotateY(0);\n        transform: rotateY(0);\n        -webkit-transform-origin: right;\n        transform-origin: right;\n        opacity: 100%;\n    }\n}\n\n@media screen  and (min-width: 500px) {\n    .chart-container {\n        width: 180px;\n        height: 180px;\n    }\n\n    #charts {\n        width: 540px;\n    }\n\n    #center-message {\n        width: 180px;\n    }\n\n    #message {\n        width: 540px;\n    }\n\n    .box {\n        width: 540px;\n        height: 180px;\n    }\n\n    .box.row2 {\n        top: 180px;\n        width: 180px;\n        height: 170px;\n    }\n\n    .box.row3 {\n        top: 360px;\n        width: 180px;\n        height: 170px;\n    }\n\n    .box.row2.center,\n    .box.row3.center {\n        left: 180px;\n    }\n\n    .box.row2.right,\n    .box.row3.right {\n        left: 360px;\n    }\n\n    .box-left .inner,\n    .box-center .inner,\n    .box-right .inner {\n        width: 45px;\n        height: 170px;\n        font-size: 3em;\n        line-height: 200px;\n    }\n\n    .box-left .inner:last-child,\n    .box-center .inner:last-child,\n    .box-right .inner:last-child {\n        height: 180px;\n        width: 540px;\n    }\n\n    .box-center .inner:last-child {\n        margin-left: 180px;\n    }\n\n    .box-right .inner:last-child {\n        margin-left: 355px;\n    }\n\n    .box p {\n        font-size: 60px;\n        margin-top: 30px;\n    }\n\n    .box-right .inner span {\n        left: 0;\n    }\n\n    #box1 .inner span {\n        margin-left: 0;\n    }\n\n    .button-container {\n        top: 400px;\n    }\n\n    #bell-chart .higcharts-bellchart-series {\n        transform: translateY(0);\n    }\n\n    #presents-chart .highcharts-series-2,\n    #presents-chart .highcharts-series-3,\n    #presents-chart .highcharts-series-4,\n    #presents-chart .highcharts-series-5,\n    #presents-chart .highcharts-series-6,\n    #presents-chart .highcharts-series-7,\n    #presents-chart .highcharts-series-8,\n    #presents-chart .highcharts-series-9,\n    #presents-chart .highcharts-series-10,\n    #presents-chart .highcharts-series-11,\n    #presents-chart .highcharts-series-12,\n    #presents-chart .highcharts-series-13 {\n        transform: translateY(0);\n    }\n\n    #center-message {\n        width: 170px;\n        font-size: 16px;\n        line-height: 24px;\n        font-weight: 600;\n        margin-top: 15px;\n        margin-left: 5px;\n        letter-spacing: 0;\n    }\n}\n","html":"\n<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\">\n<link href=\"https://fonts.googleapis.com/css2?family=IBM+Plex+Sans:wght@200;300;400;600;700&display=swap\" rel=\"stylesheet\">\n\n<div style=\"margin-top:20px;display: flex;justify-content: center;width: 100%;\">\n\t<div>\n\t\t<div id=\"message\">\n\t\t\t<div class=\"button-container\">\n\t\t\t\t<button type=\"button\" id=\"open\" class=\"btn btn-primary\">Open</button>\n\t\t\t</div>\n\n\t\t\t<div id=\"box1\" class=\"box\">\n\t\t\t\t<div class=\"box-left \">\n\t\t\t\t\t<div class=\"inner \">\n\t\t\t\t\t<span>Happy Holidays!</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div id=\"box2\" class=\"box\">\n\t\t\t\t<div class=\"box-center\">\n\t\t\t\t\t<div class=\"inner\">\n\t\t\t\t\t<span></span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div id=\"box3\" class=\"box\">\n\t\t\t\t<div class=\"box-right\">\n\t\t\t\t\t<div class=\"inner\">\n\t\t\t\t\t<span></span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div id=\"box4\" class=\"box row2\">\n\t\t\t\t<div class=\"box-left row2\">\n\t\t\t\t\t<div class=\"inner\">\n\t\t\t\t\t<span></span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div id=\"box5\" class=\"box row2 center\">\n\t\t\t\t<div class=\"box-center row2\">\n\t\t\t\t\t<div class=\"inner\">\n\t\t\t\t\t<p id=\"center-message\">from your friends<br>at Highcharts</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div id=\"box6\" class=\"box right row2\">\n\t\t\t\t<div class=\"box-right row2\">\n\t\t\t\t\t<div class=\"inner\">\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div id=\"box7\" class=\"box row3\">\n\t\t\t\t<div class=\"box-left row3\">\n\t\t\t\t\t<div class=\"inner\">\n\t\t\t\t\t<span></span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div id=\"box8\" class=\"box row3 center\">\n\t\t\t\t<div class=\"box-center row3\">\n\t\t\t\t\t<div class=\"inner\">\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div id=\"box9\" class=\"box right row3\">\n\t\t\t\t<div class=\"box-right row3\">\n\t\t\t\t\t<div class=\"inner\">\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div id=\"charts\">\n\t\t\t\t<div class=\"chart-container\" id=\"word-chart\"></div>\n\t\t\t\t<div class=\"chart-container\" id=\"snowglobe-chart\"></div>\n\t\t\t\t<div class=\"chart-container\" id=\"presents-chart\"></div>\n\t\t\t\t<div class=\"chart-container\" id=\"bell-chart\"></div>\n\t\t\t\t<div class=\"chart-container\" id=\"ball-chart\"></div>\n\t\t\t\t<div class=\"chart-container\" id=\"cane-chart\"></div>\n\t\t\t\t<div class=\"chart-container\" id=\"flake-chart\"></div>\n\t\t\t\t<div class=\"chart-container\" id=\"tree-chart\"></div>\n\t\t\t\t<div class=\"chart-container\" id=\"donut\"></div>\n\t\t\t<!-- <div class=\"chart-container\" id=\"container\"></div> -->\n\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\n\t<div id=\"back\">\n\t\t<a href=\"https://www.highcharts.com\">Back to Highcharts.com</a>\n\t</div>\n</div>\n\n\n<svg id='patternId' width='0%' height='0%' xmlns='http://www.w3.org/2000/svg'>\n\t<defs>\n\t\t<pattern id='redstripe' patternUnits='userSpaceOnUse' width='20' height='30' patternTransform='scale(.5) rotate(45)'><rect x='0' y='0' width='100%' height='100%' fill='hsla(0, 0%, 100%, 1)'/><path d='M0 10h20z'   stroke-width='9.5' stroke='hsla(4, 90%, 58%, 1)' fill='none'/>\n\t\t</pattern>\n\t\t<pattern id='bluestripe' patternUnits='userSpaceOnUse' width='20' height='40' patternTransform='scale(.2) rotate(45)'><rect x='0' y='0' width='100%' height='100%' fill='hsla(0,0%,100%,1)'/><path d='M0 10h20z'   stroke-width='19.5' stroke='hsla(231, 48%, 48%, 1)' fill='none'/><path d='M0 30h20z'   stroke-width='19.5' stroke='hsla(0, 0%, 100%, 1)' fill='none'/></pattern>\n\t\t<pattern id='redstripe2' patternUnits='userSpaceOnUse' width='20' height='40' patternTransform='scale(.2) rotate(45)'><rect x='0' y='0' width='100%' height='100%' fill='hsla(0,0%,100%,1)'/><path d='M0 10h20z'   stroke-width='19.5' stroke='hsla(4, 90%, 58%, 1)' fill='none'/><path d='M0 30h20z'   stroke-width='19.5' stroke='hsla(0, 0%, 100%, 1)' fill='none'/></pattern>\n\t\t<pattern id='stars' patternUnits='userSpaceOnUse' width='20' height='40' patternTransform='scale(.2) rotate(0)'><rect x='0' y='0' width='100%' height='100%' fill='hsla(0,0%,100%,1)'/><path d='M0 20v20h20V20zm10.135 4.9l1.342 3.579 3.845.312-2.996 2.506.897 3.8-3.268-2.056L6.736 35.1l.985-3.848-3.043-2.504 3.935-.18z'  stroke-width='1' stroke='none' fill='hsla(258.5,59.4%,59.4%,1)'/><path d='M0 0v20h20V0zm10.135 4.9l1.342 3.579 3.845.312-2.996 2.506.897 3.8-3.268-2.056L6.736 15.1l.985-3.848-3.043-2.504 3.935-.18z'  stroke-width='1' stroke='none' fill='hsla(339.6,82.2%,51.6%,1)'/></pattern>\n\t</defs>\n</svg>\n\n<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0\" height=\"0\" >\n\t<linearGradient id=\"bg-gradient\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\n\t\t<stop offset=\"5%\" stop-color=\"#005190\" />\n\t\t<stop offset=\"95%\" stop-color=\"#45445d\" />\n\t</linearGradient>\n</svg>\n\n\n\n\n\n","npm":"// 安装\nnpm install highcharts@11.0.0 --save\n\n// import 模块 \nimport Highcharts         from 'highcharts';\nimport TopojsonClient@3   from 'https://unpkg.com/topojson-client@3';\nimport Map                from 'highcharts/modules/map';\nimport Data               from 'highcharts/modules/data';\nimport HighchartsMore     from 'highcharts/highcharts-more';\nimport Wordcloud          from 'highcharts/modules/wordcloud';\nimport PatternFill        from 'highcharts/modules/pattern-fill';\nimport ItemSeries         from 'highcharts/modules/item-series';\nimport HistogramBellcurve from 'highcharts/modules/histogram-bellcurve';\nimport DraggablePoints    from 'highcharts/modules/draggable-points';\nimport Highcharts3d       from 'highcharts/highcharts-3d';\n\n// 初始化模块\nTopojsonClient@3(Highcharts);\nMap(Highcharts);\nData(Highcharts);\nHighchartsMore(Highcharts);\nWordcloud(Highcharts);\nPatternFill(Highcharts);\nItemSeries(Highcharts);\nHistogramBellcurve(Highcharts);\nDraggablePoints(Highcharts);\nHighcharts3d(Highcharts);\n","scripts":["https://code.highcharts.com/11.0.0/highcharts.js","https://unpkg.com/topojson-client@3","https://code.highcharts.com/maps/11.0.0/modules/map.js","https://code.highcharts.com/maps/11.0.0/modules/data.js","https://code.highcharts.com/11.0.0/highcharts-more.js","https://code.highcharts.com/11.0.0/modules/wordcloud.js","https://code.highcharts.com/11.0.0/modules/pattern-fill.js","https://code.highcharts.com/11.0.0/modules/item-series.js","https://code.highcharts.com/11.0.0/modules/histogram-bellcurve.js","https://code.highcharts.com/gantt/11.0.0/modules/draggable-points.js","https://code.highcharts.com/11.0.0/highcharts-3d.js"]}