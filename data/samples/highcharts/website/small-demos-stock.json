{"js":"const params = (new URL(document.location)).search;\n// const chartToShow = params.get('chart');\n\n\nconst pArray = params.split('&');\n\nlet chartStr = '';\n\nlet chartToShow = 'compare';\n\n\npArray.forEach(function (element) {\n    if (element.indexOf('charts=') !== -1) {\n        chartStr = element;\n    }\n});\n\nconst chartArray = chartStr.split('=');\nif (chartArray.length > 1) {\n    chartToShow = chartArray[1];\n}\n\nfunction indicators() {\n    Highcharts.getJSON('https://cdn.jsdelivr.net/gh/highcharts/highcharts@2c6e89641888ae94c988649d96552c06c4e47351/samples/data/aapl-ohlcv.json', function (data) {\n        // split the data set into ohlc and volume\n        var ohlc = [],\n            volume = [],\n            dataLength = data.length;\n\n        for (var i = 0; i < dataLength; i += 1) {\n            ohlc.push([\n                data[i][0], // the date\n                data[i][1], // open\n                data[i][2], // high\n                data[i][3], // low\n                data[i][4] // close\n            ]);\n\n            volume.push([\n                data[i][0], // the date\n                data[i][5] // the volume\n            ]);\n        }\n\n        // create the chart\n        Highcharts.stockChart('container', {\n            chart: {\n                height: 270\n            },\n            title: {\n                text: ''\n            },\n            subtitle: {\n                text: ''\n            },\n            accessibility: {\n                series: {\n                    descriptionFormat: '{seriesDescription}.'\n                },\n                description: 'Use the dropdown menus above to display different indicator series on the chart.',\n                screenReaderSection: {\n                    beforeChartFormat: '<{headingTagName}>{chartTitle}</{headingTagName}><div>{typeDescription}</div><div>{chartSubtitle}</div><div>{chartLongdesc}</div>'\n                }\n            },\n            legend: {\n                enabled: false\n            },\n            exporting: {\n                enabled: false\n            },\n            rangeSelector: {\n                selected: 0,\n                inputEnabled: false,\n                floating: true,\n                allButtonsEnabled: true,\n                buttons: [{\n                    type: 'day',\n                    count: 1,\n                    text: '1d',\n                    title: 'View 1 day'\n                },\n                {\n                    type: 'month',\n                    count: 1,\n                    text: '1m',\n                    title: 'View 1 month'\n                }, {\n                    type: 'month',\n                    count: 3,\n                    text: '3m',\n                    title: 'View 3 months'\n                }, {\n                    type: 'month',\n                    count: 6,\n                    text: '6m',\n                    title: 'View 6 months'\n                }, {\n                    type: 'ytd',\n                    text: 'YTD',\n                    title: 'View year to date'\n                }, {\n                    type: 'year',\n                    count: 1,\n                    text: '1y',\n                    title: 'View 1 year'\n                }, {\n                    type: 'all',\n                    text: 'All',\n                    title: 'View all'\n                }]\n            },\n            navigator: {\n                height: 30,\n                margin: 0,\n                series: {\n                    label: {\n                        enabled: false\n                    }\n                }\n            },\n            credits: {\n                enabled: false\n            },\n            xAxis: {\n                top: '90%',\n                opposite: true\n            },\n            yAxis: [{\n                height: '50%'\n            }, {\n                top: '40%',\n                height: '20%'\n            }, {\n                top: '60%',\n                height: '20%'\n            }],\n            plotOptions: {\n                series: {\n                    showInLegend: true,\n                    accessibility: {\n                        exposeAsGroupOnly: true\n                    }\n                }\n            },\n            series: [{\n                type: 'candlestick',\n                id: 'aapl',\n                name: 'AAPL',\n                data: data\n            }, {\n                type: 'column',\n                id: 'volume',\n                name: 'Volume',\n                data: volume,\n                yAxis: 1\n            }, {\n                type: 'pc',\n                id: 'overlay',\n                linkedTo: 'aapl',\n                yAxis: 0\n            }, {\n                type: 'macd',\n                id: 'oscillator',\n                linkedTo: 'aapl',\n                yAxis: 2\n            }]\n        });\n    });\n}\n\nfunction compare() {\n    var seriesOptions = [],\n        seriesCounter = 0,\n        names = ['MSFT', 'AAPL', 'GOOG'];\n\n    /**\n     * Create the chart when all data is loaded\n     * @return {undefined}\n     */\n    function createChart() {\n\n        Highcharts.stockChart('container', {\n            chart: {\n                borderWidth: 0,\n                borderColor: 'white',\n                backgroundColor: {\n                    linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\n                    stops: [\n                        [0, '#1f1836'],\n                        [1, '#45445d']\n                    ]\n                }\n            },\n            rangeSelector: {\n                selected: 4,\n                labelStyle: {\n                    color: '#fff'\n                },\n                verticalAlign: 'top',\n                buttonTheme: {\n                    fill: '#46465C',\n                    stroke: '#BBBAC5',\n                    'stroke-width': 1,\n                    height: 30,\n                    y: 5,\n                    style: {\n                        color: '#fff'\n                    },\n                    states: {\n                        hover: {\n                            fill: '#1f1836',\n                            style: {\n                                color: '#fff'\n                            },\n                            'stroke-width': 1,\n                            stroke: 'white'\n                        },\n                        select: {\n                            fill: '#1f1836',\n                            style: {\n                                color: '#fff'\n                            },\n                            'stroke-width': 1,\n                            stroke: 'white'\n                        }\n                    }\n                },\n                dropdown: 'always',\n                inputDateFormat: '%b %e, %y',\n                inputBoxHeight: 30,\n                inputSpacing: 2\n            },\n            navigator: {\n                height: 30,\n                xAxis: {\n                    labels: {\n                        style: {\n                            color: 'transparent'\n                        }\n                    }\n                },\n                maskFill: 'rgba(135,180,230,0.5)',\n                series: {\n                    label: {\n                        enabled: false\n                    },\n                    dataLabels: {\n                        enabled: false\n                    }\n                }\n            },\n            credits: {\n                enabled: false\n            },\n            exporting: {\n                enabled: false\n            },\n            xAxis: {\n                gridLineColor: '#707073',\n                labels: {\n                    style: {\n                        color: '#fff',\n                        fontSize: '12px'\n                    }\n                },\n                lineColor: '#707073',\n                minorGridLineColor: '#505053',\n                tickColor: '#707073',\n                min: Date.UTC(2013, 4, 5),\n                max: Date.UTC(2013, 4, 10)\n            },\n            yAxis: {\n                gridLineColor: '#707073',\n                labels: {\n                    formatter: function () {\n                        return (this.value > 0 ? ' + ' : '') + this.value + '%';\n                    },\n                    style: {\n                        color: '#fff',\n                        fontSize: '12px'\n                    }\n                },\n                lineColor: '#707073',\n                minorGridLineColor: '#505053',\n                tickColor: '#707073',\n                tickWidth: 1,\n                plotLines: [{\n                    value: 0,\n                    width: 2,\n                    color: 'silver'\n                }]\n            },\n            plotOptions: {\n                series: {\n                    compare: 'percent',\n                    showInNavigator: true,\n                    label: {\n                        style: {\n                            fontSize: '14px'\n                        }\n                    },\n                    dataLabels: {\n                        color: '#46465C',\n                        style: {\n                            fontSize: '14px'\n                        }\n                    }\n                }\n            },\n            tooltip: {\n                pointFormat: '<span style=\"color:{series.color}\">{series.name}</span>: <b>{point.y}</b> ({point.change}%)<br/>',\n                valueDecimals: 2,\n                split: true\n            },\n            series: seriesOptions,\n            responsive: {\n                rules: [\n                    {\n                        condition: {\n                            // /up tp this\n                            maxWidth: 219\n                        },\n                        chartOptions: {\n                            chart: {\n                                margin: [5, 10, 0, 10],\n                                spacing: 0,\n                                height: 140\n                            },\n                            navigator: {\n                                enabled: false\n                            },\n                            scrollbar: {\n                                enabled: false\n                            },\n                            rangeSelector: {\n                                enabled: true,\n                                inputEnabled: false\n                            },\n                            xAxis: {\n                                visible: false\n                            },\n                            yAxis: {\n                                visible: true\n                            }\n                        }\n                    },\n                    {\n                        condition: {\n                            minWidth: 220\n                        },\n                        chartOptions: {\n                            chart: {\n                                margin: [15, 15, 20, 10],\n                                height: 260\n                            },\n                            navigator: {\n                                enabled: true\n                            },\n                            scrollbar: {\n                                enabled: false\n                            },\n                            rangeSelector: {\n                                enabled: true,\n                                inputEnabled: false\n                            },\n                            xAxis: {\n                                visible: true,\n                                top: '0%'\n                            },\n                            yAxis: {\n                                visible: true,\n                                top: '0%',\n                                height: '100%'\n                            }\n                        }\n                    }\n                ]\n            }\n        });\n    }\n\n    function success(data) {\n        var name = this.url.match(/(msft|aapl|goog)/u)[0].toUpperCase();\n        var i = names.indexOf(name);\n        seriesOptions[i] = {\n            name: name,\n            data: data\n        };\n\n        // As we're loading the data asynchronously, we don't know what order it\n        // will arrive. So we keep a counter and create the chart when all the data is loaded.\n        seriesCounter += 1;\n\n        if (seriesCounter === names.length) {\n            createChart();\n        }\n    }\n\n    Highcharts.getJSON(\n        'https://cdn.jsdelivr.net/gh/highcharts/highcharts@v10.3.3/samples/data/msft-c.json',\n        success\n    );\n    Highcharts.getJSON(\n        'https://cdn.jsdelivr.net/gh/highcharts/highcharts@v10.3.3/samples/data/aapl-c.json',\n        success\n    );\n    Highcharts.getJSON(\n        'https://cdn.jsdelivr.net/gh/highcharts/highcharts@v10.3.3/samples/data/goog-c.json',\n        success\n    );\n}\n\nfunction ao() {\n    Highcharts.getJSON('https://cdn.jsdelivr.net/gh/highcharts/highcharts@fd0e573985/samples/data/aapl-ohlc-ab.json', function (data) {\n\n        Highcharts.stockChart('container', {\n            chart: {\n                // height: 270\n                // backgroundColor: 'brown'\n                height: '100%'\n            },\n            rangeSelector: {\n                // selected: 0,\n                floating: true,\n                inputEnabled: true,\n                buttons: [{\n                    type: 'day',\n                    count: 1,\n                    text: '1d',\n                    title: 'View 1 day'\n                },\n                {\n                    type: 'month',\n                    count: 1,\n                    text: '1m',\n                    title: 'View 1 month'\n                }, {\n                    type: 'month',\n                    count: 3,\n                    text: '3m',\n                    title: 'View 3 months'\n                }, {\n                    type: 'month',\n                    count: 6,\n                    text: '6m',\n                    title: 'View 6 months'\n                }, {\n                    type: 'ytd',\n                    text: 'YTD',\n                    title: 'View year to date'\n                }, {\n                    type: 'year',\n                    count: 1,\n                    text: '1y',\n                    title: 'View 1 year'\n                }, {\n                    type: 'all',\n                    text: 'All',\n                    title: 'View all'\n                }],\n                dropdown: 'always',\n                inputDateFormat: '%b %e, %y',\n                buttonTheme: {\n\n                    height: 30,\n                    y: 5\n                },\n                inputBoxHeight: 30,\n                inputPosition: {\n                    y: 4\n                },\n                inputSpacing: 2\n            },\n            navigator: {\n                height: 30\n            },\n            title: {\n                text: ''\n            },\n\n            legend: {\n                enabled: false\n            },\n            exporting: {\n                enabled: false\n            },\n            credits: {\n                enabled: false\n            },\n\n            plotOptions: {\n                series: {\n                    showInLegend: true,\n                    label: {\n                        enabled: false\n                    }\n                }\n            },\n\n            yAxis: [{\n                height: '50%',\n                top: '30%'\n            }, {\n                top: '80%',\n                height: '30%',\n                offset: 0\n            }],\n            xAxis: {\n                top: '10%',\n                min: Date.UTC(2021, 1, 19),\n                max: Date.UTC(2022, 4, 13)\n            },\n            series: [{\n                type: 'candlestick',\n                id: 'AAPL',\n                name: 'AAPL',\n                data: data,\n                tooltip: {\n                    valueDecimals: 2\n                }\n            }, {\n                type: 'ao',\n                yAxis: 1,\n                greaterBarColor: '#00cc66',\n                lowerBarColor: '#FF5E5E',\n                linkedTo: 'AAPL',\n                showInLegend: true\n            }],\n            responsive: {\n                rules: [\n                    // /up to 219\n                    {\n                        condition: {\n                            // /up tp this\n                            maxWidth: 219\n                        },\n                        chartOptions: {\n                            chart: {\n                                height: 140\n                            },\n                            navigator: {\n                                enabled: false\n                            },\n                            scrollbar: {\n                                enabled: false\n                            },\n                            rangeSelector: {\n                                enabled: true,\n                                inputEnabled: false\n                            },\n                            xAxis: {\n                                visible: false\n                            },\n                            yAxis: {\n                                visible: true,\n                                top: '20%',\n                                height: '100%'\n                            }\n                        }\n                    },\n                    {\n                        condition: {\n                            minWidth: 220\n                        },\n                        chartOptions: {\n                            chart: {\n                                height: 260\n                            },\n                            navigator: {\n                                enabled: true\n                            },\n                            scrollbar: {\n                                enabled: false\n                            },\n                            rangeSelector: {\n                                enabled: true,\n                                inputEnabled: false\n                            },\n                            xAxis: {\n                                visible: true,\n                                top: '10%'\n                            },\n                            yAxis: {\n                                visible: true,\n                                top: '25%',\n                                height: '70%'\n                            }\n                        }\n                    }\n                ]\n            }\n        });\n    });\n\n}\n\nfunction dynamic() {\n    const chart = Highcharts.stockChart('container', {\n        chart: {\n            type: 'candlestick',\n            height: 270,\n            events: {\n                load: function () {\n                    const chart = this;\n                    const price = Math.round(Math.random() * 100);\n                    let count = 0;\n                    const addData = setInterval(function () {\n                        if (count < 5) {\n                            chart.series[0].addPoint([\n                                Math.round(+new Date() / 1000) * 1000,\n                                price,\n                                Math.round(price * 1.2),\n                                Math.round(price * 0.8),\n                                Math.round(price + price * 0.3 *\n                                    (Math.random() - 0.5))\n                            ]);\n                            count = count + 1;\n                        } else {\n                            clearInterval(addData);\n                        }\n\n                    }, 1000);\n\n\n                }\n            }\n            // backgroundColor: 'black'\n        },\n        title: {\n            // text: 'Dynamic stock data'\n            text: ''\n        },\n        rangeSelector: {\n            allButtonsEnabled: true,\n            dropdown: 'always',\n            inputEnabled: false,\n            buttonTheme: {\n                width: 120,\n                height: 30,\n                y: 5\n            },\n            buttons: [\n                {\n                    type: 'second',\n                    count: 1,\n                    text: '1s',\n                    title: 'View 1 second'\n                },\n                {\n                    type: 'second',\n                    count: 5,\n                    text: '5s',\n                    title: 'View 5 seconds'\n                },\n                {\n                    type: 'all',\n                    text: 'All',\n                    title: 'View all'\n                }],\n            inputDateFormat: '%H:%M:%S.%L',\n            inputEditDateFormat: '%H:%M:%S.%L',\n            // Custom parser to parse the %H:%M:%S.%L format\n            inputDateParser: function (value) {\n                value = value.split(/[:\\.]/u);\n                return Date.UTC(\n                    1970,\n                    0,\n                    1,\n                    parseInt(value[0], 10),\n                    parseInt(value[1], 10),\n                    parseInt(value[2], 10),\n                    parseInt(value[3], 10)\n                );\n            }\n        },\n        exporting: {\n            enabled: false\n        },\n        credits: {\n            enabled: false\n        },\n        yAxis: {\n            height: '70%',\n            top: '30%'\n        },\n        navigator: {\n            series: {\n                label: {\n                    enabled: false\n                }\n            },\n            maskFill: 'rgba(135,180,230,0.5)',\n            height: 30\n        },\n        subtitle: {\n            // text: 'Click button to add candle to chart'\n            text: ''\n        },\n        accessibility: {\n            description: 'A test case for dynamic data in financial charts.',\n            announceNewData: {\n                enabled: true\n            }\n        },\n        series: [{\n            name: 'Random data',\n            data: []\n        }],\n        responsive: {\n            rules: [\n                // /up to 219\n                {\n                    condition: {\n                        // /up tp this\n                        maxWidth: 219\n                    },\n                    chartOptions: {\n                        chart: {\n                            margin: [5, 10, 0, 10],\n                            spacing: 0,\n                            height: 140\n                        },\n                        navigator: {\n                            enabled: false\n                        },\n                        scrollbar: {\n                            enabled: false\n                        },\n                        xAxis: {\n                            visible: false\n                        },\n                        yAxis: {\n                            visible: true,\n                            top: '0%',\n                            height: '100%'\n                        }\n                    }\n                },\n                {\n                    condition: {\n                        minWidth: 220\n                    },\n                    chartOptions: {\n                        chart: {\n                            margin: [15, 15, 20, 10],\n                            height: 260\n                        },\n                        navigator: {\n                            enabled: true\n                        },\n                        scrollbar: {\n                            enabled: false\n                        },\n                        xAxis: {\n                            visible: true,\n                            top: '0%'\n                        },\n                        yAxis: {\n                            visible: true,\n                            top: '0%',\n                            height: '100%'\n                        }\n                    }\n                }\n            ]\n        }\n    });\n\n    // Add random point when clicking button\n    document.getElementById('add').onclick = function () {\n        const price = Math.round(Math.random() * 100);\n        chart.series[0].addPoint([\n            Math.round(+new Date() / 1000) * 1000,\n            price,\n            Math.round(price * 1.2),\n            Math.round(price * 0.8),\n            Math.round(price + price * 0.3 * (Math.random() - 0.5))\n        ]);\n    };\n\n}\n\nfunction ab() {\n    Highcharts.getJSON('https://cdn.jsdelivr.net/gh/highcharts/highcharts@fd0e573985/samples/data/aapl-ohlc-ab.json', function (data) {\n        Highcharts.stockChart('container', {\n            rangeSelector: {\n                selected: 4,\n                inputEnabled: true,\n                height: 30,\n                floating: false,\n                dropdown: 'always',\n                inputDateFormat: '%b %e, %y',\n                buttonTheme: {\n                    height: 30,\n                    y: 4\n                },\n                inputBoxHeight: 30,\n                inputPosition: {\n                    y: 4\n                },\n                inputSpacing: 2\n            },\n            navigator: {\n                series: {\n                    label: {\n                        enabled: false\n                    }\n                },\n                xAxis: {\n                    labels: {\n                        style: {\n                            color: 'transparent'\n                        }\n                    }\n                },\n                maskFill: 'rgba(135,180,230,0.5)',\n                height: 30\n\n            },\n            title: {\n                text: ''\n            },\n            legend: {\n                enabled: false\n            },\n            credits: {\n                enabled: false\n            },\n            exporting: {\n                enabled: false\n            },\n            yAxis: {\n                height: '75%',\n                top: '35%'\n            },\n            xAxis: {\n                min: Date.UTC(2022, 3, 27),\n                max: Date.UTC(2022, 4, 22),\n                top: '10%'\n            },\n            plotOptions: {\n                series: {\n                    showInLegend: true,\n                    label: {\n                        enabled: false\n                    }\n                },\n                abands: {\n                    tooltip: {\n                        pointFormat: '{series.name}'\n                    }\n                }\n            },\n            series: [{\n                type: 'ohlc',\n                id: 'aapl',\n                name: 'AAPL Stock Price',\n                data: data\n\n            }, {\n                type: 'abands',\n                linkedTo: 'aapl'\n            }],\n            responsive: {\n                rules: [\n                    // /up to 219\n                    {\n                        condition: {\n                            // /up tp this\n                            maxWidth: 219\n                        },\n                        chartOptions: {\n                            chart: {\n                                height: 140\n                            },\n                            navigator: {\n                                enabled: false\n                            },\n                            scrollbar: {\n                                enabled: false\n                            },\n                            rangeSelector: {\n                                enabled: true,\n                                inputEnabled: false\n                            },\n                            xAxis: {\n                                visible: false\n                            },\n                            yAxis: {\n                                visible: true,\n                                top: '20%',\n                                height: '100%'\n                            }\n                        }\n                    },\n                    {\n                        condition: {\n                            minWidth: 220,\n                            margin: [40, 10, 0, 10]\n                        },\n                        chartOptions: {\n                            chart: {\n                                height: 260\n                            },\n                            navigator: {\n                                enabled: true\n                            },\n                            scrollbar: {\n                                enabled: false\n                            },\n                            rangeSelector: {\n                                enabled: true,\n                                inputEnabled: false\n                            },\n                            xAxis: {\n                                visible: true,\n                                top: '10%'\n                            },\n                            yAxis: {\n                                visible: true,\n                                top: '25%',\n                                height: '70%'\n                            }\n                        }\n                    }\n                ]\n            }\n        });\n    });\n\n}\n\nfunction flags() {\n    Highcharts.getJSON('https://cdn.jsdelivr.net/gh/highcharts/highcharts@v10.3.3/samples/data/usdeur.json', function (data) {\n\n        var lastDate = data[data.length - 1][0],  // Get year of last data point\n            days = 24 * 36e5; // Milliseconds in a day\n\n        // Create the chart\n        Highcharts.stockChart('container', {\n            chart: {\n                height: 270,\n                marginTop: 10\n            },\n            rangeSelector: {\n                selected: 1,\n                inputEnabled: false,\n                dropdown: 'always',\n                floating: true\n            },\n            navigator: {\n                height: 30,\n                series: {\n                    label: {\n                        enabled: false\n                    }\n                }\n            },\n\n            title: {\n                text: ''\n            },\n            exporting: {\n                enabled: false\n            },\n            credits: {\n                enabled: false\n            },\n            xAxis: {\n                top: 30\n            },\n            yAxis: [{\n                title: {\n                    text: ''\n                },\n                top: '15%',\n                height: '100%'\n            }, {\n                height: '25%'\n            }],\n\n            plotOptions: {\n                series: {\n                    label: {\n                        enabled: false\n                    }\n                },\n                flags: {\n                    useHTML: true,\n                    accessibility: {\n                        exposeAsGroupOnly: true,\n                        description: 'Flagged events.'\n                    },\n                    zIndex: 200,\n                    shadow: true,\n                    style: {\n                        fontSize: '12px',\n                        color: '#fff',\n                        fontWeight: 400,\n                        padding: '4px'\n                    },\n                    fillColor: '#46465C',\n                    borderRadius: 4,\n                    color: 'white',\n                    label: {\n                        maxFontSize: 20,\n                        minFontSize: 12,\n                        style: {\n                            fontSize: '12px',\n                            borderRadius: 4\n                        }\n                    }\n                }\n            },\n\n            series: [{\n                name: 'USD to EUR',\n                data: data,\n                id: 'dataseries',\n                tooltip: {\n                    valueDecimals: 4\n                }\n            }, {\n                type: 'flags',\n                name: 'Flags on series',\n                data: [{\n                    x: lastDate - 60 * days,\n                    title: '<p style=\"margin-top:-14px;padding:0px 4px;text-align:center\">On<br>series</p>'\n                }, {\n                    x: lastDate - 30 * days,\n                    title: '&nbsp;On series&nbsp;'\n                }],\n                onSeries: 'dataseries',\n                shape: 'circlepin',\n                width: 40,\n                height: 40,\n                y: -40\n            }, {\n                type: 'flags',\n                name: 'Flags on axis',\n                data: [{\n                    x: lastDate - 45 * days,\n                    title: '&nbsp;On axis&nbsp;'\n                }, {\n                    x: lastDate - 15 * days,\n                    title: '&nbsp;On axis&nbsp;'\n                }],\n                shape: 'squarepin'\n            }, {\n                type: 'flags',\n                name: 'Flags in pane',\n                data: [{\n                    x: lastDate - 40 * days,\n                    title: '&nbsp;In pane&nbsp;'\n                }, {\n                    x: lastDate - 15 * days,\n                    title: '&nbsp;In pane&nbsp;'\n                }],\n                yAxis: 1,\n                shape: 'squarepin'\n            }]\n        });\n    });\n}\n\nconst charts = {\n    compare: compare,\n    indicators: indicators,\n    ao: ao,\n    dynamic: dynamic,\n    flags: flags,\n    ab: ab\n\n};\n\nif (chartToShow === 'dynamic') {\n    document.getElementById('add').style.display = 'block';\n} else {\n    document.getElementById('add').style.display = 'none';\n}\n\ncharts[chartToShow]();","css":"body {\n    background-color: #46465c;\n    margin: 0;\n    padding: 0;\n    color: #fff;\n}\n\n.chart-container {\n    border: 0 solid red;\n    width: 150px;\n    height: 140px;\n}\n\na,\na:hover {\n    color: #fff;\n}\n\na:hover {\n    text-decoration: underline;\n}\n\n#demo-content {\n    margin: 0;\n}\n\n#add {\n    position: absolute;\n    top: 172px;\n    top: 170px;\n    right: 10px;\n    background-color: #46465c;\n    color: #fff;\n    font-weight: 400;\n    border: 1px solid  #bbbac5;\n    padding: 8px;\n    width: 40px;\n    height: 35px;\n    border-radius: 4px;\n    filter: brightness(1);\n}\n\n#add:hover {\n    background-color: #2f2b38;\n    cursor: pointer;\n}\n\n@media screen  and (min-width: 220px) {\n    #add {\n        top: 140px;\n        right: 20px;\n    }\n\n    .chart-container {\n        width: 100%;\n        max-width: 100%;\n        height: 260px;\n    }\n}\n\n@media screen  and (min-width: 260px) {\n    #add {\n        top: 130px;\n        right: 15px;\n    }\n\n    .chart-container {\n        width: 100%;\n        max-width: 100%;\n    }\n}\n\n@media screen  and (min-width: 370px) {\n    #add {\n        top: 90px;\n        right: 10px;\n    }\n\n    .chart-container {\n        width: 100%;\n        max-width: 100%;\n        height: 100%;\n    }\n}\n","html":"\n\n<div class=\"chart-container\" id=\"container\"></div>\n\n<button id=\"add\" title=\"add data\">+</button>\n\n","npm":"// 安装\nnpm install highcharts@11.0.1 --save\n\n// import 模块 \nimport Highcharts    from 'highcharts/highstock';\nimport Data          from 'highcharts/modules/data';\nimport Exporting     from 'highcharts/modules/exporting';\nimport IndicatorsAll from 'highcharts/indicators/indicators-all';\nimport Accessibility from 'highcharts/modules/accessibility';\nimport SeriesLabel   from 'highcharts/modules/series-label';\nimport BrandDark     from 'highcharts/themes/brand-dark';\n\n// 初始化模块\nData(Highcharts);\nExporting(Highcharts);\nIndicatorsAll(Highcharts);\nAccessibility(Highcharts);\nSeriesLabel(Highcharts);\nBrandDark(Highcharts);\n","scripts":["https://code.highcharts.com/stock/11.0.1/highstock.js","https://code.highcharts.com/stock/11.0.1/modules/data.js","https://code.highcharts.com/stock/11.0.1/modules/exporting.js","https://code.highcharts.com/stock/11.0.1/indicators/indicators-all.js","https://code.highcharts.com/11.0.1/modules/accessibility.js","https://code.highcharts.com/11.0.1/modules/series-label.js","https://code.highcharts.com/11.0.1/themes/brand-dark.js"]}