{"js":"/**\n * Get the current time\n */\nfunction getNow() {\n    var now = new Date();\n\n    return {\n        hours: now.getHours() + now.getMinutes() / 60,\n        minutes: now.getMinutes() * 12 / 60 + now.getSeconds() * 12 / 3600,\n        seconds: now.getSeconds() * 12 / 60\n    };\n}\n\n/**\n * Pad numbers\n */\nfunction pad(number, length) {\n    // Create an array of the remaining length + 1 and join it with 0's\n    return new Array((length || 2) + 1 - String(number).length).join(0) + number;\n}\n\nvar now = getNow();\n\n// Create the chart\nHighcharts.chart('container', {\n\n    chart: {\n        type: 'gauge',\n        plotBackgroundColor: null,\n        plotBackgroundImage: null,\n        plotBorderWidth: 0,\n        plotShadow: false,\n        height: '80%'\n    },\n\n    credits: {\n        enabled: false\n    },\n\n    title: {\n        text: 'The Highcharts clock'\n    },\n\n    pane: {\n        background: [{\n            // default background\n        }, {\n            // reflex for supported browsers\n            backgroundColor: Highcharts.svg ? {\n                radialGradient: {\n                    cx: 0.5,\n                    cy: -0.4,\n                    r: 1.9\n                },\n                stops: [\n                    [0.5, 'rgba(255, 255, 255, 0.2)'],\n                    [0.5, 'rgba(200, 200, 200, 0.2)']\n                ]\n            } : null\n        }]\n    },\n\n    yAxis: {\n        labels: {\n            distance: -20\n        },\n        min: 0,\n        max: 12,\n        lineWidth: 0,\n        showFirstLabel: false,\n\n        minorTickInterval: 'auto',\n        minorTickWidth: 1,\n        minorTickLength: 5,\n        minorTickPosition: 'inside',\n        minorGridLineWidth: 0,\n        minorTickColor: '#666',\n\n        tickInterval: 1,\n        tickWidth: 2,\n        tickPosition: 'inside',\n        tickLength: 10,\n        tickColor: '#666',\n        title: {\n            text: 'Powered by<br/>Highcharts',\n            style: {\n                color: '#BBB',\n                fontWeight: 'normal',\n                fontSize: '8px',\n                lineHeight: '10px'\n            },\n            y: 10\n        }\n    },\n\n    tooltip: {\n        formatter: function () {\n            return this.series.chart.tooltipText;\n        }\n    },\n\n    series: [{\n        data: [{\n            id: 'hour',\n            y: now.hours,\n            dial: {\n                radius: '60%',\n                baseWidth: 4,\n                baseLength: '95%',\n                rearLength: 0\n            }\n        }, {\n            id: 'minute',\n            y: now.minutes,\n            dial: {\n                baseLength: '95%',\n                rearLength: 0\n            }\n        }, {\n            id: 'second',\n            y: now.seconds,\n            dial: {\n                radius: '100%',\n                baseWidth: 1,\n                rearLength: '20%'\n            }\n        }],\n        animation: false,\n        dataLabels: {\n            enabled: false\n        }\n    }]\n},\n\n// Move\nfunction (chart) {\n    setInterval(function () {\n\n        now = getNow();\n\n        if (chart.axes) { // not destroyed\n            var hour = chart.get('hour'),\n                minute = chart.get('minute'),\n                second = chart.get('second'),\n                // run animation unless we're wrapping around from 59 to 0\n                animation = now.seconds === 0 ?\n                    false : {\n                        easing: 'easeOutBounce'\n                    };\n\n            // Cache the tooltip text\n            chart.tooltipText =\n                    pad(Math.floor(now.hours), 2) + ':' +\n                    pad(Math.floor(now.minutes * 5), 2) + ':' +\n                    pad(now.seconds * 5, 2);\n\n\n            hour.update(now.hours, true, animation);\n            minute.update(now.minutes, true, animation);\n            second.update(now.seconds, true, animation);\n        }\n\n    }, 1000);\n\n});\n\n/**\n * Easing function from https://github.com/danro/easing-js/blob/master/easing.js\n */\nMath.easeOutBounce = function (pos) {\n    if ((pos) < (1 / 2.75)) {\n        return (7.5625 * pos * pos);\n    }\n    if (pos < (2 / 2.75)) {\n        return (7.5625 * (pos -= (1.5 / 2.75)) * pos + 0.75);\n    }\n    if (pos < (2.5 / 2.75)) {\n        return (7.5625 * (pos -= (2.25 / 2.75)) * pos + 0.9375);\n    }\n    return (7.5625 * (pos -= (2.625 / 2.75)) * pos + 0.984375);\n};\n","css":"#container {\n    height: 400px;\n}\n\n.highcharts-figure,\n.highcharts-data-table table {\n    min-width: 300px;\n    max-width: 500px;\n    margin: 1em auto;\n}\n\n.highcharts-data-table table {\n    font-family: Verdana, sans-serif;\n    border-collapse: collapse;\n    border: 1px solid #ebebeb;\n    margin: 10px auto;\n    text-align: center;\n    width: 100%;\n    max-width: 500px;\n}\n\n.highcharts-data-table caption {\n    padding: 1em 0;\n    font-size: 1.2em;\n    color: #555;\n}\n\n.highcharts-data-table th {\n    font-weight: 600;\n    padding: 0.5em;\n}\n\n.highcharts-data-table td,\n.highcharts-data-table th,\n.highcharts-data-table caption {\n    padding: 0.5em;\n}\n\n.highcharts-data-table thead tr,\n.highcharts-data-table tr:nth-child(even) {\n    background: #f8f8f8;\n}\n\n.highcharts-data-table tr:hover {\n    background: #f1f7ff;\n}\n","html":"\n<figure class=\"highcharts-figure\">\n    <div id=\"container\"></div>\n    <p class=\"highcharts-description\">\n        A chart using a gauge series to create a working clock. The gauge value\n        is updated every second, and a custom animation easing function is\n        provided to create the bounce effect.\n    </p>\n</figure>\n","npm":"// 安装\nnpm install highcharts@10.3.2 --save\n\n// import 模块 \nimport Highcharts     from 'highcharts';\nimport HighchartsMore from 'highcharts/highcharts-more';\nimport Exporting      from 'highcharts/modules/exporting';\nimport ExportData     from 'highcharts/modules/export-data';\nimport Accessibility  from 'highcharts/modules/accessibility';\nimport Zh_cn          from 'https://code.hcharts.cn/plugins/zh_cn.js';\n\n// 初始化模块\nHighchartsMore(Highcharts);\nExporting(Highcharts);\nExportData(Highcharts);\nAccessibility(Highcharts);\nZh_cn(Highcharts);\n","scripts":["https://code.hcharts.cn/10.3.2/highcharts.js","https://code.hcharts.cn/10.3.2/highcharts-more.js","https://code.hcharts.cn/10.3.2/modules/exporting.js","https://code.hcharts.cn/10.3.2/modules/export-data.js","https://code.hcharts.cn/10.3.2/modules/accessibility.js","https://code.hcharts.cn/plugins/zh_cn.js"]}