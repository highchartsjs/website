{"js":"// Sonification options\nvar sdInstruments = [{\n        instrument: 'sineMajor',\n        instrumentMapping: {\n            duration: 200,\n            frequency: 'y',\n            volume: 0.7,\n            pan: -1\n        },\n        instrumentOptions: {\n            minFrequency: 220,\n            maxFrequency: 1900\n        }\n    }],\n    nyInstruments = [{\n        instrument: 'triangleMajor',\n        instrumentMapping: {\n            duration: 200,\n            frequency: 'y',\n            volume: 0.6,\n            pan: 1\n        },\n        instrumentOptions: {\n            minFrequency: 220,\n            maxFrequency: 1900\n        }\n    }];\n\n// Point of interest options\nvar poiTime = Date.UTC(2018, 4, 6),\n    poiEarcon = {\n        // Define the earcon we want to play for the point of interest\n        earcon: new Highcharts.sonification.Earcon({\n            instruments: [{\n                instrument: 'squareMajor',\n                playOptions: {\n                    // Play a quick rising frequency\n                    frequency: function (time) {\n                        return time * 1760 + 440;\n                    },\n                    volume: 0.1,\n                    duration: 200\n                }\n            }]\n        }),\n        // Play this earcon if we hit the point of interest\n        condition: function (point) {\n            return point.x === poiTime;\n        }\n    };\n\n// Create the chart\nvar chart = Highcharts.chart('container', {\n    chart: {\n        type: 'spline'\n    },\n    title: {\n        text: 'Play chart as sound'\n    },\n    subtitle: {\n        text: 'Weekly temperature averages'\n    },\n    yAxis: {\n        title: {\n            text: 'Temperature (°F)'\n        }\n    },\n    xAxis: {\n        type: 'datetime',\n        plotLines: [{\n            value: poiTime,\n            dashStyle: 'dash',\n            width: 1,\n            color: '#d33'\n        }]\n    },\n    tooltip: {\n        split: true,\n        valueDecimals: 0,\n        valueSuffix: '°F'\n    },\n    plotOptions: {\n        series: {\n            marker: {\n                enabled: false\n            },\n            cursor: 'pointer',\n            // Sonify points on click\n            point: {\n                events: {\n                    click: function () {\n                        // Sonify all points at this x value\n                        var targetX = this.x,\n                            chart = this.series.chart;\n                        chart.series.forEach(function (series) {\n                            // Map instruments to the options for this series\n                            var instruments = series.options.id === 'sd' ?\n                                sdInstruments : nyInstruments;\n                            // See if we have a point with the targetX\n                            series.points.some(function (point) {\n                                if (point.x === targetX) {\n                                    point.sonify({\n                                        instruments: instruments\n                                    });\n                                    return true;\n                                }\n                                return false;\n                            });\n                        });\n                    }\n                }\n            }\n        }\n    },\n    // Data source: https://www.ncdc.noaa.gov\n    data: {\n        csv: document.getElementById('csv_data').innerHTML,\n        firstRowAsNames: false,\n        parsed: function (columns) {\n            columns.splice(1, 2); // Remove the non-average columns\n        }\n    },\n    series: [{\n        name: 'San Diego',\n        id: 'sd',\n        color: '#f4b042'\n    }, {\n        name: 'New York',\n        id: 'ny',\n        color: '#41aff4'\n    }]\n});\n\n\n// Utility function that highlights a point\nfunction highlightPoint(event, point) {\n    var chart = point.series.chart,\n        hasVisibleSeries = chart.series.some(function (series) {\n            return series.visible;\n        });\n    if (!point.isNull && hasVisibleSeries) {\n        point.onMouseOver(); // Show the hover marker and tooltip\n    } else {\n        if (chart.tooltip) {\n            chart.tooltip.hide(0);\n        }\n    }\n}\n\n\n// On speed change we reset the sonification\ndocument.getElementById('speed').onchange = function () {\n    chart.cancelSonify();\n};\n\n\n// Add sonification button handlers\ndocument.getElementById('play').onclick = function () {\n    if (!chart.sonification.timeline || chart.sonification.timeline.atStart()) {\n        chart.sonify({\n            duration: 5000 / document.getElementById('speed').value,\n            order: 'simultaneous',\n            pointPlayTime: 'x',\n            seriesOptions: [{\n                id: 'sd',\n                instruments: sdInstruments,\n                onPointStart: highlightPoint,\n                // Play earcon at point of interest\n                earcons: [poiEarcon]\n            }, {\n                id: 'ny',\n                instruments: nyInstruments,\n                onPointStart: highlightPoint\n            }],\n            // Delete timeline on end\n            onEnd: function () {\n                if (chart.sonification.timeline) {\n                    delete chart.sonification.timeline;\n                }\n            }\n        });\n    } else {\n        chart.resumeSonify();\n    }\n};\ndocument.getElementById('pause').onclick = function () {\n    chart.pauseSonify();\n};\ndocument.getElementById('rewind').onclick = function () {\n    chart.rewindSonify();\n};\n","css":"#container {\n    height: 500px;\n}\n\n#controls {\n    margin: 0 auto;\n    text-align: center;\n}\n\n.highcharts-figure,\n.highcharts-data-table table {\n    min-width: 320px;\n    max-width: 900px;\n    margin: 1em auto;\n}\n\n.highcharts-data-table table {\n    font-family: Verdana, sans-serif;\n    border-collapse: collapse;\n    border: 1px solid #ebebeb;\n    margin: 10px auto;\n    text-align: center;\n    width: 100%;\n    max-width: 500px;\n}\n\n.highcharts-data-table caption {\n    padding: 1em 0;\n    font-size: 1.2em;\n    color: #555;\n}\n\n.highcharts-data-table th {\n    font-weight: 600;\n    padding: 0.5em;\n}\n\n.highcharts-data-table td,\n.highcharts-data-table th,\n.highcharts-data-table caption {\n    padding: 0.5em;\n}\n\n.highcharts-data-table thead tr,\n.highcharts-data-table tr:nth-child(even) {\n    background: #f8f8f8;\n}\n\n.highcharts-data-table tr:hover {\n    background: #f1f7ff;\n}\n","html":"\n<figure class=\"highcharts-figure\">\n    <div id=\"container\"></div>\n    <p class=\"highcharts-description\">\n        This chart demonstrates how you can play charts as sound,\n        enabling large data sets to be visualized without the need\n        for sight. This technique is referred to as Sonification,\n        and has many uses, including increased accessibility for\n        visually impaired users.\n    </p>\n</figure>\n\n<div id=\"controls\" style=\"\">\n    <button id=\"play\">Play</button>\n    <button id=\"pause\">Pause</button>\n    <button id=\"rewind\">Rewind</button>\n    <input type=\"range\" id=\"speed\" name=\"Speed\" \n         min=\"0.5\" max=\"2\" value=\"1\" step=\"0.05\">\n    <label for=\"speed\">Speed</label>\n</div>\n\n<pre id=\"csv_data\" style=\"display:none\">2018-01-07,61,9,61,15.85714286\n2018-01-14,66,20,61,33.85714286\n2018-01-21,56,41,60,31.85714286\n2018-01-28,61,46,58,39.28571429\n2018-02-04,63,35,65,32.14285714\n2018-02-11,61,47,61,35.85714286\n2018-02-18,61,37,62,40.42857143\n2018-02-25,55,44,54,45\n2018-03-04,57,41,56,43.42857143\n2018-03-11,62,38,61,36.57142857\n2018-03-18,57,36,60,36.57142857\n2018-03-25,59,40,61,38.14285714\n2018-04-01,60,48,60,43.28571429\n2018-04-08,64,38,62,41.14285714\n2018-04-15,68,43,66,45.85714286\n2018-04-22,64,51,61,46\n2018-04-29,62,54,62,53.28571429\n2018-05-06,67,60,62,62.57142857\n2018-05-13,63,53,62,58.42857143\n2018-05-20,62,67,63,60.14285714\n2018-05-27,63,65,63,67.71428571\n2018-06-03,67,63,65,65.14285714\n2018-06-10,68,68,66,64\n2018-06-17,65,74,67,68.57142857\n2018-06-24,65,69,66,71.42857143\n2018-07-01,66,82,67,75.14285714\n2018-07-08,78,69,72,76.57142857\n2018-07-15,74,75,74,75.14285714\n2018-07-22,76,73,73,74.85714286\n2018-07-29,76,77,75,76.57142857\n2018-08-05,76,81,77,77.42857143\n2018-08-12,80,76,81,79\n2018-08-19,76,71,76,77\n2018-08-26,74,73,75,73\n2018-09-02,71,72,74,78.28571429\n2018-09-09,70,61,72,75\n2018-09-16,74,72,72,69.71428571\n2018-09-23,71,63,71,70.42857143\n2018-09-30,71,63,69,65.71428571\n2018-10-07,68,71,71,68.14285714\n2018-10-14,68,53,68,64\n</pre>\n","npm":"// 安装\nnpm install highcharts@10.3.2 --save\n\n// import 模块 \nimport Highcharts      from 'highcharts';\nimport Data            from 'highcharts/modules/data';\nimport Exporting       from 'highcharts/modules/exporting';\nimport ExportData      from 'highcharts/modules/export-data';\nimport Sonification    from 'highcharts/modules/sonification';\nimport Accessibility   from 'highcharts/modules/accessibility';\nimport HighchartsZh_CN from 'https://code.hcharts.cn/plugins/highcharts-zh_CN.js';\n\n// 初始化模块\nData(Highcharts);\nExporting(Highcharts);\nExportData(Highcharts);\nSonification(Highcharts);\nAccessibility(Highcharts);\nHighchartsZh_CN(Highcharts);\n","scripts":["https://code.hcharts.cn/10.3.2/highcharts.js","https://code.hcharts.cn/10.3.2/modules/data.js","https://code.hcharts.cn/10.3.2/modules/exporting.js","https://code.hcharts.cn/10.3.2/modules/export-data.js","https://code.hcharts.cn/10.3.2/modules/sonification.js","https://code.hcharts.cn/10.3.2/modules/accessibility.js","https://code.hcharts.cn/plugins/highcharts-zh_CN.js"]}