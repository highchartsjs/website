{"js":"const dataPrev = {\n    2020: [\n        ['South Korea', 9],\n        ['Japan', 12],\n        ['Australia', 8],\n        ['Germany', 17],\n        ['Russia', 19],\n        ['China', 26],\n        ['Great Britain', 27],\n        ['United States', 46]\n    ],\n    2016: [\n        ['South Korea', 13],\n        ['Japan', 7],\n        ['Australia', 8],\n        ['Germany', 11],\n        ['Russia', 20],\n        ['China', 38],\n        ['Great Britain', 29],\n        ['United States', 47]\n    ],\n    2012: [\n        ['South Korea', 13],\n        ['Japan', 9],\n        ['Australia', 14],\n        ['Germany', 16],\n        ['Russia', 24],\n        ['China', 48],\n        ['Great Britain', 19],\n        ['United States', 36]\n    ],\n    2008: [\n        ['South Korea', 9],\n        ['Japan', 17],\n        ['Australia', 18],\n        ['Germany', 13],\n        ['Russia', 29],\n        ['China', 33],\n        ['Great Britain', 9],\n        ['United States', 37]\n    ],\n    2004: [\n        ['South Korea', 8],\n        ['Japan', 5],\n        ['Australia', 16],\n        ['Germany', 13],\n        ['Russia', 32],\n        ['China', 28],\n        ['Great Britain', 11],\n        ['United States', 37]\n    ],\n    2000: [\n        ['South Korea', 7],\n        ['Japan', 3],\n        ['Australia', 9],\n        ['Germany', 20],\n        ['Russia', 26],\n        ['China', 16],\n        ['Great Britain', 1],\n        ['United States', 44]\n    ]\n};\n\nconst data = {\n    2020: [\n        ['South Korea', 6],\n        ['Japan', 27],\n        ['Australia', 17],\n        ['Germany', 10],\n        ['Russia', 20],\n        ['China', 38],\n        ['Great Britain', 22],\n        ['United States', 39]\n    ],\n    2016: [\n        ['South Korea', 9],\n        ['Japan', 12],\n        ['Australia', 8],\n        ['Germany', 17],\n        ['Russia', 19],\n        ['China', 26],\n        ['Great Britain', 27],\n        ['United States', 46]\n    ],\n    2012: [\n        ['South Korea', 13],\n        ['Japan', 7],\n        ['Australia', 8],\n        ['Germany', 11],\n        ['Russia', 20],\n        ['China', 38],\n        ['Great Britain', 29],\n        ['United States', 47]\n    ],\n    2008: [\n        ['South Korea', 13],\n        ['Japan', 9],\n        ['Australia', 14],\n        ['Germany', 16],\n        ['Russia', 24],\n        ['China', 48],\n        ['Great Britain', 19],\n        ['United States', 36]\n    ],\n    2004: [\n        ['South Korea', 9],\n        ['Japan', 17],\n        ['Australia', 18],\n        ['Germany', 13],\n        ['Russia', 29],\n        ['China', 33],\n        ['Great Britain', 9],\n        ['United States', 37]\n    ],\n    2000: [\n        ['South Korea', 8],\n        ['Japan', 5],\n        ['Australia', 16],\n        ['Germany', 13],\n        ['Russia', 32],\n        ['China', 28],\n        ['Great Britain', 11],\n        ['United States', 37]\n    ]\n};\n\nconst countries = [{\n    name: 'South Korea',\n    flag: 'kr',\n    color: 'rgb(201, 36, 39)'\n}, {\n    name: 'Japan',\n    flag: 'jp',\n    color: 'rgb(201, 36, 39)'\n}, {\n    name: 'Australia',\n    flag: 'au',\n    color: 'rgb(0, 82, 180)'\n}, {\n    name: 'Germany',\n    flag: 'de',\n    color: 'rgb(0, 0, 0)'\n}, {\n    name: 'Russia',\n    flag: 'ru',\n    color: 'rgb(240, 240, 240)'\n}, {\n    name: 'China',\n    flag: 'cn',\n    color: 'rgb(255, 217, 68)'\n}, {\n    name: 'Great Britain',\n    flag: 'gb',\n    color: 'rgb(0, 82, 180)'\n}, {\n    name: 'United States',\n    flag: 'us',\n    color: 'rgb(215, 0, 38)'\n}];\n\n\nconst getData = data => data.map((country, i) => ({\n    name: country[0],\n    y: country[1],\n    color: countries[i].color\n}));\n\nconst chart = Highcharts.chart('container', {\n    chart: {\n        type: 'column'\n    },\n    title: {\n        text: 'Summer Olympics 2020 - Top 5 countries by Gold medals',\n        align: 'left'\n    },\n    subtitle: {\n        text: 'Comparing to results from Summer Olympics 2016 - Source: <a ' +\n            'href=\"https://olympics.com/en/olympic-games/tokyo-2020/medals\"' +\n            'target=\"_blank\">Olympics</a>',\n        align: 'left'\n    },\n    plotOptions: {\n        series: {\n            grouping: false,\n            borderWidth: 0\n        }\n    },\n    legend: {\n        enabled: false\n    },\n    tooltip: {\n        shared: true,\n        headerFormat: '<span style=\"font-size: 15px\">{point.point.name}</span><br/>',\n        pointFormat: '<span style=\"color:{point.color}\">\\u25CF</span> {series.name}: <b>{point.y} medals</b><br/>'\n    },\n    xAxis: {\n        type: 'category',\n        accessibility: {\n            description: 'Countries'\n        },\n        max: 4,\n        labels: {\n            useHTML: true,\n            animate: true,\n            formatter: ctx => {\n                let flag;\n\n                countries.forEach(function (country) {\n                    if (country.name === ctx.value) {\n                        flag = country.flag;\n                    }\n                });\n\n                return `${flag.toUpperCase()}<br><span class=\"f32\">\n                    <span class=\"flag ${flag}\"></span>\n                </span>`;\n            },\n            style: {\n                textAlign: 'center'\n            }\n        }\n    },\n    yAxis: [{\n        title: {\n            text: 'Gold medals'\n        },\n        showFirstLabel: false\n    }],\n    series: [{\n        color: 'rgba(158, 159, 163, 0.5)',\n        pointPlacement: -0.2,\n        linkedTo: 'main',\n        data: dataPrev[2020].slice(),\n        name: '2016'\n    }, {\n        name: '2020',\n        id: 'main',\n        dataSorting: {\n            enabled: true,\n            matchByName: true\n        },\n        dataLabels: [{\n            enabled: true,\n            inside: true,\n            style: {\n                fontSize: '16px'\n            }\n        }],\n        data: getData(data[2020]).slice()\n    }],\n    exporting: {\n        allowHTML: true\n    }\n});\n\nconst locations = [\n    {\n        city: 'Tokyo',\n        year: 2020\n    }, {\n        city: 'Rio',\n        year: 2016\n    }, {\n        city: 'London',\n        year: 2012\n    }, {\n        city: 'Beijing',\n        year: 2008\n    }, {\n        city: 'Athens',\n        year: 2004\n    }, {\n        city: 'Sydney',\n        year: 2000\n    }\n];\n\nlocations.forEach(location => {\n    const btn = document.getElementById(location.year);\n\n    btn.addEventListener('click', () => {\n\n        document.querySelectorAll('.buttons button.active')\n            .forEach(active => {\n                active.className = '';\n            });\n        btn.className = 'active';\n\n        chart.update({\n            title: {\n                text: 'Summer Olympics ' + location.year +\n                    ' - Top 5 countries by Gold medals'\n            },\n            subtitle: {\n                text: 'Comparing to results from Summer Olympics ' +\n                    (location.year - 4) + ' - Source: <a href=\"https://olympics.com/en/olympic-games/' +\n                    (location.city.toLowerCase()) + '-' + (location.year) + '/medals\" target=\"_blank\">Olympics</a>'\n            },\n            series: [{\n                name: location.year - 4,\n                data: dataPrev[location.year].slice()\n            }, {\n                name: location.year,\n                data: getData(data[location.year]).slice()\n            }]\n        }, true, false, {\n            duration: 800\n        });\n    });\n});","css":"#container {\n    min-width: 310px;\n    max-width: 800px;\n    height: 400px;\n    margin: 0 auto;\n}\n\n.buttons {\n    min-width: 310px;\n    text-align: center;\n    margin-bottom: 1.5rem;\n    font-size: 0;\n}\n\n.buttons button {\n    cursor: pointer;\n    border: 1px solid silver;\n    border-right-width: 0;\n    background-color: #f8f8f8;\n    font-size: 1rem;\n    padding: 0.5rem;\n    transition-duration: 0.3s;\n    margin: 0;\n}\n\n.buttons button:first-child {\n    border-top-left-radius: 0.3em;\n    border-bottom-left-radius: 0.3em;\n}\n\n.buttons button:last-child {\n    border-top-right-radius: 0.3em;\n    border-bottom-right-radius: 0.3em;\n    border-right-width: 1px;\n}\n\n.buttons button:hover {\n    color: white;\n    background-color: rgb(158 159 163);\n    outline: none;\n}\n\n.buttons button.active {\n    background-color: #0051b4;\n    color: white;\n}\n","html":"\n<!-- Flag sprites service provided by Martijn Lafeber,\n    https://github.com/lafeber/world-flags-sprite/blob/master/LICENSE -->\n<link rel=\"stylesheet\" type=\"text/css\"\n      href=\"https://github.s3.amazonaws.com/downloads/lafeber/world-flags-sprite/flags32.css\" />\n\n<div class='buttons'>\n  <button id='2000'>\n    2000\n  </button>\n  <button id='2004'>\n    2004\n  </button>\n  <button id='2008'>\n    2008\n  </button>\n  <button id='2012'>\n    2012\n  </button>\n  <button id='2016'>\n    2016\n  </button>\n  <button id='2020' class='active'>\n    2020\n  </button>\n</div>\n<div id=\"container\"></div>","npm":"// 安装\nnpm install highcharts@11.0.0 --save\n\n// import 模块 \nimport Highcharts    from 'highcharts';\nimport Exporting     from 'highcharts/modules/exporting';\nimport ExportData    from 'highcharts/modules/export-data';\nimport Accessibility from 'highcharts/modules/accessibility';\n\n// 初始化模块\nExporting(Highcharts);\nExportData(Highcharts);\nAccessibility(Highcharts);\n","scripts":["https://code.highcharts.com/11.0.0/highcharts.js","https://code.highcharts.com/11.0.0/modules/exporting.js","https://code.highcharts.com/11.0.0/modules/export-data.js","https://code.highcharts.com/11.0.0/modules/accessibility.js"]}