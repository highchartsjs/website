{"js":"var defaultData = 'https://demo-live-data.highcharts.com/time-data.csv';\nvar urlInput = document.getElementById('fetchURL');\nvar pollingCheckbox = document.getElementById('enablePolling');\nvar pollingInput = document.getElementById('pollingTime');\n\nfunction createChart() {\n    Highcharts.chart('container', {\n        chart: {\n            type: 'spline'\n        },\n        title: {\n            text: 'Live Data'\n        },\n        accessibility: {\n            announceNewData: {\n                enabled: true,\n                minAnnounceInterval: 15000,\n                announcementFormatter: function (allSeries, newSeries, newPoint) {\n                    if (newPoint) {\n                        return 'New point added. Value: ' + newPoint.y;\n                    }\n                    return false;\n                }\n            }\n        },\n        data: {\n            csvURL: urlInput.value,\n            enablePolling: pollingCheckbox.checked === true,\n            dataRefreshRate: parseInt(pollingInput.value, 10)\n        }\n    });\n\n    if (pollingInput.value < 1 || !pollingInput.value) {\n        pollingInput.value = 1;\n    }\n}\n\nurlInput.value = defaultData;\n\n// We recreate instead of using chart update to make sure the loaded CSV\n// and such is completely gone.\npollingCheckbox.onchange = urlInput.onchange = pollingInput.onchange = createChart;\n\n// Create the chart\ncreateChart();\n","css":".highcharts-figure,\n.highcharts-data-table table {\n    min-width: 360px;\n    max-width: 800px;\n    margin: 1em auto;\n}\n\n.highcharts-data-table table {\n    font-family: Verdana, sans-serif;\n    border-collapse: collapse;\n    border: 1px solid #ebebeb;\n    margin: 10px auto;\n    text-align: center;\n    width: 100%;\n    max-width: 500px;\n}\n\n.highcharts-data-table caption {\n    padding: 1em 0;\n    font-size: 1.2em;\n    color: #555;\n}\n\n.highcharts-data-table th {\n    font-weight: 600;\n    padding: 0.5em;\n}\n\n.highcharts-data-table td,\n.highcharts-data-table th,\n.highcharts-data-table caption {\n    padding: 0.5em;\n}\n\n.highcharts-data-table thead tr,\n.highcharts-data-table tr:nth-child(even) {\n    background: #f8f8f8;\n}\n\n.highcharts-data-table tr:hover {\n    background: #f1f7ff;\n}\n\n.ld-label {\n    width: 200px;\n    display: inline-block;\n}\n\n.ld-url-input {\n    width: 500px;\n}\n\n.ld-time-input {\n    width: 40px;\n}\n","html":"\n<figure class=\"highcharts-figure\">\n    <div id=\"container\"></div>\n    <p class=\"highcharts-description\">\n\t\tDatasets formatted in CSV or JSON can be fetched remotely using the\n\t\t<code>data</code> module. This chart shows how a chart can also be\n\t\tconfigured to poll against the remote source.\n    </p>\n</figure>\n\n<div class=\"ld-row\">\n\t<label class=\"ld-label\">\n\t\tEnable Polling\n\t</label>\n\t<input type=\"checkbox\" checked=\"checked\" id=\"enablePolling\"/>\n</div>\n<div class=\"ld-row\">\n\t<label class=\"ld-label\">\n\t\tPolling Time (Seconds)\n\t</label>\n\t<input class=\"ld-time-input\" type=\"number\" value=\"2\" id=\"pollingTime\"/>\n</div>\n<div class=\"ld-row\">\n\t<label class=\"ld-label\">\n\t\tCSV URL\n\t</label>\n\t<input class=\"ld-url-input\" type=\"text\" id=\"fetchURL\"/>\n</div>\n\n\n","npm":"// 安装\nnpm install highcharts@11.0.1 --save\n\n// import 模块 \nimport Highcharts    from 'highcharts';\nimport Data          from 'highcharts/modules/data';\nimport Exporting     from 'highcharts/modules/exporting';\nimport ExportData    from 'highcharts/modules/export-data';\nimport Accessibility from 'highcharts/modules/accessibility';\n\n// 初始化模块\nData(Highcharts);\nExporting(Highcharts);\nExportData(Highcharts);\nAccessibility(Highcharts);\n","scripts":["https://code.highcharts.com/11.0.1/highcharts.js","https://code.highcharts.com/11.0.1/modules/data.js","https://code.highcharts.com/11.0.1/modules/exporting.js","https://code.highcharts.com/11.0.1/modules/export-data.js","https://code.highcharts.com/11.0.1/modules/accessibility.js"]}