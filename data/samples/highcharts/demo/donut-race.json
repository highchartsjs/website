{"js":"const startYear = 1965,\n    endYear = 2020,\n    btn = document.getElementById('play-pause-button'),\n    input = document.getElementById('play-range'),\n    nbr = 6;\n\nlet dataset, chart;\n\nfunction getData(year) {\n    const output = Object.entries(dataset).map(country => {\n        const [countryName, countryData] = country;\n        return [countryName, Number(countryData[year])];\n    });\n    return [output[0], output.slice(1, nbr)];\n}\n\nfunction getSubtitle() {\n    const totalNumber = getData(input.value)[0][1].toFixed(2);\n    return `<span style=\"font-size: 80px\">${input.value}</span>\n        <br>\n        <span style=\"font-size: 22px\">\n            Total: <b> ${totalNumber}</b> TWh\n        </span>`;\n}\n\n(async () => {\n    dataset = await fetch(\n        'https://cdn.jsdelivr.net/gh/highcharts/highcharts@88f2067/samples/data/nuclear-energy-production.json'\n    ).then(response => response.json());\n\n    chart = Highcharts.chart('container', {\n        title: {\n            text: 'Nuclear energy production from 1965 to 2021 in US, UK, France, Germany, and Japan',\n            align: 'center'\n        },\n        subtitle: {\n            useHTML: true,\n            text: getSubtitle(),\n            floating: true,\n            verticalAlign: 'middle',\n            y: 30\n        },\n\n        legend: {\n            enabled: false\n        },\n\n        tooltip: {\n            valueDecimals: 2,\n            valueSuffix: ' TWh'\n        },\n\n        plotOptions: {\n            series: {\n                borderWidth: 0,\n                colorByPoint: true,\n                type: 'pie',\n                size: '100%',\n                innerSize: '80%',\n                dataLabels: {\n                    enabled: true,\n                    crop: false,\n                    distance: '-10%',\n                    style: {\n                        fontWeight: 'bold',\n                        fontSize: '16px'\n                    },\n                    connectorWidth: 0\n                }\n            }\n        },\n        colors: ['#FCE700', '#F8C4B4', '#f6e1ea', '#B8E8FC', '#BCE29E'],\n        series: [\n            {\n                type: 'pie',\n                name: startYear,\n                data: getData(startYear)[1]\n            }\n        ]\n    });\n})();\n\n/*\n * Pause the timeline, either when the range is ended, or when clicking the pause button.\n * Pausing stops the timer and resets the button to play mode.\n */\nfunction pause(button) {\n    button.title = 'play';\n    button.className = 'fa fa-play';\n    clearTimeout(chart.sequenceTimer);\n    chart.sequenceTimer = undefined;\n}\n\n/*\n * Update the chart. This happens either on updating (moving) the range input,\n * or from a timer when the timeline is playing.\n */\nfunction update(increment) {\n    if (increment) {\n        input.value = parseInt(input.value, 10) + increment;\n    }\n    if (input.value >= endYear) {\n        // Auto-pause\n        pause(btn);\n    }\n\n    chart.update(\n        {\n            subtitle: {\n                text: getSubtitle()\n            }\n        },\n        false,\n        false,\n        false\n    );\n\n    chart.series[0].update({\n        name: input.value,\n        data: getData(input.value)[1]\n    });\n}\n\n/*\n * Play the timeline.\n */\nfunction play(button) {\n    button.title = 'pause';\n    button.className = 'fa fa-pause';\n    chart.sequenceTimer = setInterval(function () {\n        update(1);\n    }, 500);\n}\n\nbtn.addEventListener('click', function () {\n    if (chart.sequenceTimer) {\n        pause(this);\n    } else {\n        play(this);\n    }\n});\n/*\n * Trigger the update on the range bar click.\n */\ninput.addEventListener('input', function () {\n    update();\n});\n","css":"@import \"https://netdna.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css\";\n\n.highcharts-figure {\n    margin: 0;\n}\n\n#play-controls {\n    max-width: 600px;\n    margin: 1em auto;\n}\n\n#container {\n    height: 600px;\n    max-width: 1000px;\n    margin: 0 auto;\n}\n\n#play-pause-button {\n    margin-left: 10px;\n    width: 50px;\n    height: 50px;\n    cursor: pointer;\n    border: 1px solid rgba(2, 117, 255, 1);\n    border-radius: 25px;\n    color: white;\n    background-color: rgba(2, 117, 255, 1);\n    transition: background-color 250ms;\n}\n\n#play-pause-button:hover {\n    background-color: rgba(2, 117, 255, 0.5);\n}\n\n#play-range {\n    transform: translateY(2.5px);\n    width: calc(100% - 90px);\n    background: #f8f8f8;\n}\n","html":"\n<figure class=\"highcharts-figure\">\n  <div id=\"parent-container\">\n    <div id=\"play-controls\">\n      <button id=\"play-pause-button\" class=\"fa fa-play\" title=\"play\"></button>\n      <input id=\"play-range\" type=\"range\" value=\"1965\" min=\"1965\" max=\"2021\" />\n    </div>\n    <div id=\"container\"></div>\n  </div>\n</figure>","npm":"// 安装\nnpm install highcharts@11.0.0 --save\n\n// import 模块 \nimport Highcharts from 'highcharts';\n\n// 初始化模块\n","scripts":["https://code.highcharts.com/11.0.0/highcharts.js"]}