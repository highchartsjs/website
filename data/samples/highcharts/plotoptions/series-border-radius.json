{"js":"Highcharts.chart('container-1', {\n    chart: {\n        type: 'column'\n    },\n    xAxis: {\n        categories: ['Apples', 'Pears', 'Bananas', 'Oranges']\n    },\n    accessibility: {\n        enabled: false\n    },\n    title: {\n        text: 'Highcharts with rounded corners'\n    },\n    plotOptions: {\n        series: {\n            borderRadius: `${document.getElementById('range').value}%`,\n            borderWidth: 2,\n            borderColor: '#666',\n            dataLabels: {\n                enabled: true\n            },\n            stacking: 'normal'\n        }\n    },\n    series: [{\n        data: [50, 50, 500, 90],\n        name: 'Norway'\n    }, {\n        data: [50, 250, 260, -50],\n        name: 'Sweden'\n    }, {\n        data: [150, 20, 30, -120],\n        name: 'Denmark'\n    }],\n    colors: ['#d7bfff', '#af80ff', '#5920b9', '#48208b']\n});\n\nHighcharts.chart('container-2', {\n    chart: {\n        type: 'pie'\n    },\n    xAxis: {\n        categories: ['Apples', 'Pears', 'Bananas', 'Oranges']\n    },\n    accessibility: {\n        enabled: false\n    },\n    title: {\n        text: 'Pie with rounded corners'\n    },\n    plotOptions: {\n        series: {\n            borderRadius: `${document.getElementById('range').value}%`,\n            borderWidth: 2,\n            borderColor: 'white',\n            dataLabels: {\n                enabled: false\n            },\n            size: '80%',\n            innerSize: '50%'\n        }\n    },\n    series: [\n        {\n            data: [{\n                y: 1,\n                sliced: true\n            }, 3, 2, 4],\n            name: 'Norway'\n        }\n    ],\n    colors: ['#d7bfff', '#af80ff', '#5920b9', '#48208b']\n});\n\n// Common range input\nconst label = document.querySelector('label[for=\"range\"]');\nconst updateLabel = input => {\n    label.innerText = `${input.value}%`;\n\n    const position = (input.value - input.min) / (input.max - input.min),\n        percent = Math.round(position * 100),\n        pxAdjust = Math.round(label.offsetWidth * position);\n    label.style.left = `calc(${percent}% - ${pxAdjust}px)`;\n};\nupdateLabel(document.getElementById('range'));\n\ndocument.getElementById('range').addEventListener('input', e => {\n    updateLabel(e.target);\n\n    Highcharts.charts.forEach(chart => {\n        chart.update({\n            plotOptions: {\n                series: {\n                    borderRadius: `${e.target.value}%`\n                }\n            }\n        }, undefined, undefined, false);\n    });\n});\n\n\n// Buttons for the column chart\ndocument.querySelectorAll('button.corner-radius').forEach(btn => {\n    btn.addEventListener(\n        'click',\n        () => {\n            Highcharts.charts.forEach(chart => {\n                chart.update({\n                    plotOptions: {\n                        series: {\n                            borderRadius: btn.dataset.value\n                        }\n                    }\n                });\n            });\n        }\n    );\n});\n\ndocument.querySelectorAll('button.inverted').forEach(btn => {\n    btn.addEventListener(\n        'click',\n        () => {\n            Highcharts.charts[0].update({\n                chart: {\n                    inverted: btn.dataset.value === 'true'\n                }\n            });\n        }\n    );\n});\n\ndocument.querySelectorAll('button.polar').forEach(btn => {\n    btn.addEventListener(\n        'click',\n        () => {\n            Highcharts.charts[0].update({\n                chart: {\n                    polar: btn.dataset.value === 'true'\n                }\n            });\n        }\n    );\n});\n","css":"#outer-container {\n    min-width: 300px;\n    max-width: 1200px;\n    margin: 1em auto;\n}\n\n#outer-container .button-group {\n    padding-right: 2em;\n}\n\n#outer-container button {\n    padding: 1em;\n    border: 0;\n    border-radius: 2px;\n    font-size: 12px;\n}\n\n.flex {\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n}\n\n.flex .cell {\n    width: 49%;\n    padding-right: 1%;\n}\n\n@media only screen and (max-width: 600px) {\n    .flex .cell {\n        width: 100%;\n        padding-right: 0;\n    }\n}\n\n.container {\n    height: 400px;\n    box-shadow: 1px 2px 5px rgba(0 0 0 / 0.2);\n    margin: 1rem 0;\n}\n\n.range-container {\n    position: relative;\n    padding-top: 2em;\n}\n\ninput#range {\n    width: 100%;\n}\n\nlabel[for=\"range\"] {\n    top: 0;\n    position: absolute;\n}\n","html":"\n<div id=\"outer-container\">\n\n    <div class=\"range-container\">\n        <label for=\"range\"></label>\n        <input id=\"range\" type=\"range\" min=\"0\" max=\"50\" value=\"10\">\n    </div>\n\n    <span class=\"button-group\">\n        <button class=\"corner-radius\" data-value=\"50%\">50% radius</button>\n        <button class=\"corner-radius\" data-value=\"10px\">10px radius</button>\n        <button class=\"corner-radius\" data-value=\"0\">No radius</button>\n    </span>\n\n    <div class=\"flex\">\n        <div class=\"cell\">\n            <div id=\"container-1\" class=\"container\"></div>\n\n            <span class=\"button-group\">\n                <button class=\"inverted\" data-value=\"false\">Column</button>\n                <button class=\"inverted\" data-value=\"true\">Bar</button>\n                <button class=\"polar\" data-value=\"false\">Cartesian</button>\n                <button class=\"polar\" data-value=\"true\">Polar</button>\n            </span>\n        </div>\n        <div class=\"cell\">\n            <div id=\"container-2\"  class=\"container\"></div>\n        </div>\n    </div>\n\n</div>\n","npm":"// 安装\nnpm install highcharts@11.0.1 --save\n\n// import 模块 \nimport Highcharts     from 'highcharts';\nimport HighchartsMore from 'highcharts/highcharts-more';\n\n// 初始化模块\nHighchartsMore(Highcharts);\n","scripts":["https://code.highcharts.com/11.0.1/highcharts.js","https://code.highcharts.com/11.0.1/highcharts-more.js"]}