{"js":"// Highcharts plugin for adding better XLS and XLSX support through the third\n// party zipcelx library.\n(function (H) {\n    if (window.zipcelx && H.getOptions().exporting) {\n        H.Chart.prototype.downloadXLSX = function () {\n            var div = document.createElement('div'),\n                name,\n                xlsxRows = [],\n                rows;\n            div.style.display = 'none';\n            document.body.appendChild(div);\n            rows = this.getDataRows(true);\n            xlsxRows = rows.slice(1).map(function (row) {\n                return row.map(function (column) {\n                    return {\n                        type: typeof column === 'number' ? 'number' : 'string',\n                        value: column\n                    };\n                });\n            });\n\n            // Get the filename, copied from the Chart.fileDownload function\n            if (this.options.exporting.filename) {\n                name = this.options.exporting.filename;\n            } else if (this.title && this.title.textStr) {\n                name = this.title.textStr.replace(/ /g, '-').toLowerCase();\n            } else {\n                name = 'chart';\n            }\n\n            window.zipcelx({\n                filename: name,\n                sheet: {\n                    data: xlsxRows\n                }\n            });\n        };\n\n        // Default lang string, overridable in i18n options\n        H.getOptions().lang.downloadXLSX = 'Download XLSX';\n\n        // Add the menu item handler\n        H.getOptions().exporting.menuItemDefinitions.downloadXLSX = {\n            textKey: 'downloadXLSX',\n            onclick: function () {\n                this.downloadXLSX();\n            }\n        };\n\n        // Replace the menu item\n        var menuItems = H.getOptions().exporting.buttons.contextButton.menuItems;\n        menuItems[menuItems.indexOf('downloadXLS')] = 'downloadXLSX';\n    }\n\n}(Highcharts));\n\nHighcharts.chart('container', {\n\n    title: {\n        text: 'Data export with third party XLSX generator'\n    },\n\n    subtitle: {\n        text: 'Go to menu => download XLSX to test'\n    },\n\n    xAxis: {\n        categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n    },\n\n    series: [{\n        data: [29.9, 71.5, 106.4, 129.2, 144.0, 176.0, 135.6, 148.5, 216.4, 194.1, 95.6, 54.4]\n    }]\n});\n","css":".chart-outer {\n    max-width: 800px;\n    margin: 2em auto;\n}\n\n#container {\n    height: 300px;\n    margin-top: 2em;\n}\n\n.highcharts-data-table table {\n    border-collapse: collapse;\n    border-spacing: 0;\n    background: white;\n}\n\n.highcharts-data-table td,\n.highcharts-data-table th {\n    font-family: sans-serif;\n    font-size: 10pt;\n    border: 1px solid silver;\n    padding: 0.5em;\n}\n","html":"\n<!-- zipcelx is a non-Highcharts dependency for exporting to XLS and XLSX. It\nis licenced under the MIT license, see\nhttps://github.com/egeriis/zipcelx/blob/master/LICENSE -->\n\n<div class=\"chart-outer\">\n    <div id=\"container\"></div>\n    <!-- data table is inserted here -->\n</div>\n\n\n\n","npm":"// 安装\nnpm install highcharts@11.0.0 --save\n\n// import 模块 \nimport Highcharts from 'highcharts';\nimport Exporting  from 'highcharts/modules/exporting';\nimport ExportData from 'highcharts/modules/export-data';\nimport Standalone from 'https://cdn.jsdelivr.net/gh/egeriis/zipcelx/lib/standalone.js';\n\n// 初始化模块\nExporting(Highcharts);\nExportData(Highcharts);\nStandalone(Highcharts);\n","scripts":["https://code.highcharts.com/11.0.0/highcharts.js","https://code.highcharts.com/11.0.0/modules/exporting.js","https://code.highcharts.com/11.0.0/modules/export-data.js","https://cdn.jsdelivr.net/gh/egeriis/zipcelx/lib/standalone.js"]}