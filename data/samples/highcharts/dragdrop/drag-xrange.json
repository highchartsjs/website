{"js":"var setDragStatus = function (status) {\n    document.getElementById('dragstatus').innerText = status;\n};\n\nHighcharts.chart('container', {\n    chart: {\n        animation: false,\n        type: 'xrange',\n        zoomType: 'x'\n    },\n\n    title: {\n        text: 'Highcharts draggable xrange demo'\n    },\n\n    tooltip: {\n        headerFormat: '<span style=\"font-size: 10px\">{point.yCategory}</span><br/>',\n        pointFormat: '{point.name}'\n    },\n\n    plotOptions: {\n        series: {\n            minPointLength: 5, // Always show points, even when resized down\n            dataLabels: {\n                enabled: true,\n                format: '{point.name}'\n            },\n            dragDrop: {\n                draggableX: true,\n                draggableY: true,\n                dragMinY: 0,\n                dragMaxY: 2,\n                dragMinX: Date.UTC(2014, 10, 15),\n                dragMaxX: Date.UTC(2015, 0, 10),\n                liveRedraw: false,\n                groupBy: 'groupId' // Group data points with the same groupId\n            },\n            point: {\n                events: {\n                    dragStart: function (e) {\n                        setDragStatus('Drag started at page coordinates ' +\n                                e.chartX + '/' + e.chartY + (\n                            e.updateProp ?\n                                '. Updating ' + e.updateProp :\n                                ''\n                        ) + '. ');\n                    },\n                    drag: function (e) {\n                        // Returning false stops the drag and drops. Example:\n                        /*\n                        if (e.newPoint && e.newPoint.x < 300) {\n                            return false;\n                        }\n                        */\n                        var status = 'Dragging \"' +\n                            (this.name || this.id) + '\". ' + e.numNewPoints +\n                            ' point(s) selected.';\n\n                        // If more than one point is being updated, see\n                        // e.newPoints for a hashmap of these. Here we just add\n                        // info if there is a single point.\n                        if (e.newPoint) {\n                            status += ' New x/x2/y: ' + e.newPoint.x +\n                                '/' + e.newPoint.x2 + '/' + e.newPoint.y;\n                        }\n\n                        setDragStatus(status);\n                    },\n                    drop: function (e) {\n                        // The default action here runs point.update on the\n                        // new points. Return false to stop this. Here we stop\n                        // the \"Group A\" points from being moved to the\n                        // \"Prototyping\" row.\n                        if (\n                            this.groupId === 'Group A' &&\n                            e.newPoints[this.id].newValues.y === 0\n                        ) {\n                            setDragStatus('Drop was blocked by event handler.');\n                            return false;\n                        }\n\n                        setDragStatus(\n                            'Dropped ' + e.numNewPoints + ' point(s)'\n                        );\n                    }\n                }\n            }\n        }\n    },\n\n    xAxis: {\n        type: 'datetime',\n        min: Date.UTC(2014, 10, 15),\n        max: Date.UTC(2015, 0, 10)\n    },\n\n    yAxis: {\n        title: '',\n        min: 0,\n        max: 2,\n        categories: ['Prototyping', 'Development', 'Testing']\n    },\n\n    series: [{\n        name: 'Project 1',\n        cursor: 'move',\n        data: [{\n            x: Date.UTC(2014, 11, 1),\n            x2: Date.UTC(2014, 11, 4),\n            y: 0,\n            name: 'Task 1'\n        }, {\n            x: Date.UTC(2014, 11, 2),\n            x2: Date.UTC(2014, 11, 5),\n            y: 1,\n            name: 'Task 2'\n        }, {\n            x: Date.UTC(2014, 11, 9),\n            x2: Date.UTC(2014, 11, 19),\n            y: 1,\n            name: 'No drag Y',\n            // Disable draggable Y for this point\n            dragDrop: {\n                draggableY: false\n            }\n        }, {\n            x: Date.UTC(2014, 11, 8),\n            x2: Date.UTC(2014, 11, 9),\n            y: 2,\n            groupId: 'Group A',\n            dragDrop: {\n                draggableX1: false,\n                draggableX2: false\n            }\n        }, {\n            x: Date.UTC(2014, 11, 10),\n            x2: Date.UTC(2014, 11, 23),\n            y: 2,\n            name: 'Grouped, no prototyping',\n            groupId: 'Group A',\n            dragDrop: {\n                draggableX1: false,\n                draggableX2: false\n            }\n        }, {\n            x: Date.UTC(2014, 11, 25),\n            x2: Date.UTC(2014, 11, 26),\n            y: 2,\n            groupId: 'Group A',\n            dragDrop: {\n                draggableX1: false,\n                draggableX2: false\n            }\n        }, {\n            x: Date.UTC(2014, 11, 24),\n            x2: Date.UTC(2014, 11, 26),\n            y: 1,\n            groupId: 'Group B',\n            dragDrop: {\n                draggableX1: false,\n                draggableX2: false\n            }\n        }, {\n            x: Date.UTC(2014, 11, 26),\n            x2: Date.UTC(2014, 11, 28),\n            y: 1,\n            name: 'Grouped',\n            groupId: 'Group B',\n            dragDrop: {\n                draggableX1: false,\n                draggableX2: false\n            }\n        }, {\n            x: Date.UTC(2014, 11, 28),\n            x2: Date.UTC(2014, 11, 30),\n            y: 1,\n            groupId: 'Group B',\n            dragDrop: {\n                draggableX1: false,\n                draggableX2: false\n            }\n        }]\n    }]\n});\n","css":"#container {\n    min-width: 300px;\n    height: 500px;\n}\n","html":"\n<div id=\"container\"></div>\n<div id=\"dragstatus\"></div>\n","npm":"// 安装\nnpm install highcharts@11.0.1 --save\n\n// import 模块 \nimport Highcharts      from 'highcharts';\nimport Xrange          from 'highcharts/modules/xrange';\nimport DraggablePoints from 'highcharts/modules/draggable-points';\n\n// 初始化模块\nXrange(Highcharts);\nDraggablePoints(Highcharts);\n","scripts":["https://code.highcharts.com/11.0.1/highcharts.js","https://code.highcharts.com/11.0.1/modules/xrange.js","https://code.highcharts.com/11.0.1/modules/draggable-points.js"]}