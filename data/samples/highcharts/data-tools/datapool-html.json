{"js":"const container = document.querySelector('#container');\nconst dataPool = new Highcharts.DataPool();\nconst escapeStringForHTML = Highcharts.A11yHTMLUtilities.escapeStringForHTML;\nconst getConnectorSelect = document.querySelector('#get-connector-select');\nconst log = document.querySelector('#log');\n\n\n// Set Connector Options\n\nconst setConnectorButton = document.querySelector('#set-connector-button');\nconst setConnectorName = document.querySelector('#set-connector-name');\nconst setConnectorOptions = document.querySelector('#set-connector-options');\nconst setConnectorType = document.querySelector('#set-connector-type');\n\nsetConnectorButton.addEventListener('click', () => {\n    const name = (\n        setConnectorName.value.trim() ||\n        'Untitled ' + getConnectorSelect.options.length\n    );\n\n    dataPool.setConnectorOptions({\n        name,\n        type: setConnectorType.value,\n        options: JSON.parse(setConnectorOptions.value)\n    });\n\n    const selectOption = document.createElement('option');\n    selectOption.innerText = name;\n    getConnectorSelect.appendChild(selectOption);\n\n    setConnectorName.value = (\n        'My Connector ' +\n        (getConnectorSelect.childNodes.length + 1)\n    );\n});\n\nsetConnectorType.addEventListener('input', () => {\n    const options = {\n        CSV: {\n            csv: 'a,b,c\\n1,2,3\\n4,5,6',\n            csvURL: null\n        },\n        GoogleSheets: {\n            googleAPIKey: 'AIzaSyCQ0Jh8OFRShXam8adBbBcctlbeeA-qJOk',\n            googleSpreadsheetKey: '1U17c4GljMWpgk1bcTvUzIuWT8vdOnlCBHTm5S8Jh8tw'\n        }\n    }[setConnectorType.value];\n\n    setConnectorOptions.value = JSON.stringify(options || {}, null, '  ');\n});\n\nsetConnectorType.dispatchEvent(new Event('input')); // prefill options field\n\n// Get Connector Table\n\nconst getConnectorButton = document.querySelector('#get-connector-button');\n\ngetConnectorButton.addEventListener('click', async () => {\n    log.innerText = '';\n    container.innerText = '';\n\n    await delay(500);\n\n    const timeStamp = new Date().getTime();\n    log.innerText = '0ms Loading connector...\\n';\n\n    const table = await dataPool.getConnectorTable(getConnectorSelect.value);\n\n    const timeDelta = (new Date().getTime() - timeStamp);\n    log.innerText += timeDelta + 'ms Connector loaded.\\n';\n\n    renderTable(container, table);\n});\n\n\nfunction delay(milliseconds) {\n    return new Promise(resolve => {\n        window.setTimeout(resolve, milliseconds);\n    });\n}\n\n// Render Simple HTML Table\n\nfunction renderTable(container, table) {\n    const html = [];\n\n    html.push('<table>');\n    html.push('<thead>');\n    html.push('<tr>');\n    for (const column of table.getColumnNames()) {\n        html.push('<th>', escapeStringForHTML(column), '</th>');\n    }\n    html.push('</tr>');\n    html.push('</thead>');\n    html.push('<tbody>');\n    for (const row of table.getRows()) {\n        html.push('<tr>');\n        for (const value of row) {\n            html.push('<td>', escapeStringForHTML('' + value), '</td>');\n        }\n        html.push('</tr>');\n    }\n    html.push('</tbody>');\n    html.push('</table>');\n\n    container.innerHTML = html.join('');\n}\n","css":":root {\n    --color-background: #fff;\n    --color-tbody-background: #eee;\n    --color-text: #000;\n    --color-thead-background: #ddd;\n}\n\n@media (prefers-color-scheme: dark) {\n    :root {\n        --color-background: #111;\n        --color-tbody-background: #222;\n        --color-text: #eee;\n        --color-thead-background: #333;\n    }\n}\n\nhtml {\n    background-color: var(--color-background);\n    color: var(--color-text);\n}\n\nfieldset {\n    border: 1px solid #ccc;\n    display: grid;\n    grid-gap: 1em 0.5em;\n    grid-template-columns: 0fr 1fr;\n    text-align: center;\n}\n\nfieldset,\np {\n    max-width: 30em;\n}\n\nfieldset textarea {\n    white-space: pre;\n    overflow-wrap: normal;\n    overflow-x: scroll;\n}\n\ntable {\n    min-width: 50%;\n}\n\ntable td,\ntable th {\n    line-height: 1.5em;\n    padding: 0.25em 0.5em;\n    vertical-align: top;\n    white-space: pre-wrap;\n}\n\ntable thead th {\n    background-color: var(--color-thead-background);\n}\n\ntable tbody td {\n    background-color: var(--color-tbody-background);\n}\n\n@media (max-width: 600px) {\n    form {\n        flex-direction: column;\n    }\n}\n","html":"\n<fieldset>\n    <legend><h4>DataPool.setConnectorOptions()</h4></legend>\n    <label for=\"set-connector-name\">Name:</label>\n    <input type=\"text\" id=\"set-connector-name\" value=\"My Connector\" />\n    <label for=\"set-connector-type\">Type:</label>\n    <select type=\"text\" id=\"set-connector-type\">\n        <option>CSV</option>\n        <option>GoogleSheets</option>\n    </select>\n    <label for=\"set-connector-options\">Options:</label>\n    <textarea id=\"set-connector-options\" rows=\"4\"></textarea>\n    <span></span>\n    <button type=\"button\" id=\"set-connector-button\">Set Connector Options</label>\n</fieldset>\n\n<p>\n    This demo shows the loading-on-demand nature of the DataPool.\n    Use the form fields above to configure connectors for the pool.\n    Select one connector below to load a table from.\n    Load a connector multiple times to see the difference to the first loading.\n</p>\n\n<fieldset>\n    <legend><h4>DataPool.getConnectorTable()</h4></legend>\n    <label for=\"get-connector-select\">Name:</label>\n    <select id=\"get-connector-select\"></select>\n    <span></span>\n    <button type=\"button\" id=\"get-connector-button\">Load Connector Table</label>\n</fieldset>\n\n<div id=\"log\"></div>\n<div id=\"container\"></div>\n","npm":"// 安装\nnpm install highcharts@11.0.1 --save\n\n// import 模块 \nimport Highcharts    from 'highcharts';\nimport DataTools     from 'highcharts/modules/data-tools';\nimport Accessibility from 'highcharts/modules/accessibility';\n\n// 初始化模块\nDataTools(Highcharts);\nAccessibility(Highcharts);\n","scripts":["https://code.highcharts.com/11.0.1/highcharts.js","https://code.highcharts.com/11.0.1/modules/data-tools.js","https://code.highcharts.com/11.0.1/modules/accessibility.js"]}