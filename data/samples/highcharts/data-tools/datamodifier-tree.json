{"js":"const sortModifier = new Highcharts.DataModifier.types.Sort();\nconst rangeModifier = new Highcharts.DataModifier.types.Range();\nconst invertModifier = new Highcharts.DataModifier.types.Invert();\nconst chainModifier = new Highcharts.DataModifier.types.Chain();\n\nconst table = new Highcharts.DataTable({\n    columns: {\n        name: ['Bakso', 'Dahipuri', 'Mochi', 'Imqaret', 'Mochi', 'Bakso', 'Empanada', 'Kebab', 'Rustico', 'Obatzda'],\n        x: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9],\n        y: [28, 30, 13, 9, 39, 2, 31, 11, 18, 15]\n    }\n});\n\n\n// \"Run Modifiers\" Button\n\ndocument.querySelector('#modify').addEventListener('click', () => {\n    const sortModifierActivate = document.querySelector('#sortmodifier-activate');\n    const rangeModifierActivate = document.querySelector('#rangemodifier-activate');\n    const invertModifierActivate = document.querySelector('#invertmodifier-activate');\n\n    // reset chain\n    chainModifier.clear();\n\n    // add sort to chain\n    if (sortModifierActivate.checked) {\n        sortModifier.options.direction = document\n            .querySelector('#sortmodifier-direction').value;\n        sortModifier.options.orderByColumn = document\n            .querySelector('#sortmodifier-orderbycolumn').value;\n        sortModifier.options.orderInColumn = document\n            .querySelector('#sortmodifier-orderincolumn').value || void 0;\n        chainModifier.add(sortModifier);\n    }\n\n    // add range to chain\n    if (rangeModifierActivate.checked) {\n        rangeModifier.options.ranges = [{\n            column: document.querySelector('#rangemodifier-ranges-column')\n                .value,\n            maxValue: document.querySelector('#rangemodifier-ranges-maxvalue')\n                .value || void 0,\n            minValue: document.querySelector('#rangemodifier-ranges-minvalue')\n                .value || void 0\n        }];\n        rangeModifier.options.strict = document\n            .querySelector('#rangemodifier-strict').value === 'true';\n        chainModifier.add(rangeModifier);\n    }\n\n    // add invert to chain\n    if (invertModifierActivate.checked) {\n        chainModifier.add(invertModifier);\n    }\n\n    // apply modifier changes\n    table.setModifier(chainModifier);\n    console.log(table);\n\n    // render results\n    renderTable(document.querySelector('#container'), table);\n    renderTable(document.querySelector('#container2'), table.modified);\n});\n\n\n// Render Simple HTML Table\n\nfunction renderTable(container, table) {\n    const html = [];\n\n    html.push('<table>');\n    html.push('<thead>');\n    html.push('<tr>');\n    for (const column of table.getColumnNames()) {\n        html.push('<th>', `${column}`, '</th>');\n    }\n    html.push('</tr>');\n    html.push('</thead>');\n    html.push('<tbody>');\n    for (const row of table.getRows()) {\n        html.push('<tr>');\n        for (const value of row) {\n            if (value instanceof Highcharts.DataTable) {\n                const td = document.createElement('td');\n                renderTable(td, value);\n                html.push('<td>', `${td.innerHTML}`, '</td>');\n            } else {\n                html.push('<td>', `${value}`, '</td>');\n            }\n        }\n        html.push('</tr>');\n    }\n    html.push('</tbody>');\n    html.push('</table>');\n\n    container.innerHTML = html.join('\\n');\n}\n","css":":root {\n    --color-background: #fff;\n    --color-comment: #080;\n    --color-foreground: #000;\n    --color-property: #088;\n    --color-tbody-background: #eee;\n    --color-thead-background: #ddd;\n}\n\n@media (prefers-color-scheme: dark) {\n    :root {\n        --color-background: #111;\n        --color-comment: #0c0;\n        --color-foreground: #eee;\n        --color-property: #0cc;\n        --color-tbody-background: #222;\n        --color-thead-background: #333;\n    }\n}\n\nhtml {\n    background-color: var(--color-background);\n    color: var(--color-foreground);\n}\n\nbutton,\ninput,\nselect {\n    vertical-align: bottom;\n}\n\ndd > input[type=\"checkbox\"] + div > h4 label::before {\n    content: \"▷ \";\n}\n\ndd > input[type=\"checkbox\"] + div > pre {\n    display: none;\n}\n\ndd > input[type=\"checkbox\"]:checked + div > h4 label::before {\n    content: \"▽ \";\n}\n\ndd > input[type=\"checkbox\"]:checked + div > pre {\n    display: block;\n}\n\ndt {\n    font-weight: bold;\n    margin-top: 1em;\n}\n\nfieldset {\n    margin: 1em 0;\n}\n\nh4 {\n    margin: 0;\n}\n\nh4 label {\n    cursor: pointer;\n}\n\npre label {\n    color: var(--color-property);\n    font-weight: bold;\n}\n\npre span {\n    color: var(--color-comment);\n    font-style: italic;\n}\n\nsection {\n    display: flex;\n}\n\nsection > div {\n    flex-grow: 1;\n    margin: 0 auto;\n}\n\ntable {\n    width: 99%;\n}\n\ntable td,\ntable th {\n    line-height: 1.5em;\n    padding: 0.25em 0.5em;\n    vertical-align: top;\n    width: 33%;\n}\n\ntable thead th {\n    background-color: var(--color-thead-background);\n}\n\ntable tbody td {\n    background-color: var(--color-tbody-background);\n}\n","html":"\n<form id=\"form\">\n    <dl>\n        <dt>ChainModifier</dt>\n        <dd>\n            <p>A ChainModifier executes multiple modifiers in order.</p>\n            <input type=\"checkbox\" id=\"chainmodifier-options\" hidden />\n            <div>\n                <h4><label for=\"chainmodifier-options\">ChainModifier.options</label></h4>\n<!-- options -->\n<pre>new ChainModifier({\n    <span>/* Whether to revert the order before execution. */</span>\n    <label for=\"chainmodifier-reverse\">reverse: </label><select id=\"chainmodifier-reverse\">\n        <option>false</option>\n        <option>true</option>\n    </select>\n});</pre>\n<!-- /options -->\n            </div>\n            <dl>\n                <dt>SortModifier</dt>\n                <dd>\n                    <p>Sort table rows according to values of a column.</p>\n                    <p>\n                        <input type=\"checkbox\" id=\"sortmodifier-activate\" />\n                        <label for=\"sortmodifier-activate\">activate</label>\n                    </p>\n                    <input type=\"checkbox\" id=\"sortmodifier-options\" hidden />\n                    <div>\n                        <h4><label for=\"sortmodifier-options\">SortModifier.options</label></h4>\n<!-- options -->\n<pre>new SortModifier({\n    <span>/* Direction of sorting. (Default: desc) */</span>\n    <label for=\"sortmodifier-direction\">direction: </label><select id=\"sortmodifier-direction\">\n        <option>asc</option>\n        <option selected>desc</option>\n    </select>\n\n    <span>/* Column with values to order. (Default: y) */</span>\n    <label for=\"sortmodifier-orderbycolumn\">orderByColumn: </label><select id=\"sortmodifier-orderbycolumn\">\n        <option>name</option>\n        <option>x</option>\n        <option selected>y</option>\n    </select>\n\n    <span>/* Column to update with order index instead of change order of rows. */</span>\n    <label for=\"sortmodifier-orderincolumn\">orderInColumn: </label><select id=\"sortmodifier-orderincolumn\">\n        <option value=\"\">[unset]</option>\n        <option>name</option>\n        <option>x</option>\n        <option>y</option>\n    </select>\n});</pre>\n<!-- /options -->\n                    </div>\n                </dd>\n                <dt>RangeModifier</dt>\n                <dd>\n                    <p>A RangeModifier limits the number of rows in a DataTable.</p>\n                    <p>\n                        <input type=\"checkbox\" id=\"rangemodifier-activate\" />\n                        <label for=\"rangemodifier-activate\">activate</label>\n                    </p>\n                    <input type=\"checkbox\" id=\"rangemodifier-options\" hidden />\n                    <div>\n                        <h4><label for=\"rangemodifier-options\">RangeModifier.options</label></h4>\n<!-- options -->\n<pre>new RangeModifier({\n    <span>/* Value ranges to include in the result. */</span>\n    <label>ranges: </label>[\n\n        <span>/* Options to configure a range. */</span>\n        {\n\n            <span>/* Column containing the values to filter. */</span>\n            <label for=\"rangemodifier-ranges-column\">column: </label><select id=\"rangemodifier-ranges-column\">\n                <option>name</option>\n                <option>x</option>\n                <option>y</option>\n            </select>\n\n            <span>/* Maximum including value (`&lt;=` operator). */</span>\n            <label for=\"rangemodifier-ranges-maxvalue\">maxValue: </label><input type=\"text\" id=\"rangemodifier-ranges-maxvalue\" />\n\n            <span>/* Minimum including value (`&gt;=` operator). */</span>\n            <label for=\"rangemodifier-ranges-minvalue\">minValue: </label><input type=\"text\" id=\"rangemodifier-ranges-minvalue\" />\n        }\n    ],\n\n    <span>/* If set to true, it will also compare the value type. */</span>\n    <label for=\"rangemodifier-strict\">strict: </label><select id=\"rangemodifier-strict\">\n        <option selected>false</option>\n        <option>true</option>\n    </select>\n});</pre>\n<!-- /options -->\n                    </div>\n                </dd>\n                <dt>InvertModifier</dt>\n                <dd>\n                    <p>Inverts columns and rows in a table.</p>\n                    <p>\n                        <input type=\"checkbox\" id=\"invertmodifier-activate\" />\n                        <label for=\"invertmodifier-activate\">activate</label>\n                    </p>\n                    <input type=\"checkbox\" id=\"invertmodifier-options\" hidden />\n                    <div>\n                        <h4><label for=\"invertmodifier-options\">InvertModifier.options</label></h4>\n<!-- options -->\n<pre>new InvertModifier({\n    <span>/* InvertModifier works without additional options. */</span>\n});</pre>\n<!-- /options -->\n                    </div>\n                </dd>\n            </dl>\n        </dd>\n    </dl>\n    <button type=\"button\" id=\"modify\">Run Modifiers</button>\n</form>\n\n<h3>Result:</h3>\n<section>\n    <div>\n        <h4>Table</h4>\n        <div id=\"container\"></div>\n    </div>\n    <div>\n        <h4>Table.modified</h4>\n        <div id=\"container2\"></div>\n    </div>\n</section>\n","npm":"// 安装\nnpm install highcharts@11.0.0 --save\n\n// import 模块 \nimport Highcharts from 'highcharts';\nimport DataTools  from 'highcharts/modules/data-tools';\n\n// 初始化模块\nDataTools(Highcharts);\n","scripts":["https://code.highcharts.com/11.0.0/highcharts.js","https://code.highcharts.com/11.0.0/modules/data-tools.js"]}