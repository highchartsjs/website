{"js":"var dirDist50 = \"#E8544E\",\n    dirDist10 = \"#FFD265\",\n    dirDistLess10 = \"#2AA775\";\n\n\n(async () => {\n\n    const topology = await fetch(\n        'https://code.highcharts.com/mapdata/countries/kr/kr-all.topo.json'\n    ).then(response => response.json());\n\n\n    // Initialize the chart\n    var chart = Highcharts.mapChart(\"container\", {\n        title: {\n            text: \"South Korea domestic flight routes\"\n        },\n\n        xAxis: { visible: false },\n        yAxis: { visible: false },\n        legend: {\n            align: \"right\",\n            layout: \"vertical\",\n            x: -50,\n            floating: true,\n            bubbleLegend: {\n                enabled: true,\n                labels: {\n                    format: \"{value:f}\"\n                },\n                borderWidth: 1,\n                borderColor: \"black\",\n                connectorColor: \"black\",\n                connectorDistance: 40,\n                maxSize: 15 * 2,\n                minSize: 5 * 2,\n                ranges: [\n                    {\n                        value: 5,\n                        name: \">10\",\n                        color: \"green\"\n                    },\n                    {\n                        value: 10,\n                        color: \"yellow\"\n                    },\n                    {\n                        value: 50,\n                        color: \"red\"\n                    }\n                ]\n            }\n        },\n\n        mapNavigation: {\n            enabled: true\n        },\n\n        tooltip: {\n            useHTML: true,\n            headerFormat: '',\n            pointFormat: '<b>{point.id}</b>'\n        },\n\n        plotOptions: {\n            series: {\n                marker: {\n                    fillColor: \"#FFFFFF\",\n                    lineWidth: 2,\n                    lineColor: Highcharts.getOptions().colors[1]\n                }\n            }\n        },\n\n        series: [\n            {\n                // Use the gb-all map with no data as a basemap\n                mapData: topology,\n                name: \"Basemap\",\n                borderColor: \"#707070\",\n                nullColor: \"rgba(200, 200, 200, 0.3)\",\n                showInLegend: false\n            },\n            {\n                // Specify cities using lat/lon\n                type: \"mappoint\",\n                name: \"Airport\",\n                dataLabels: {\n                    format: \"{point.id}\"\n                },\n                // Use id instead of name to allow for referencing points later using\n                // chart.get\n                data: [\n                    {\n                        id: \"Seoul ICN\",\n                        lat: 37.4602,\n                        lon: 126.4407,\n                        marker: {\n                            lineWidth: 0,\n                            radius: 15,\n                            fillColor: dirDist50\n                        }\n                    },\n                    {\n                        id: \"Busan\",\n                        lat: 35.166668,\n                        lon: 129.066666,\n                        marker: {\n                            lineWidth: 0,\n                            radius: 15,\n                            fillColor: dirDist50\n                        }\n                    },\n                    {\n                        id: \"Jeju\",\n                        lat: 33.4996,\n                        lon: 126.5312,\n                        marker: {\n                            lineWidth: 0,\n                            radius: 15,\n                            fillColor: dirDist50\n                        }\n                    },\n                    {\n                        id: \"Wonju\",\n                        lat: 37.3422,\n                        lon: 127.9202,\n                        marker: {\n                            lineWidth: 0,\n                            radius: 5,\n                            fillColor: dirDistLess10\n                        }\n                    },\n                    {\n                        id: \"Daegu\",\n                        lat: 35.8714,\n                        lon: 128.6014,\n                        marker: {\n                            lineWidth: 0,\n                            radius: 5,\n                            fillColor: dirDistLess10\n                        }\n                    },\n                    {\n                        id: \"Yangyang\",\n                        lat: 38.0754,\n                        lon: 128.6189,\n                        marker: {\n                            lineWidth: 0,\n                            radius: 5,\n                            fillColor: dirDistLess10\n                        }\n                    },\n                    {\n                        id: \"Gunsan\",\n                        lat: 35.9677,\n                        lon: 126.7366,\n                        marker: {\n                            lineWidth: 0,\n                            radius: 5,\n                            fillColor: dirDistLess10\n                        }\n                    },\n                    {\n                        id: \"Gwangju\",\n                        lat: 35.1595,\n                        lon: 126.8526,\n                        marker: {\n                            lineWidth: 0,\n                            radius: 5,\n                            fillColor: dirDistLess10\n                        }\n                    },\n                    {\n                        id: \"Pohang\",\n                        lat: 36.019,\n                        lon: 129.3435,\n                        marker: {\n                            lineWidth: 0,\n                            radius: 10,\n                            fillColor: dirDist10\n                        }\n                    },\n                    {\n                        id: \"Cheongju\",\n                        lat: 36.6424,\n                        lon: 127.489,\n                        marker: {\n                            lineWidth: 0,\n                            radius: 10,\n                            fillColor: dirDist10\n                        }\n                    },\n                    {\n                        id: \"Seoul GMP\",\n                        lat: 37.5587,\n                        lon: 126.7945,\n                        marker: {\n                            lineWidth: 0,\n                            radius: 10,\n                            fillColor: dirDist10\n                        }\n                    },\n                    {\n                        id: \"Ulsan\",\n                        lat: 35.5384,\n                        lon: 129.3114,\n                        marker: {\n                            lineWidth: 0,\n                            radius: 5,\n                            fillColor: dirDistLess10\n                        }\n                    },\n                    {\n                        id: \"Yeosu\",\n                        lat: 34.7604,\n                        lon: 127.6622,\n                        marker: {\n                            lineWidth: 0,\n                            radius: 5,\n                            fillColor: dirDistLess10\n                        }\n                    },\n                    {\n                        id: \"Sacheon\",\n                        lat: 35.0038,\n                        lon: 128.0642,\n                        marker: {\n                            lineWidth: 0,\n                            radius: 5,\n                            fillColor: dirDistLess10\n                        }\n                    }\n                ]\n            },\n            {\n                type: \"bubble\",\n                showInLegend: false,\n                data: [\n                    {\n                        z: 5\n                    },\n                    {\n                        z: 10\n                    },\n                    {\n                        z: 15\n                    }\n                ]\n            }\n        ]\n    });\n\n    function pointsToPath(fromPoint, toPoint, invertArc) {\n        const\n            from = chart.mapView.lonLatToProjectedUnits(fromPoint),\n            to = chart.mapView.lonLatToProjectedUnits(toPoint),\n            curve = 0.05,\n            arcPointX = (from.x + to.x) / (invertArc ? 2 + curve : 2 - curve),\n            arcPointY = (from.y + to.y) / (invertArc ? 2 + curve : 2 - curve);\n        return [\n            ['M', from.x, from.y],\n            ['Q', arcPointX, arcPointY, to.x, to.y]\n        ];\n    }\n\n    var seoulICNPoint = chart.get(\"Seoul ICN\"),\n        seoulGMPPoint = chart.get(\"Seoul GMP\"),\n        busanPoint = chart.get(\"Busan\"),\n        jejuPoint = chart.get(\"Jeju\");\n\n    // Add a series of lines for Seoul\n    chart.addSeries({\n        name: \"Seoul flight routes\",\n        type: \"mapline\",\n        dashStyle: \"Dot\",\n        lineWidth: 2,\n        color: Highcharts.getOptions().colors[4],\n        data: [\n            {\n                id: \"Seoul - Daegu\",\n                path: pointsToPath(seoulICNPoint, chart.get(\"Daegu\"))\n            },\n            {\n                id: \"Seoul - Busan\",\n                path: pointsToPath(seoulICNPoint, chart.get(\"Busan\"), true)\n            }\n        ]\n    });\n    // Add a series of lines for Seoul GMP\n    chart.addSeries({\n        name: \"Seoul GMP flight routes\",\n        type: \"mapline\",\n        dashStyle: \"ShortDot\",\n        lineWidth: 2,\n        color: Highcharts.getOptions().colors[1],\n        data: [\n            {\n                id: \"Seoul - Daegu\",\n                path: pointsToPath(seoulGMPPoint, chart.get(\"Daegu\"))\n            },\n            {\n                id: \"Seoul - Busan\",\n                path: pointsToPath(seoulGMPPoint, chart.get(\"Busan\"), true)\n            },\n            {\n                id: \"Seoul - Pohang\",\n                path: pointsToPath(seoulGMPPoint, chart.get(\"Pohang\"), true)\n            },\n            {\n                id: \"Seoul - Gwangju\",\n                path: pointsToPath(seoulGMPPoint, chart.get(\"Gwangju\"), true)\n            },\n            {\n                id: \"Seoul - Yeosu\",\n                path: pointsToPath(seoulGMPPoint, chart.get(\"Yeosu\"), true)\n            },\n            {\n                id: \"Seoul - Sacheon\",\n                path: pointsToPath(seoulGMPPoint, chart.get(\"Sacheon\"), true)\n            },\n            {\n                id: \"Seoul - Ulsan\",\n                path: pointsToPath(seoulGMPPoint, chart.get(\"Ulsan\"), true)\n            }\n        ]\n    });\n    // Add a series of lines for Busan\n    chart.addSeries({\n        name: \"Busan flight routes\",\n        type: \"mapline\",\n        dashStyle: \"dash\",\n        lineWidth: 2,\n        color: Highcharts.getOptions().colors[4],\n        data: [\n            {\n                id: \"Busan - Jeju\",\n                path: pointsToPath(busanPoint, chart.get(\"Jeju\"))\n            },\n            {\n                id: \"Busan - Yangyang\",\n                path: pointsToPath(busanPoint, chart.get(\"Yangyang\"), true)\n            }\n        ]\n    });\n    // Add a series of lines for Jeju\n    chart.addSeries({\n        name: \"Jeju flight routes\",\n        type: \"mapline\",\n        dashStyle: \"solid\",\n        lineWidth: 2,\n        color: Highcharts.getOptions().colors[4],\n        data: [\n            {\n                id: \"Jeju - Gwangju\",\n                path: pointsToPath(jejuPoint, chart.get(\"Gwangju\"))\n            },\n            {\n                id: \"Jeju - Gunsan\",\n                path: pointsToPath(jejuPoint, chart.get(\"Gunsan\"), true)\n            },\n            {\n                id: \"Jeju - Wonju\",\n                path: pointsToPath(jejuPoint, chart.get(\"Wonju\"), true)\n            },\n            {\n                id: \"Jeju - Yangyang\",\n                path: pointsToPath(jejuPoint, chart.get(\"Yangyang\"), true)\n            },\n            {\n                id: \"Jeju - Daegu\",\n                path: pointsToPath(jejuPoint, chart.get(\"Daegu\"), true)\n            },\n            {\n                id: \"Jeju - Yeosu\",\n                path: pointsToPath(jejuPoint, chart.get(\"Yeosu\"), true)\n            },\n            {\n                id: \"Jeju - Sacheon\",\n                path: pointsToPath(jejuPoint, chart.get(\"Sacheon\"), true)\n            },\n            {\n                id: \"Jeju - Ulsan\",\n                path: pointsToPath(jejuPoint, chart.get(\"Ulsan\"), true)\n            },\n            {\n                id: \"Jeju - Cheongju\",\n                path: pointsToPath(jejuPoint, chart.get(\"Cheongju\"), true)\n            }\n        ]\n    });\n})();","css":"#container {\n    height: 680px;\n    min-width: 310px;\n    max-width: 800px;\n    margin: 0 auto;\n}\n\n.loading {\n    margin-top: 10em;\n    text-align: center;\n    color: gray;\n}\n","html":"\n<div id=\"container\"></div>\n","npm":"// 安装\nnpm install highcharts@10.3.2 --save\n\n// import 模块 \nimport Highcharts     from 'highcharts/highmaps';\nimport HighchartsMore from 'highcharts/highcharts-more';\nimport Exporting      from 'highcharts/modules/exporting';\nimport Accessibility  from 'highcharts/modules/accessibility';\nimport Zh_cn          from 'https://code.hcharts.cn/plugins/zh_cn.js';\n\n// 初始化模块\nHighchartsMore(Highcharts);\nExporting(Highcharts);\nAccessibility(Highcharts);\nZh_cn(Highcharts);\n","scripts":["https://code.hcharts.cn/maps/10.3.2/highmaps.js","https://code.hcharts.cn/10.3.2/highcharts-more.js","https://code.hcharts.cn/maps/10.3.2/modules/exporting.js","https://code.hcharts.cn/10.3.2/modules/accessibility.js","https://code.hcharts.cn/plugins/zh_cn.js"]}