{"js":"/**\n*Function to draw the path\n*/\nfunction getPath(width, height) {\n    var path = [],\n        centerX = width * 0.5,\n        centerY = height * 0.56,\n        r = width * 0.35,\n        rFraction,\n        x,\n        y,\n        i,\n        angle;\n\n    //loop to add points to the path\n    for (i = 0; i < 32; i = i + 1) {\n        angle = i * Math.PI / 16;\n        if (i === 0) {\n            path.push('M');\n        } else if (i === 1) {\n            path.push('L');\n        }\n        if (i % 4 === 0) {\n            rFraction = 1;\n        } else if (i % 2 === 0) {\n            rFraction = 0.7;\n        } else {\n            rFraction = 0.5;\n        }\n        x = centerX + Math.cos(angle) * r * rFraction;\n        y = centerY + Math.sin(angle) * r * rFraction;\n        path.push(x, y);\n    }\n    return path;\n}\n\n/**\n* Function to check if the drawing of the compassrose exists, if so - it updates the path, if not, it draws it.\n*/\nfunction onDraw() {\n    var path = getPath(this.chartWidth, this.chartHeight);\n    if (this.compassrose) {\n        this.compassrose.animate({\n            d: path\n        });\n    } else {\n        this.compassrose = this.renderer.path(path)\n            .attr({\n                fill: '#666666'\n            })\n            .add();\n    }\n}\n\nHighcharts.chart('container', {\n    chart: {\n        type: 'gauge',\n        plotBackgroundColor: null,\n        plotBackgroundImage: null,\n        plotBorderWidth: 0,\n        plotShadow: false,\n        height: document.getElementById('container').offsetWidth,\n        events: {\n            load: onDraw,\n            resize: onDraw\n        }\n    },\n    title: {\n        text: \"Demo of custom backgroundshape in Highcharts\"\n    },\n    pane: {\n        startAngle: 0,\n        endAngle: 360,\n        background: null\n    },\n    yAxis: [{\n        min: 0,\n        max: 360,\n        lineWidth: 0,\n        minorTickWidth: 0,\n        tickWidth: 0,\n        labels: {\n            enabled: false\n        }\n    }, {\n        categories: ['N', 'NE', 'E', 'SE', 'S', 'SW', 'W', 'NW'],\n        min: 0,\n        max: 8,\n        lineWidth: 0,\n        minorTickWidth: 0,\n        tickWidth: 0,\n        showLastLabel: false,\n        labels: {\n            style: {\n                color: '#000000'\n            },\n            distance: 10,\n            useHTML: true,\n            formatter: function () {\n                var style = '',\n                    scale = document.getElementById('container').offsetWidth * 0.005;\n                if (this.value.length === 1) {\n                    style = 'font-size:' + (scale * 1.3) + 'em';\n                } else if (this.value.length === 2) {\n                    style = 'font-size:' + (scale * 0.8) + 'em';\n                }\n                return '<span style=\"' + style + '\">' + this.value + '</span>';\n            }\n        }\n    }],\n    tooltip: {\n        enabled: false\n    },\n    plotOptions: {\n        series: {\n            animation: 2000\n        },\n        gauge: {\n            dial: {\n                backgroundColor: '#000000',\n                radius: '100%',\n                baseWidth: 15,\n                borderColor: '#000000',\n                borderWidth: 0,\n                topWidth: 1,\n                baseLength: '10%',\n                rearLength: '20%'\n            },\n            pivot: {\n                backgroundColor: '#000000',\n                radius: 10\n            },\n            dataLabels: {\n                enabled: false\n            }\n        }\n    },\n    series: [{\n        name: 'Direction',\n        data: [0]\n    }]\n}, chart => {\n    if (!chart.renderer.forExport) {\n        setInterval(() => {\n            const point = chart.series[0].points[0];\n            const inc = 5 - Math.floor(Math.random() * 10);\n            const newVal = point.y + inc;\n            point.update(newVal);\n        }, 3000);\n    }\n});\n","css":"#container {\n    width: 33%;\n    margin: auto;\n}\n","html":"\n<div id=\"container\"></div>","npm":"// 安装\nnpm install highcharts@10.3.2 --save\n\n// import 模块 \nimport Highcharts      from 'highcharts';\nimport HighchartsMore  from 'highcharts/highcharts-more';\nimport HighchartsZh_CN from 'https://code.hcharts.cn/plugins/highcharts-zh_CN.js';\n\n// 初始化模块\nHighchartsMore(Highcharts);\nHighchartsZh_CN(Highcharts);\n","scripts":["https://code.hcharts.cn/10.3.2/highcharts.js","https://code.hcharts.cn/10.3.2/highcharts-more.js","https://code.hcharts.cn/plugins/highcharts-zh_CN.js"]}