{"js":"(function (H) {\n    Highcharts.seriesType('sociogram', 'line', {\n        dataLabels: {\n            enabled: true,\n            format: '{point.name}'\n        }\n    }, {\n        // Use the drawGraph function to draw relational paths between the nodes\n        drawGraph: function () {\n            var series = this,\n                chart = this.chart,\n                relations = this.relations = this.relations || {};\n            this.points.forEach(function (point) {\n                point.connections.forEach(function (connId) {\n\n                    var key = point.id + '-' + connId,\n                        connPoint = chart.get(connId);\n\n                    if (connPoint) {\n\n                        if (!relations[key]) {\n                            relations[key] = chart.renderer.path()\n                                .add(series.group);\n                        }\n\n                        relations[key].attr({\n                            d: [\n                                'M', point.plotX, point.plotY,\n                                'L', connPoint.plotX, connPoint.plotY\n                            ],\n                            zIndex: 10,\n                            stroke: series.color,\n                            'stroke-width': H.pick(series.options.lineWidth, 2),\n                            'marker-end': 'url(#arrow-end)'\n                            // 'marker-start': \"url(#arrow-start)\"\n                        });\n                    }\n\n                });\n            });\n        }\n    });\n\n    H.wrap(H.Chart.prototype, 'getContainer', function (proceed) {\n        proceed.apply(this);\n\n        var chart = this,\n            renderer = chart.renderer,\n            defOptions = chart.options.defs || [],\n            i = defOptions.length,\n            def,\n            marker;\n\n        while (i--) {\n            def = defOptions[i];\n            marker = renderer.createElement('marker').attr({\n                id: def.id,\n                viewBox: '0 -5 10 20',\n                refX: 16,\n                refY: 6,\n                markerWidth: 6,\n                markerHeight: 6,\n                orient: 'auto',\n                fill: 'inherit'\n            }).add(renderer.defs);\n            renderer.createElement('path').attr({\n                d: def.path,\n                fill: 'black'\n            }).add(marker);\n        }\n    });\n}(Highcharts));\n\n\nHighcharts.chart('container', {\n\n    chart: {\n        height: '100%',\n        polar: true\n    },\n\n    defs: [{\n        id: 'arrow-start',\n        path: 'M 0 0 L 10 5 L 0 10 z',\n        fill: 'gray'\n    }, {\n        id: 'arrow-end',\n        path: 'M 0 0 L 10 5 L 0 10 z', // M 0 0 L 10 5 L 0 10 z\n        fill: 'gray'\n    }],\n\n    title: {\n        text: 'Highcharts Sociogram Study'\n    },\n\n    xAxis: {\n        visible: false\n    },\n\n    yAxis: {\n        labels: {\n            enabled: false\n        },\n        reversed: true,\n        plotBands: [{\n            from: 0,\n            to: Infinity,\n            color: 'rgba(0, 255, 96, 0.1)'\n        }, {\n            from: 1,\n            to: Infinity,\n            color: 'rgba(0, 255, 96, 0.1)'\n        }, {\n            from: 2,\n            to: Infinity,\n            color: 'rgba(0, 255, 96, 0.1)'\n        }, {\n            from: 3,\n            to: Infinity,\n            color: 'rgba(0, 255, 96, 0.1)'\n        }, {\n            from: 4,\n            to: Infinity,\n            color: 'rgba(0, 255, 96, 0.1)'\n        }],\n        gridLineColor: 'white'\n    },\n\n    series: [{\n        data: [{\n            id: 'MarcusID',\n            name: 'Marcus',\n            connections: [\n                'TomID',\n                'AnnID',\n                'JulieID',\n                'MartinID'\n            ],\n            y: 4,\n            color: 'red'\n        }, {\n            id: 'TomID',\n            name: 'Tom',\n            connections: [\n                'AnnID',\n                'JulieID'\n            ],\n            y: 2,\n            color: 'blue'\n        }, {\n            id: 'AnnID',\n            name: 'Ann',\n            connections: [\n                'TomID',\n                'MartinID'\n            ],\n            y: 2,\n            color: 'red'\n        }, {\n            id: 'JulieID',\n            name: 'Julie',\n            connections: [\n                'TomID',\n                'AnnID',\n                'MartinID'\n            ],\n            y: 3,\n            color: 'red'\n        }, {\n            id: 'MartinID',\n            name: 'Martin',\n            connections: [\n                'MarcusID'\n            ],\n            y: 1,\n            color: 'red'\n        }, {\n            id: 'JohnID',\n            name: 'John',\n            connections: [\n                'NoraID',\n                'MonicaID'\n            ],\n            color: 'red',\n            y: 2\n        }, {\n            id: 'MonicaID',\n            name: 'Monica',\n            connections: [\n                'NoraID'\n            ],\n            y: 1,\n            color: 'red'\n        }, {\n            id: 'NoraID',\n            name: 'Nora',\n            connections: [\n                'MonicaID'\n            ],\n            y: 1,\n            color: 'red'\n        }],\n        type: 'sociogram',\n        name: 'Positive relations'\n    }]\n\n});\n","css":"#container {\n    min-width: 300px;\n    max-width: 800px;\n    margin: 1em auto;\n}\n","html":"<div id=\"container\"></div>","npm":"// 安装\nnpm install highcharts@11.0.0 --save\n\n// import 模块 \nimport Highcharts     from 'highcharts';\nimport HighchartsMore from 'highcharts/highcharts-more';\nimport Exporting      from 'highcharts/modules/exporting';\n\n// 初始化模块\nHighchartsMore(Highcharts);\nExporting(Highcharts);\n","scripts":["https://code.highcharts.com/11.0.0/highcharts.js","https://code.highcharts.com/11.0.0/highcharts-more.js","https://code.highcharts.com/11.0.0/modules/exporting.js"]}