{"js":"/**\n * Faster scatter charts mod for Highcharts\n *\n * Author: Torstein Honsi\n * Last updated: 2016-09-23\n */\n(function (H) {\n\n    // Skip advanced options testing, assume all points are given as [x, y]\n    H.seriesTypes.scatter.prototype.pointClass = H.extendClass(H.Point, {\n        init: function (series, options) {\n            this.series = series;\n            this.x = options[0];\n            this.y = options[1];\n            this.options = options;\n            return this;\n        },\n        pointAttr: {}\n    });\n    // Draw points as composite shapes\n    H.seriesTypes.scatter.prototype.drawPoints = function () {\n        var data = this.points,\n            renderer = this.chart.renderer,\n            radius = this.options.marker.radius,\n            stripes = [],\n            group,\n            i = data.length,\n            point,\n            layers = this.layers;\n\n        if (!layers) {\n            layers = this.layers = [];\n        }\n\n        // Divide the points into stripes. Points within the same group won't overlap in the y\n        // dimension\n        while (i--) {\n            point = data[i];\n            group = Math.round(point.plotY / radius);\n            if (!stripes[group]) {\n                stripes[group] = [];\n            }\n            stripes[group].push(point);\n        }\n\n        // Sort the members of each stripe by x value\n        i = stripes.length;\n        while (i--) {\n            if (stripes[i]) {\n                stripes[i].sort(function (a, b) {\n                    return a.plotX - b.plotX;\n                });\n            }\n        }\n\n        // Loop over the members of each stripe and add them to a group if they don't overlap\n        // in the x dimension.\n        var groups = [],\n            oddOrEven = 0,\n            stripe,\n            remaining = data.length,\n            x,\n            lastX,\n            j;\n\n        // first do even stripes, where points are guaranteed not to overlap with points in even stripes\n        while (remaining) {\n            group = [];\n\n            for (i = oddOrEven; i < stripes.length; i += 2) {\n                stripe = stripes[i];\n                if (stripe) {\n                    j = stripe.length;\n                    lastX = null;\n                    while (j--) {\n                        x = stripe[j].plotX;\n                        if (lastX === null || lastX - x >= radius * 2) {\n                            group.push(stripe[j]); // push it to the group\n                            stripe.splice(j, 1); // remove it from the stripe\n                            remaining--;\n                            lastX = x;\n                        }\n                    }\n                }\n            }\n\n            if (group.length) {\n                groups.push(group);\n            }\n\n            if (!group.length && !oddOrEven) { // finished adding points to even stripes\n                oddOrEven = 1;\n            }\n        }\n\n        i = groups.length;\n        var paths = [];\n        while (i--) {\n            var path = [],\n                y;\n\n            group = groups[i];\n\n            for (j = 0; j < group.length; j += 1) {\n                // Math.round reduces rendering times by 20% in a 50,000 points chart\n                x = Math.round(group[j].plotX);\n                y = Math.round(group[j].plotY);\n                path.push(\n                    ['M', x - radius, y - radius],\n                    ['L', x + radius, y - radius],\n                    ['L', x + radius, y + radius],\n                    ['L', x - radius, y + radius]\n                );\n\n                /* Note: using the symbol prototype gives  higher\n                processing times. The rendering time is slightly higher for\n                complex paths like circles, and lower for simple paths like\n                triangles. Tested in Chrome. Probably the best solution is to\n                use a simplified shape calculation inline. */\n                /*\n                symbolPath = Highcharts.Renderer.prototype.symbols.circle(\n                x - radius,\n                y - radius,\n                size,\n                size);\n\n                // faster than concat:\n                for (var m = 0, len = symbolPath.length; m < len; m += 1)\n                path.push(symbolPath[m]);\n                */\n            }\n\n            paths.push(path);\n\n\n        }\n\n        // render\n        for (i = 0; i < paths.length; i += 1) {\n            if (!layers[i]) {\n                layers[i] = renderer.path(paths[i]).attr({\n                    fill: this.pointAttribs().fill\n                }).add(this.markerGroup);\n            } else {\n                layers[i].attr({\n                    d: paths[i]\n                });\n            }\n        }\n        layers.length = i;\n    };\n\n}(Highcharts));\n// End faster scatter mod\n\n// Prepare the data\nvar data = [];\nfor (var i = 0; i < 50000; i += 1) {\n    data.push([\n        Math.pow(Math.random(), 2) * 100,\n        Math.pow(Math.random(), 2) * 100\n    ]);\n}\n\nvar start = +new Date();\n// console.profile('scatter');\nHighcharts.chart('container', {\n\n    xAxis: {\n        gridLineWidth: 1\n    },\n    yAxis: {\n        min: 0,\n        max: 100\n    },\n\n    title: {\n        text: 'Scatter chart with ' + data.length + ' points'\n    },\n    subtitle: {\n        text: 'Rendered in ...'\n    },\n    legend: {\n        enabled: false\n    },\n    series: [{\n        type: 'scatter',\n        animation: false,\n        data: data,\n        color: 'rgba(152,0,67,0.2)',\n        marker: {\n            radius: 1,\n            states: {\n                hover: {\n                    radius: 2,\n                    lineWidth: 1,\n                    lineColor: 'black'\n                }\n            }\n        },\n        tooltip: {\n            followPointer: false,\n            pointFormat: '[{point.x:.1f}, {point.y:.1f}]'\n        }\n    }]\n\n}, function (chart) {\n    // console.profileEnd('scatter');\n    chart.setTitle(null, {\n        text: 'Rendered in ' + (new Date() - start) + ' ms by Highcharts'\n    });\n});","css":"#container {\n    height: 500px;\n    width: 600px;\n    margin: 0 auto;\n}\n","html":"Verify that the dots appear and the tooltip works.","npm":"// 安装\nnpm install highcharts@11.0.1 --save\n\n// import 模块 \n\n// 初始化模块\n","scripts":[]}