{"js":"const svg = document.querySelector('svg'),\n    indigo = svg.querySelector('#indigo'),\n    darkgreen1 = svg.querySelector('#darkgreen1'),\n    darkgreen2 = svg.querySelector('#darkgreen2'),\n    lightgreen = svg.querySelector('#lightgreen');\n\nconst A = [41, 0], // Right wing tip\n    B = [16, 60], // Tail\n    C = [49, 46], // Chest\n    D = [68, 38], // Neck\n    F = [52, 65], // Tip of the beak\n    G = [0, 17]; // Left wing tip\n\n\nconst draw = () => {\n    indigo.setAttribute('points', [A, B, C]);\n    darkgreen1.setAttribute('points', [A, C, D]);\n    darkgreen2.setAttribute('points', [C, F, D]);\n    lightgreen.setAttribute('points', [G, B, D]);\n};\n\ndraw();\n\nlet pos = -1,\n    inFlight = false,\n    landing = false;\n\nconst state = () => {\n    // Right wing tip\n    A[0] = 51 + 10 * pos;\n    A[1] = 30 + 30 * pos;\n\n    // Left wing tip\n    G[0] = 10 + 10 * pos;\n    G[1] = 42 + 25 * pos;\n\n    // Tail\n    B[0] = 13 - 3 * pos;\n    B[1] = 55 - 5 * pos;\n\n    // Chest\n    C[0] = 46 - 3 * pos;\n    C[1] = 41 - 5 * pos;\n\n    // Neck\n    D[0] = 65 - 3 * pos;\n    D[1] = 33 - 5 * pos;\n\n    // Tip of the beak\n    F[0] = inFlight ? 71 - 3 * pos : 60 + 8 * pos;\n    F[1] = inFlight ? 46 - 4 * pos : 53.5 - 11.5 * pos;\n\n    draw();\n};\n\ndocument.querySelector('#range').addEventListener(\n    'input',\n    function () {\n        pos = this.value;\n        state();\n    }\n);\n\nlet playTimer,\n    angle;\ndocument.querySelector('#play').addEventListener(\n    'click',\n    e => {\n\n        if (playTimer) {\n            e.target.textContent = '▶️';\n            landing = true;\n        } else {\n            e.target.textContent = '⏸';\n            playTimer = setInterval(() => {\n\n                // Wings up\n                if (landing && !inFlight && pos < -0.995) {\n                    clearInterval(playTimer);\n                    pos = -1;\n                    playTimer = undefined;\n                    landing = false;\n                    state();\n                    return;\n                }\n\n                if (angle === undefined) {\n                    angle = Math.asin(pos);\n                }\n                angle += 0.1;\n                pos = Math.sin(angle);\n\n                // Wings down\n                if (pos > 0.995) {\n                    inFlight = !landing;\n                }\n                state();\n            }, 16);\n        }\n    }\n);","css":"#range {\n    display: none;\n}\n\n#play {\n    font-family: \"Courier New\", Courier, monospace;\n    font-size: 2rem;\n}\n\n#lightgreen {\n    mix-blend-mode: multiply;\n}\n","html":"<div id=\"container\">\n    <svg height=\"550\" id=\"logo-highcharts\" version=\"1.1\"\n    viewBox=\"0 0 550 550\" width=\"550\" x=\"0px\" xml:space=\"preserve\"\n    xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" y=\"0px\">\n    <g id=\"symbol\" transform=\"translate(10,13.41400146484375) scale(6)\">\n\n        <g>\n            <polygon fill=\"#8087E8\" id=\"indigo\"\n                stroke=\"#383836\" stroke-width=\"0\" />\n        </g>\n        <g>\n            <polygon fill=\"#6699A1\" id=\"darkgreen1\"\n                stroke=\"#383836\" stroke-width=\"0\" />\n        </g>\n\n        <g>\n            <polygon fill=\"#6699A1\" id=\"darkgreen2\"\n                stroke=\"#383836\" stroke-width=\"0\" />\n        </g>\n\n        <g>\n            <polygon fill=\"#A3EDBA\" id=\"lightgreen\"\n                stroke=\"#383836\" stroke-width=\"0\"\n                style=\"mix-blend-mode: multiply\" />\n\n        </g>\n\n    </g>\n    </svg>\n</div>\n\n<br>\n\n<input id=\"range\" type=\"range\" min=\"-1\" max=\"1\" step=\"0.01\" value=\"-1\" />\n\n<button id=\"play\">▶️</button>","npm":"// 安装\nnpm install highcharts@11.0.0 --save\n\n// import 模块 \n\n// 初始化模块\n","scripts":[]}