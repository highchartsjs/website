{"js":"/**\n * Experimental pictorial series type\n *\n * To do\n * - Stroke width must be scaled in to the objectBoundingBox content units\n * - Paths should be relative to the stack box or column height. Currently\n *   simplified to yAxis.len.\n * - Option to toggle fixed aspect ratio. Currently the path scales to width and\n *   height independently. When fixed, the width of the stack or point should\n *   be dictated by the path's aspect ratio.\n */\n\nHighcharts.seriesType(\n    'pictorial',\n    'column',\n    {\n        borderWidth: 0\n    },\n    {\n        pointAttribs: function (point, selected) {\n            const pointAttribs = Highcharts.Series.types.column.prototype\n                .pointAttribs.call(this, point, selected);\n\n            pointAttribs.fill = {\n                pattern: {\n                    path: {\n                        d: point.series.options.paths[\n                            point.index % point.series.options.paths.length\n                        ],\n                        fill: pointAttribs.fill,\n                        strokeWidth: 0,\n                        stroke: pointAttribs.stroke\n                    },\n                    x: point.shapeArgs.x,\n                    y: 0,\n                    width: point.shapeArgs.width,\n                    height: point.series.yAxis.len,\n                    patternContentUnits: 'objectBoundingBox',\n                    backgroundColor: 'none'\n                }\n            };\n\n            delete pointAttribs.stroke;\n            delete pointAttribs.strokeWidth;\n\n            return pointAttribs;\n        }\n    }\n);\n\nHighcharts.addEvent(Highcharts.Series, 'afterRender', function () {\n    if (this instanceof Highcharts.Series.types.pictorial) {\n        this.points.forEach(point => {\n            const fill = point.graphic && point.graphic.attr('fill');\n            const match = fill && fill.match(/url\\(([^)]+)\\)/u);\n            if (match) {\n                const patternPath = document.querySelector(`${match[1]} path`);\n                if (patternPath) {\n                    const bBox = patternPath.getBBox();\n                    const scaleX = 1 / bBox.width;\n                    const scaleY = this.yAxis.len /\n                        point.shapeArgs.height /\n                        bBox.height;\n\n                    patternPath.setAttribute(\n                        'transform',\n                        `scale(${scaleX} ${scaleY}) ` +\n                        `translate(${-bBox.x}, ${-bBox.y})`\n                    );\n                }\n            }\n\n        });\n    }\n});\n\nHighcharts.chart('container', {\n    chart: {\n        type: 'pictorial'\n    },\n    title: {\n        text: 'Pictorial chart'\n    },\n    xAxis: {\n        categories: ['Men', 'Women'],\n        lineWidth: 0\n    },\n    yAxis: {\n        visible: false\n    },\n    plotOptions: {\n        pictorial: {\n            stacking: 'percent',\n\n            /*\n            Icon paths from font-awesome, https://fontawesome.com/license,\n            translated using http://jsfiddle.net/highcharts/a0jrvxch/\n            */\n            paths: [\n                'M96 0c35.346 0 64 28.654 64 64s-28.654 64-64 64-64-28.654-64-64S60.654 0 96 0m48 144h-11.36c-22.711 10.443-49.59 10.894-73.28 0H48c-26.51 0-48 21.49-48 48v136c0 13.255 10.745 24 24 24h16v136c0 13.255 10.745 24 24 24h64c13.255 0 24-10.745 24-24V352h16c13.255 0 24-10.745 24-24V192c0-26.51-21.49-48-48-48z',\n                'M128 0c35.346 0 64 28.654 64 64s-28.654 64-64 64c-35.346 0-64-28.654-64-64S92.654 0 128 0m119.283 354.179l-48-192A24 24 0 0 0 176 144h-11.36c-22.711 10.443-49.59 10.894-73.28 0H80a24 24 0 0 0-23.283 18.179l-48 192C4.935 369.305 16.383 384 32 384h56v104c0 13.255 10.745 24 24 24h32c13.255 0 24-10.745 24-24V384h56c15.591 0 27.071-14.671 23.283-29.821z'\n            ],\n            pointPadding: 0\n        }\n    },\n    legend: {\n        align: 'right',\n        verticalAlign: 'middle',\n        layout: 'vertical'\n    },\n    series: [{\n        data: [10, 20],\n        name: 'Quality A'\n    }, {\n        data: [20, 50],\n        name: 'Quality B'\n    }, {\n        data: [70, 30],\n        name: 'Quality C'\n    }],\n    responsive: {\n        rules: [{\n            condition: {\n                maxWidth: 500\n            },\n            chartOptions: {\n                legend: {\n                    layout: 'horizontal',\n                    align: 'center',\n                    verticalAlign: 'top'\n                }\n            }\n        }]\n\n    }\n});\n","css":"#container {\n    max-width: 800px;\n    min-width: 380px;\n    height: 400px;\n    margin: 0 auto;\n}\n","html":"<div id=\"container\"></div>","npm":"// 安装\nnpm install highcharts@10.3.2 --save\n\n// import 模块 \nimport Highcharts      from 'highcharts';\nimport PatternFill     from 'highcharts/modules/pattern-fill';\nimport HighchartsZh_CN from 'https://code.hcharts.cn/plugins/highcharts-zh_CN.js';\n\n// 初始化模块\nPatternFill(Highcharts);\nHighchartsZh_CN(Highcharts);\n","scripts":["https://code.hcharts.cn/10.3.2/highcharts.js","https://code.hcharts.cn/10.3.2/modules/pattern-fill.js","https://code.hcharts.cn/plugins/highcharts-zh_CN.js"]}