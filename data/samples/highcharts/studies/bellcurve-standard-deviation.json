{"js":"(function (H) {\n    function normalDensity(x, mean, standardDeviation) {\n        var translation = x - mean;\n        return Math.exp(\n            -(translation * translation) /\n            (2 * standardDeviation * standardDeviation)\n        ) / (standardDeviation * Math.sqrt(2 * Math.PI));\n    }\n    H.seriesTypes.bellcurve.prototype.derivedData = function (mean, standardDeviation) {\n        var intervals = this.options.intervals,\n            pointsInInterval = this.options.pointsInInterval,\n            x = mean - intervals * standardDeviation,\n            stop = intervals * pointsInInterval * 2 + 1,\n            increment = standardDeviation / pointsInInterval,\n            data = [],\n            zoneStops = [],\n            point,\n            i;\n\n        for (i = 0; i < stop; i++) {\n\n            point = [x, normalDensity(x, mean, standardDeviation)];\n            data.push(point);\n\n            // Calculate zones to present standard deviation.\n            if (i && i % pointsInInterval === 0) {\n                zoneStops.push(point[0]);\n            }\n\n            x += increment;\n        }\n        this.chart.zoneStops = zoneStops;\n\n        return data;\n    };\n}(Highcharts));\n\nvar data = [3.5, 3, 3.2, 3.1, 3.6, 3.9, 3.4, 3.4, 2.9, 3.1, 3.7, 3.4, 3, 3, 4,\n    4.4, 3.9, 3.5, 3.8, 3.8, 3.4, 3.7, 3.6, 3.3, 3.4, 3, 3.4, 3.5, 3.4, 3.2,\n    3.1, 3.4, 4.1, 4.2, 3.1, 3.2, 3.5, 3.6, 3, 3.4, 3.5, 2.3, 3.2, 3.5, 3.8, 3,\n    3.8, 3.2, 3.7, 3.3, 3.2, 3.2, 3.1, 2.3, 2.8, 2.8, 3.3, 2.4, 2.9, 2.7, 2, 3,\n    2.2, 2.9, 2.9, 3.1, 3, 2.7, 2.2, 2.5, 3.2, 2.8, 2.5, 2.8, 2.9, 3, 2.8, 3,\n    2.9, 2.6, 2.4, 2.4, 2.7, 2.7, 3, 3.4, 3.1, 2.3, 3, 2.5, 2.6, 3, 2.6, 2.3,\n    2.7, 3, 2.9, 2.9, 2.5, 2.8, 3.3, 2.7, 3, 2.9, 3, 3, 2.5, 2.9, 2.5, 3.6,\n    3.2, 2.7, 3, 2.5, 2.8, 3.2, 3, 3.8, 2.6, 2.2, 3.2, 2.8, 2.8, 2.7, 3.3, 3.2,\n    2.8, 3, 2.8, 3, 2.8, 3.8, 2.8, 2.8, 2.6, 3, 3.4, 3.1, 3, 3.1, 3.1, 3.1, 2.7,\n    3.2, 3.3, 3, 2.5, 3, 3.4, 3\n];\n\nHighcharts.setOptions({\n    colors: [Highcharts.color(Highcharts.getOptions().colors[0]).brighten(-0.15).get()]\n});\n\nHighcharts.chart('container', {\n    chart: {\n        events: {\n            render: function () {\n                var chart = this,\n                    renderer = chart.renderer,\n                    sdColors = [\n                        Highcharts.color(Highcharts.getOptions().colors[0]).brighten(0.3).get(),\n                        Highcharts.color(Highcharts.getOptions().colors[0]).brighten(0.15).get(),\n                        Highcharts.getOptions().colors[0]\n                    ],\n                    zoneStops,\n                    zoneStopsLen,\n                    zones = [],\n                    xAxis,\n                    base,\n                    i;\n\n                chart.series.forEach(function (s) {\n                    if (s.type === 'bellcurve') {\n\n                        xAxis = s.xAxis;\n                        zoneStops = chart.zoneStops;\n                        base = zoneStops[1] - zoneStops[0];\n                        zoneStopsLen = zoneStops.length;\n\n                        if (!s.options.zones) {\n                            for (i = 0; i < zoneStopsLen; i++) {\n                                zones.push({\n                                    value: zoneStops[i],\n                                    color: i < zoneStopsLen / 2 ? sdColors[i] : sdColors[(zoneStopsLen - 1) - i]\n                                });\n                            }\n\n                            s.update({\n                                zones: zones\n                            });\n                        }\n\n                        if (s.stDevLabelsGroup) {\n                            s.stDevLabels.forEach(function (label, i) {\n                                label.attr({\n                                    x: xAxis.toPixels(zoneStops[i] - (base / 2)) - (label.width / 2),\n                                    y: chart.plotBox.y + s.yAxis.len - label.height\n                                });\n                            });\n                        } else {\n                            var percents = ['2.35%', '13.5%', '34.0%'];\n\n                            s.stDevLabelsGroup = renderer.g('st-dev-labels').attr({\n                                zIndex: 5\n                            }).add();\n                            s.stDevLabels = [];\n\n                            for (i = 0; i < zoneStopsLen; i++) {\n                                var label = renderer.label(\n                                    i < zoneStopsLen / 2 ? percents[i] : percents[(zoneStopsLen - 1) - i],\n                                    0,\n                                    0\n                                ).add(s.stDevLabelsGroup);\n\n                                label.attr({\n                                    x: xAxis.toPixels(zoneStops[i] - (base / 2)) - (label.width / 2),\n                                    y: chart.plotBox.y + s.yAxis.len - label.height\n                                });\n                                s.stDevLabels.push(label);\n                            }\n                        }\n\n                    }\n                });\n\n            }\n        }\n    },\n    title: {\n        text: 'Bell curve with standard deviation'\n    },\n\n    xAxis: [{\n        title: {\n            text: 'Data'\n        },\n        alignTicks: false\n    }, {\n        title: {\n            text: 'Bell curve'\n        },\n        alignTicks: false,\n        opposite: true\n    }],\n\n    yAxis: [{\n        title: {\n            text: 'Data'\n        }\n    }, {\n        title: {\n            text: 'Bell curve'\n        },\n        opposite: true\n    }],\n\n    series: [{\n        name: 'Bell curve',\n        type: 'bellcurve',\n        xAxis: 1,\n        yAxis: 1,\n        baseSeries: 1,\n        zIndex: -1,\n        zoneAxis: 'x'\n    }, {\n        name: 'Data',\n        type: 'scatter',\n        data: data,\n        marker: {\n            radius: 1.5\n        }\n    }]\n});\n","css":"#container {\n    max-width: 800px;\n    height: 400px;\n    margin: 1em auto;\n}\n","html":"<div id=\"container\"></div> \n","npm":"// 安装\nnpm install highcharts@11.0.0 --save\n\n// import 模块 \nimport Highcharts         from 'highcharts';\nimport HistogramBellcurve from 'highcharts/modules/histogram-bellcurve';\n\n// 初始化模块\nHistogramBellcurve(Highcharts);\n","scripts":["https://code.highcharts.com/11.0.0/highcharts.js","https://code.highcharts.com/11.0.0/modules/histogram-bellcurve.js"]}