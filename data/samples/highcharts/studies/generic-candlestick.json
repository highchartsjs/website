{"js":"(function () {\n\n    // create shortcuts\n    var HC = Highcharts,\n        defaultOptions = HC.getOptions(),\n        defaultPlotOptions = defaultOptions.plotOptions,\n        seriesTypes = HC.seriesTypes,\n        merge = HC.merge,\n        extendClass = HC.extendClass,\n        Point = HC.Point,\n        ColumnSeries = seriesTypes.column,\n        UNDEFINED,\n        mathRound = Math.round;\n\n    // 1 - Set default options\n    defaultPlotOptions.genericcandlestick = merge(defaultPlotOptions.column, {\n        lineColor: 'black',\n        lineWidth: 1,\n        states: {\n            hover: {\n                lineWidth: 2\n            }\n        },\n        threshold: null,\n        upColor: 'white'\n    });\n\n    // 2- Create the GenericCandlestickPoint object\n    var GenericCandlestickPoint = extendClass(Point, {\n        /**\n         * Apply the options containing the x and multiple y-values.\n         * This is called on point init or from point.update. Extends base Point by adding\n         * multiple y-values.\n         *\n         * @param {Object} options\n         */\n        applyOptions: function (options) {\n            var point = this,\n                series = point.series,\n                i = 0;\n\n            if (typeof options === 'object' && typeof options.length !== 'number') {\n                // TODO implement object input support?\n                throw new Error('Object input not yet supported');\n            } else if (options.length) { // array\n                // with leading x value\n                if (options.length % 2 === 1) {\n                    if (typeof options[0] === 'string') {\n                        point.name = options[0];\n                    } else if (typeof options[0] === 'number') {\n                        point.x = options[0];\n                    }\n                    i++;\n                }\n\n                var yValues = [];\n                while (i < options.length) {\n                    yValues.push(options[i]);\n                    i++;\n                }\n                // It is appropriate to sort the y-values as each value-pair is a subset of a larger value-pair in candlestick charts\n                yValues.sort(function (a, b) {\n                    return a - b;\n                });\n                point.yValues = yValues;\n\n                // Treats high/low as the value-pair with the largest value range, open/close with the second largest value range\n                // TODO open/high/low/close should be removed, but all kinds of functionality depend on these fields\n                // These fields are being used somewhere in Highcharts to achieve data grouping and in calucation of yBottom\n                point.open = yValues[yValues.length - 2];\n                point.high = yValues[yValues.length - 1];\n                point.low = yValues[0];\n                point.close = yValues[1];\n            }\n\n            /*\n             * If no x is set by now, get auto incremented value. All points must have an\n             * x value, however the y value can be null to create a gap in the series\n             */\n            point.y = point.yValues[point.yValues.length - 1];\n            if (point.x === UNDEFINED && series) {\n                point.x = series.autoIncrement();\n            }\n            point.options = options;\n            return point;\n        },\n\n        /**\n         * A generic tooltip formatter for multiple Y-values per point\n         */\n        tooltipFormatter: function () {\n            var point = this,\n                series = point.series,\n                yValueLabels = series.options.yValueLabels,\n                yValues = point.yValues;\n\n            var tooltipHtml = '<span style=\"color:' + series.color + ';font-weight:bold\">' + (point.name || series.name) + '</span><br/>';\n\n            for (var i = 0; i < yValueLabels.length; i++) {\n                tooltipHtml += yValueLabels[i] + ': ' + yValues[i] + '<br />';\n            }\n\n            return tooltipHtml;\n        },\n\n        /**\n         * Return a plain array for speedy calculation\n         */\n        toYData: function () {\n            return this.yValues;\n        }\n\n    });\n\n    // 3 - Create the GenericCandlestickSeries object\n    var GenericCandlestickSeries = extendClass(ColumnSeries, {\n        type: 'genericcandlestick',\n        pointClass: GenericCandlestickPoint,\n\n        /**\n         * One-to-one mapping from options to SVG attributes\n         */\n        pointAttrToOptions: { // mapping between SVG attributes and the corresponding options\n            fill: 'color',\n            stroke: 'lineColor',\n            'stroke-width': 'lineWidth'\n        },\n\n        toYData: function (point) { // return a plain array for speedy calculation\n            return [point.open, point.high, point.low, point.close];\n        },\n\n\n        /**\n         * Translate data points from raw values x and y to plotX and plotY\n         */\n        translate: function () {\n            var series = this,\n                yAxis = series.yAxis;\n\n            seriesTypes.column.prototype.translate.apply(series);\n\n            // do the translation\n            series.points.forEach(function (point) {\n                var plotYValues = [];\n                for (var i = 0; i < point.yValues.length; i++) {\n                    plotYValues.push(\n                        yAxis.translate(point.yValues[i], 0, 1, 0, 1)\n                    );\n                }\n                point.plotYValues = plotYValues;\n            });\n        },\n\n        /**\n         * Draw the data points\n         */\n        drawPoints: function () {\n            var series = this,\n                points = series.points,\n                chart = series.chart,\n                pointAttr,\n                topBox,\n                bottomBox,\n                crispCorr,\n                crispX,\n                graphic,\n                path,\n                halfWidth;\n\n            points.forEach(function (point) {\n                var boxpath,\n                    numberOfBoxes,\n                    boxes;\n                graphic = point.graphic;\n                if (point.plotY !== UNDEFINED) {\n\n                    pointAttr = point.pointAttr ?\n                        point.pointAttr[point.selected ? 'select' : ''] :\n                        series.pointAttribs(point, point.selected && 'select');\n\n                    // crisp vector coordinates\n                    crispCorr = (pointAttr['stroke-width'] % 2) / 2;\n                    crispX = mathRound(point.plotX) + crispCorr;\n\n                    // create path for boxes\n                    numberOfBoxes = point.plotYValues.length / 2 - 1;\n                    boxes = [];\n                    for (var i = 0; i < numberOfBoxes; i++) {\n                        bottomBox = mathRound(point.plotYValues[i + 1]) +\n                            crispCorr;\n                        topBox = mathRound(\n                            point.plotYValues[\n                                point.plotYValues.length - 2 - i\n                            ]\n                        ) + crispCorr;\n                        halfWidth = mathRound(\n                            point.shapeArgs.width / 8 * (i * 2 + 1)\n                        );\n\n                        // halfWidth = mathRound(point.barW / 2);\n\n                        boxpath = [\n                            'M',\n                            crispX - halfWidth, bottomBox,\n                            'L',\n                            crispX - halfWidth, topBox,\n                            'L',\n                            crispX + halfWidth, topBox,\n                            'L',\n                            crispX + halfWidth, bottomBox,\n                            'L',\n                            crispX - halfWidth, bottomBox,\n                            'Z'\n                        ];\n                        boxes.push(boxpath);\n                    }\n\n                    // create path for line\n                    path = [\n                        'M',\n                        crispX, mathRound(point.plotYValues[1]) + crispCorr,\n                        'L',\n                        crispX, mathRound(point.yBottom),\n                        'M',\n                        crispX, mathRound(\n                            point.plotYValues[point.plotYValues.length - 2]\n                        ) + crispCorr,\n                        'L',\n                        crispX, mathRound(point.plotY),\n                        'Z'\n                    ];\n\n                    if (graphic) {\n                        graphic.path.animate({\n                            d: path\n                        });\n                        for (i = 0; i < boxes.length; i++) {\n                            graphic['path' + i].animate({\n                                d: boxes[i]\n                            });\n                        }\n\n                    } else {\n                        graphic = chart.renderer.g().add();\n                        graphic.path = chart.renderer.path(path)\n                            .attr(pointAttr)\n                            .add(graphic);\n                        for (i = 0; i < boxes.length; i++) {\n                            graphic['path' + i] = chart.renderer.path(boxes[i])\n                                .attr(pointAttr)\n                                .add(graphic);\n                        }\n                        graphic.attr(pointAttr).add(series.group);\n                        point.graphic = graphic;\n                    }\n\n                }\n            });\n\n        }\n\n\n    });\n    seriesTypes.genericcandlestick = GenericCandlestickSeries;\n}());\n\n// --- create the chart\nwindow.chart = new Highcharts.StockChart({\n    chart: {\n        ignoreHiddenSeries: false,\n        width: null,\n        renderTo: 'container',\n        plotBorderWidth: 2,\n        plotBorderColor: '#E4E4E4',\n        spacingTop: 20,\n        style: {\n            overflow: 'visible'\n        }\n    },\n    yAxis: [{\n        tickLength: 5,\n        gridLineColor: '#EFEFEF',\n        title: {\n            align: 'high',\n            rotation: 0,\n            text: 'm',\n            offset: 30,\n            y: 30,\n            x: 22,\n            style: {\n                color: '#000000',\n                fontWeight: 'bold'\n            },\n            enabled: true\n        },\n        endOnTick: true,\n        showEmpty: false,\n        floor: 0,\n        ceiling: null,\n        max: 6.7,\n        min: 0,\n        labels: {\n            y: 0,\n            x: -8,\n            enabled: true,\n            style: {\n                fontSize: '12px',\n                fontFamily: 'Arial, Verdana, Helvetica, sans-serif',\n                color: '#000000'\n            },\n            overflow: 'justify'\n        },\n        opposite: false,\n        index: 0\n    }],\n    tooltip: {\n        formatter: function () {\n            return 'test';\n        }\n    },\n    series: [{\n        id: 'ge_swh_0pct',\n        name: 'ge_swh_0pct',\n        data: [\n            [1432663200000, 1.6, 1.6, 1.6, 1.6, 1.6, 1.6],\n            [1432684800000, 1.4, 1.5, 1.5, 1.5, 1.6, 1.6],\n            [1432706400000, 1.4, 1.5, 1.5, 1.6, 1.6, 1.7],\n            [1432728000000, 1.5, 1.6, 1.6, 1.7, 1.7, 1.8],\n            [1432749600000, 1.7, 1.7, 1.7, 1.8, 1.8, 2],\n            [1432771200000, 1.7, 1.7, 1.8, 1.9, 1.9, 2.1],\n            [1432792800000, 1.7, 1.7, 1.8, 1.9, 2, 2.1],\n            [1432814400000, 1.5, 1.6, 1.6, 1.7, 1.8, 1.9],\n            [1432836000000, 1.5, 1.5, 1.6, 1.7, 1.9, 2.2],\n            [1432857600000, 1.5, 1.5, 1.5, 1.9, 2, 2.3],\n            [1432879200000, 1.4, 1.5, 1.5, 1.8, 1.9, 2.1],\n            [1432900800000, 1.3, 1.5, 1.5, 1.7, 1.8, 2],\n            [1432922400000, 1.3, 1.4, 1.4, 1.7, 1.8, 1.9],\n            [1432944000000, 1.2, 1.3, 1.3, 1.6, 1.7, 2],\n            [1432965600000, 1.1, 1.2, 1.3, 1.5, 1.7, 1.9],\n            [1432987200000, 1, 1.1, 1.2, 1.5, 1.6, 2.1],\n            [1433008800000, 1, 1.1, 1.1, 1.4, 1.7, 2.5],\n            [1433030400000, 0.9, 1, 1, 1.4, 1.6, 2.1],\n            [1433052000000, 0.8, 0.9, 0.9, 1.4, 1.7, 3.1],\n            [1433073600000, 0.8, 0.8, 0.9, 1.5, 1.9, 2.9],\n            [1433095200000, 0.7, 0.8, 0.9, 1.4, 2, 2.7],\n            [1433116800000, 0.8, 0.9, 0.9, 1.3, 1.8, 2.8],\n            [1433138400000, 0.8, 0.9, 1.1, 1.6, 2.2, 3],\n            [1433160000000, 1, 1.1, 1.3, 1.8, 2.9, 4],\n            [1433181600000, 1.1, 1.3, 1.5, 2.3, 2.8, 4.5],\n            [1433203200000, 1, 1.5, 1.7, 2.4, 2.7, 3.9],\n            [1433224800000, 1, 1.7, 1.8, 2.3, 2.4, 3.2],\n            [1433246400000, 1, 1.6, 1.7, 2.4, 2.7, 3.2],\n            [1433268000000, 1, 1.5, 1.6, 2.3, 2.7, 4.2],\n            [1433289600000, 1, 1.4, 1.6, 2.2, 2.9, 5.5],\n            [1433311200000, 1, 1.3, 1.5, 2.3, 3.2, 5.3],\n            [1433332800000, 0.9, 1.2, 1.5, 2.6, 3.7, 6.2],\n            [1433354400000, 1, 1.2, 1.4, 3.1, 4.4, 6.7],\n            [1433376000000, 0.9, 1.2, 1.4, 3.3, 4, 5.9],\n            [1433397600000, 0.9, 1.2, 1.7, 3.4, 4.3, 5.1],\n            [1433419200000, 0.9, 1.3, 1.9, 3.3, 3.8, 5.4],\n            [1433440800000, 1, 1.4, 1.9, 3.3, 3.7, 5.8],\n            [1433462400000, 1.1, 1.2, 1.9, 2.9, 3.4, 4.7],\n            [1433484000000, 1, 1.4, 1.7, 2.7, 3.2, 4.9],\n            [1433505600000, 1, 1.3, 1.6, 2.5, 3.1, 4.1],\n            [1433527200000, 1, 1.3, 1.5, 2.3, 2.9, 3.6]\n        ],\n        color: '#2F7ED8',\n        fillColor: null,\n        marker: {\n            enabled: false\n        },\n        type: 'genericcandlestick',\n        dashStyle: 'Solid',\n        zIndex: 0,\n        yAxis: 0,\n        visible: true,\n        lineWidth: 2,\n        fillOpacity: 1,\n        enableMouseTracking: true,\n        showToolTip: true,\n        linkedTo: null,\n        dataLabels: {\n            enabled: false\n        }\n    }, {\n        id: 'ge_swh_50pct',\n        name: 'ge_swh_50pct',\n        data: [\n            [1432663200000, 1.6],\n            [1432684800000, 1.5],\n            [1432706400000, 1.5],\n            [1432728000000, 1.6],\n            [1432749600000, 1.8],\n            [1432771200000, 1.8],\n            [1432792800000, 1.8],\n            [1432814400000, 1.7],\n            [1432836000000, 1.6],\n            [1432857600000, 1.7],\n            [1432879200000, 1.7],\n            [1432900800000, 1.6],\n            [1432922400000, 1.5],\n            [1432944000000, 1.4],\n            [1432965600000, 1.3],\n            [1432987200000, 1.3],\n            [1433008800000, 1.2],\n            [1433030400000, 1.1],\n            [1433052000000, 1.1],\n            [1433073600000, 1.1],\n            [1433095200000, 1.1],\n            [1433116800000, 1.2],\n            [1433138400000, 1.3],\n            [1433160000000, 1.6],\n            [1433181600000, 1.7],\n            [1433203200000, 1.9],\n            [1433224800000, 2.1],\n            [1433246400000, 2],\n            [1433268000000, 1.9],\n            [1433289600000, 1.9],\n            [1433311200000, 1.8],\n            [1433332800000, 1.8],\n            [1433354400000, 2],\n            [1433376000000, 2.3],\n            [1433397600000, 2.4],\n            [1433419200000, 2.7],\n            [1433440800000, 2.5],\n            [1433462400000, 2.4],\n            [1433484000000, 2.2],\n            [1433505600000, 1.9],\n            [1433527200000, 1.9]\n        ],\n        color: '#000000',\n        fillColor: null,\n        marker: {\n            enabled: false\n        },\n        type: 'spline',\n        dashStyle: 'Solid',\n        zIndex: 5,\n        yAxis: 0,\n        visible: true,\n        lineWidth: 2,\n        fillOpacity: 1,\n        enableMouseTracking: true,\n        showToolTip: true,\n        linkedTo: null,\n        dataLabels: {\n            enabled: false\n        },\n        _symbolIndex: 0\n    }, {\n        id: 'waveheigth',\n        name: 'waveheigth',\n        data: [{\n            x: 1432663200000,\n            y: 1.7,\n            marker: {\n                fillColor: null,\n                lineWidth: null,\n                lineColor: null\n            }\n        }, {\n            x: 1432684800000,\n            y: 1.6,\n            marker: {\n                fillColor: null,\n                lineWidth: null,\n                lineColor: null\n            }\n        }, {\n            x: 1432706400000,\n            y: 1.5,\n            marker: {\n                fillColor: null,\n                lineWidth: null,\n                lineColor: null\n            }\n        }, {\n            x: 1432728000000,\n            y: 1.7,\n            marker: {\n                fillColor: null,\n                lineWidth: null,\n                lineColor: null\n            }\n        }, {\n            x: 1432749600000,\n            y: 2,\n            marker: {\n                fillColor: null,\n                lineWidth: null,\n                lineColor: null\n            }\n        }, {\n            x: 1432771200000,\n            y: 2.11,\n            marker: {\n                fillColor: null,\n                lineWidth: null,\n                lineColor: null\n            }\n        }, {\n            x: 1432792800000,\n            y: 2.15,\n            marker: {\n                fillColor: null,\n                lineWidth: null,\n                lineColor: null\n            }\n        }, {\n            x: 1432814400000,\n            y: 1.88,\n            marker: {\n                fillColor: null,\n                lineWidth: null,\n                lineColor: null\n            }\n        }, {\n            x: 1432836000000,\n            y: 1.62,\n            marker: {\n                fillColor: null,\n                lineWidth: null,\n                lineColor: null\n            }\n        }, {\n            x: 1432857600000,\n            y: 1.74,\n            marker: {\n                fillColor: null,\n                lineWidth: null,\n                lineColor: null\n            }\n        }, {\n            x: 1432879200000,\n            y: 1.69,\n            marker: {\n                fillColor: null,\n                lineWidth: null,\n                lineColor: null\n            }\n        }, {\n            x: 1432900800000,\n            y: 1.66,\n            marker: {\n                fillColor: null,\n                lineWidth: null,\n                lineColor: null\n            }\n        }, {\n            x: 1432922400000,\n            y: 1.69,\n            marker: {\n                fillColor: null,\n                lineWidth: null,\n                lineColor: null\n            }\n        }, {\n            x: 1432944000000,\n            y: 1.64,\n            marker: {\n                fillColor: null,\n                lineWidth: null,\n                lineColor: null\n            }\n        }, {\n            x: 1432965600000,\n            y: 1.54,\n            marker: {\n                fillColor: null,\n                lineWidth: null,\n                lineColor: null\n            }\n        }, {\n            x: 1432987200000,\n            y: 1.32,\n            marker: {\n                fillColor: null,\n                lineWidth: null,\n                lineColor: null\n            }\n        }, {\n            x: 1433008800000,\n            y: 1.18,\n            marker: {\n                fillColor: null,\n                lineWidth: null,\n                lineColor: null\n            }\n        }, {\n            x: 1433030400000,\n            y: 1.12,\n            marker: {\n                fillColor: null,\n                lineWidth: null,\n                lineColor: null\n            }\n        }, {\n            x: 1433052000000,\n            y: 1.05,\n            marker: {\n                fillColor: null,\n                lineWidth: null,\n                lineColor: null\n            }\n        }, {\n            x: 1433073600000,\n            y: 1,\n            marker: {\n                fillColor: null,\n                lineWidth: null,\n                lineColor: null\n            }\n        }, {\n            x: 1433095200000,\n            y: 0.9,\n            marker: {\n                fillColor: null,\n                lineWidth: null,\n                lineColor: null\n            }\n        }, {\n            x: 1433116800000,\n            y: 1.02,\n            marker: {\n                fillColor: null,\n                lineWidth: null,\n                lineColor: null\n            }\n        }, {\n            x: 1433138400000,\n            y: 1.45,\n            marker: {\n                fillColor: null,\n                lineWidth: null,\n                lineColor: null\n            }\n        }, {\n            x: 1433160000000,\n            y: 1.75,\n            marker: {\n                fillColor: null,\n                lineWidth: null,\n                lineColor: null\n            }\n        }, {\n            x: 1433181600000,\n            y: 2.05,\n            marker: {\n                fillColor: null,\n                lineWidth: null,\n                lineColor: null\n            }\n        }, {\n            x: 1433203200000,\n            y: 2.2,\n            marker: {\n                fillColor: null,\n                lineWidth: null,\n                lineColor: null\n            }\n        }, {\n            x: 1433224800000,\n            y: 2.53,\n            marker: {\n                fillColor: null,\n                lineWidth: null,\n                lineColor: null\n            }\n        }, {\n            x: 1433246400000,\n            y: 2.17,\n            marker: {\n                fillColor: null,\n                lineWidth: null,\n                lineColor: null\n            }\n        }, {\n            x: 1433268000000,\n            y: 1.85,\n            marker: {\n                fillColor: null,\n                lineWidth: null,\n                lineColor: null\n            }\n        }],\n        color: '#00c2e8',\n        fillColor: null,\n        marker: {\n            enabled: false\n        },\n        type: 'spline',\n        dashStyle: 'Solid',\n        zIndex: 5,\n        yAxis: 0,\n        visible: true,\n        lineWidth: 2,\n        fillOpacity: 1,\n        enableMouseTracking: true,\n        showToolTip: true,\n        linkedTo: null,\n        dataLabels: {\n            enabled: false\n        },\n        _symbolIndex: 1\n    }]\n});\n","css":"#container {\n    min-width: 500px;\n    max-width: 800px;\n    height: 400px;\n    margin: 1em auto;\n}\n","html":"<div id=\"container\"></div>\n","npm":"// 安装\nnpm install highcharts@11.0.1 --save\n\n// import 模块 \nimport Highcharts from 'highcharts/highstock';\nimport Exporting  from 'highcharts/modules/exporting';\n\n// 初始化模块\nExporting(Highcharts);\n","scripts":["https://code.highcharts.com/stock/11.0.1/highstock.js","https://code.highcharts.com/stock/11.0.1/modules/exporting.js"]}