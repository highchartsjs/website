{"js":"/**\n * Highcharts Linear-Gauge series plugin\n */\n(function (H) {\n    H.seriesType('lineargauge', 'column', null, {\n        setVisible: function () {\n            H.seriesTypes.column.prototype.setVisible.apply(this, arguments);\n            if (this.markLine) {\n                this.markLine[this.visible ? 'show' : 'hide']();\n            }\n        },\n        drawPoints: function () {\n            // Draw the Column like always\n            H.seriesTypes.column.prototype.drawPoints.apply(this, arguments);\n\n            // Add a Marker\n            var series = this,\n                chart = this.chart,\n                inverted = chart.inverted,\n                xAxis = this.xAxis,\n                yAxis = this.yAxis,\n                point = this.points[0], // we know there is only 1 point\n                markLine = this.markLine,\n                ani = markLine ? 'animate' : 'attr';\n\n            // Hide column\n            point.graphic.hide();\n\n            if (!markLine) {\n                var path = inverted ? ['M', 0, 0, 'L', -5, -5, 'L', 5, -5, 'L', 0, 0, 'L', 0, 0 + xAxis.len] : ['M', 0, 0, 'L', -5, -5, 'L', -5, 5, 'L', 0, 0, 'L', xAxis.len, 0];\n                markLine = this.markLine = chart.renderer.path(path)\n                    .attr({\n                        fill: series.color,\n                        stroke: series.color,\n                        'stroke-width': 1\n                    }).add();\n            }\n            markLine[ani]({\n                translateX: inverted ? xAxis.left + yAxis.translate(point.y) : xAxis.left,\n                translateY: inverted ? xAxis.top : yAxis.top + yAxis.len -  yAxis.translate(point.y)\n            });\n        }\n    });\n}(Highcharts));\n\nHighcharts.chart('container', {\n    chart: {\n        type: 'lineargauge',\n        inverted: true,\n        height: 100\n    },\n    title: {\n        text: 'A Horizontal Linear Gauge'\n    },\n    xAxis: {\n        lineColor: '#C0C0C0',\n        labels: {\n            enabled: false\n        },\n        tickLength: 0\n    },\n    yAxis: {\n        min: 0,\n        max: 100,\n        tickLength: 5,\n        tickWidth: 1,\n        tickColor: '#C0C0C0',\n        gridLineColor: '#C0C0C0',\n        gridLineWidth: 1,\n        minorTickInterval: 5,\n        minorTickWidth: 1,\n        minorTickLength: 5,\n        minorGridLineWidth: 0,\n\n        title: null,\n        labels: {\n            format: '{value}%'\n        },\n        plotBands: [{\n            from: 0,\n            to: 40,\n            color: 'rgba(255,0,0,0.5)'\n        }, {\n            from: 40,\n            to: 80,\n            color: 'rgba(255,255,0,0.5)'\n        }, {\n            from: 80,\n            to: 100,\n            color: 'rgba(0,255,0,0.5)'\n        }]\n    },\n    legend: {\n        enabled: false\n    },\n\n    series: [{\n        data: [92],\n        color: '#000000',\n        dataLabels: {\n            enabled: true,\n            align: 'center',\n            format: '{point.y}%'\n        }\n    }]\n\n}, // Add some life\nfunction (chart) {\n    setInterval(function () {\n        Highcharts.each(chart.series, function (serie) {\n            var point = serie.points[0],\n                newVal,\n                inc = (Math.random() - 0.5) * 20;\n\n            newVal = point.y + inc;\n            if (newVal < 0 || newVal > 100) {\n                newVal = point.y - inc;\n            }\n\n            point.update(Math.floor(newVal));\n        });\n    }, 2000);\n\n});","css":"#container {\n    width: 400px;\n    height: 100px;\n    margin: 1em auto;\n}\n","html":"<div id=\"container\"></div>","npm":"// 安装\nnpm install highcharts@11.0.1 --save\n\n// import 模块 \nimport Highcharts from 'highcharts';\nimport Exporting  from 'highcharts/modules/exporting';\n\n// 初始化模块\nExporting(Highcharts);\n","scripts":["https://code.highcharts.com/11.0.1/highcharts.js","https://code.highcharts.com/11.0.1/modules/exporting.js"]}