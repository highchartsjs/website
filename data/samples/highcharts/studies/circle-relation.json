{"js":"(function (H) {\n    var defaultOptions = H.getOptions(),\n        extendClass = H.extendClass,\n        merge = H.merge,\n        seriesTypes = H.seriesTypes;\n    /**\n     * The series type factory. This will be included in HC5.\n     */\n    H.seriesType = function (type, parent, options, props) {\n\n        // Merge the options\n        defaultOptions.plotOptions[type] = merge(\n            defaultOptions.plotOptions[parent],\n            options\n        );\n\n        // Create the class\n        seriesTypes[type] = extendClass(seriesTypes[parent], props);\n        seriesTypes[type].prototype.type = type;\n    };\n\n    /**\n     * Define the circle series type\n     */\n    H.seriesType('circle', 'line', {\n        gravity: 0.5,\n        marker: {\n            symbol: 'circle'\n        },\n        showInLegend: false,\n        tooltip: {\n            pointFormat: '{series.name}'\n        }\n    }, {\n        getPointSpline: function (points, point, i) {\n            var ret = ['L', point.plotX, point.plotY],\n                center,\n                last = points[i - 1],\n                gravity = this.options.gravity,\n                invGravity = 1 - gravity;\n\n            if (point && last) {\n                center = this.xAxis.center || [(point.plotX + last.plotX) / 2, this.yAxis.len];\n                ret = [\n                    'C',\n                    last.plotX * invGravity + center[0] * gravity,\n                    last.plotY * invGravity + center[1] * gravity,\n                    point.plotX * invGravity + center[0] * gravity,\n                    point.plotY * invGravity + center[1] * gravity,\n                    point.plotX,\n                    point.plotY\n                ];\n            }\n            return ret;\n        }\n    });\n}(Highcharts));\n\nHighcharts.chart('container', {\n\n    chart: {\n        polar: true,\n        type: 'circle'\n    },\n\n    title: {\n        text: 'Relational database overview'\n    },\n\n    subtitle: {\n        text: 'Highcharts circle relation chart'\n    },\n\n    xAxis: {\n        categories: ['person', 'family', 'family_dwelling', 'dwelling', 'workplace', 'municipality'],\n        min: 0,\n        max: 6,\n        gridLineWidth: 0,\n        lineWidth: 0\n    },\n\n    yAxis: {\n        min: 0,\n        max: 1,\n        visible: false\n    },\n\n    series: [{\n        data: [{\n            x: 0,\n            y: 1\n        }, {\n            x: 4,\n            y: 1\n        }]\n    }, {\n        data: [{\n            x: 0,\n            y: 1\n        }, {\n            x: 1,\n            y: 1\n        }],\n        lineWidth: 5\n    }, {\n        data: [{\n            x: 1,\n            y: 1\n        }, {\n            x: 2,\n            y: 1\n        }]\n    }, {\n        data: [{\n            x: 2,\n            y: 1\n        }, {\n            x: 3,\n            y: 1\n        }]\n    }, {\n        data: [{\n            x: 3,\n            y: 1\n        }, {\n            x: 5,\n            y: 1\n        }],\n        lineWidth: 0.25\n    }, {\n        data: [{\n            x: 4,\n            y: 1\n        }, {\n            x: 5,\n            y: 1\n        }]\n    }]\n\n});","css":"#container {\n    min-width: 300px;\n    max-width: 800px;\n    height: 400px;\n    margin: 1em auto;\n}\n","html":"<div id=\"container\"></div>","npm":"// 安装\nnpm install highcharts@11.0.0 --save\n\n// import 模块 \nimport Highcharts     from 'highcharts';\nimport HighchartsMore from 'highcharts/highcharts-more';\nimport Exporting      from 'highcharts/modules/exporting';\n\n// 初始化模块\nHighchartsMore(Highcharts);\nExporting(Highcharts);\n","scripts":["https://code.highcharts.com/11.0.0/highcharts.js","https://code.highcharts.com/11.0.0/highcharts-more.js","https://code.highcharts.com/11.0.0/modules/exporting.js"]}