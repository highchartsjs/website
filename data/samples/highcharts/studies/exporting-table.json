{"js":"/**\n * Create the data table\n */\nHighcharts.drawTable = function () {\n\n    // user options\n    var tableTop = 310,\n        colWidth = 100,\n        tableLeft = 20,\n        rowHeight = 20,\n        cellPadding = 2.5,\n        valueDecimals = 1,\n        valueSuffix = ' °C';\n\n    // internal variables\n    var chart = this,\n        series = chart.series,\n        renderer = chart.renderer,\n        cellLeft = tableLeft;\n\n    // draw category labels\n    chart.xAxis[0].categories.forEach(function (name, i) {\n        renderer.text(\n            name,\n            cellLeft + cellPadding,\n            tableTop + (i + 2) * rowHeight - cellPadding\n        )\n            .css({\n                fontSize: '12px',\n                fontWeight: 'bold'\n            })\n            .add();\n    });\n\n    series.forEach(function (serie, i) {\n        cellLeft += colWidth;\n\n        // Apply the cell text\n        renderer.text(\n            serie.name,\n            cellLeft - cellPadding + colWidth,\n            tableTop + rowHeight - cellPadding\n        )\n            .attr({\n                align: 'right'\n            })\n            .css({\n                fontSize: '12px',\n                fontWeight: 'bold'\n            })\n            .add();\n\n        serie.data.forEach(function (point, row) {\n\n            // Apply the cell text\n            renderer.text(\n                Highcharts.numberFormat(point.y, valueDecimals) + valueSuffix,\n                cellLeft + colWidth - cellPadding,\n                tableTop + (row + 2) * rowHeight - cellPadding\n            )\n                .attr({\n                    align: 'right'\n                })\n                .css({\n                    fontSize: '12px'\n                })\n                .add();\n\n            // horizontal lines\n            if (row === 0) {\n                Highcharts.tableLine( // top\n                    renderer,\n                    tableLeft,\n                    tableTop + cellPadding,\n                    cellLeft + colWidth,\n                    tableTop + cellPadding\n                );\n                Highcharts.tableLine( // bottom\n                    renderer,\n                    tableLeft,\n                    tableTop + (serie.data.length + 1) *\n                        rowHeight + cellPadding,\n                    cellLeft + colWidth,\n                    tableTop + (serie.data.length + 1) * rowHeight + cellPadding\n                );\n            }\n            // horizontal line\n            Highcharts.tableLine(\n                renderer,\n                tableLeft,\n                tableTop + row * rowHeight + rowHeight + cellPadding,\n                cellLeft + colWidth,\n                tableTop + row * rowHeight + rowHeight + cellPadding\n            );\n\n        });\n\n        // vertical lines\n        if (i === 0) { // left table border\n            Highcharts.tableLine(\n                renderer,\n                tableLeft,\n                tableTop + cellPadding,\n                tableLeft,\n                tableTop + (serie.data.length + 1) * rowHeight + cellPadding\n            );\n        }\n\n        Highcharts.tableLine(\n            renderer,\n            cellLeft,\n            tableTop + cellPadding,\n            cellLeft,\n            tableTop + (serie.data.length + 1) * rowHeight + cellPadding\n        );\n\n        if (i === series.length - 1) { // right table border\n\n            Highcharts.tableLine(\n                renderer,\n                cellLeft + colWidth,\n                tableTop + cellPadding,\n                cellLeft + colWidth,\n                tableTop + (serie.data.length + 1) * rowHeight + cellPadding\n            );\n        }\n\n    });\n\n\n};\n\n/**\n * Draw a single line in the table\n */\nHighcharts.tableLine = function (renderer, x1, y1, x2, y2) {\n    renderer.path(['M', x1, y1, 'L', x2, y2])\n        .attr({\n            stroke: 'silver',\n            'stroke-width': 1\n        })\n        .add();\n};\n\n/**\n * Create the chart\n */\nwindow.chart = Highcharts.chart('container', {\n\n    chart: {\n        events: {\n            load: Highcharts.drawTable\n        },\n        borderWidth: 2,\n        width: 600,\n        height: 600\n    },\n\n    title: {\n        text: 'Average monthly temperatures'\n    },\n\n    xAxis: {\n        categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n    },\n\n    yAxis: {\n        title: {\n            text: 'Temperature (°C)'\n        }\n    },\n\n    legend: {\n        y: -300\n    },\n\n    series: [{\n        name: 'Tokyo',\n        data: [7.0, 6.9, 9.5, 14.5, 18.2, 21.5, 25.2, 26.5, 23.3, 18.3, 13.9,\n            9.6]\n    }, {\n        name: 'New York',\n        data: [-0.2, 0.8, 5.7, 11.3, 17.0, 22.0, 24.8, 24.1, 20.1, 14.1, 8.6,\n            2.5]\n    }, {\n        name: 'Berlin',\n        data: [-0.9, 0.6, 3.5, 8.4, 13.5, 17.0, 18.6, 17.9, 14.3, 9.0, 3.9, 1.0]\n    }, {\n        name: 'London',\n        data: [3.9, 4.2, 5.7, 8.5, 11.9, 15.2, 17.0, 16.6, 14.2, 10.3, 6.6, 4.8]\n    }]\n});\n","css":"#container {\n    margin-top: 20px;\n}\n","html":"\n<div id=\"container\"></div>","npm":"// 安装\nnpm install highcharts@11.0.0 --save\n\n// import 模块 \nimport Highcharts from 'highcharts';\nimport Exporting  from 'highcharts/modules/exporting';\n\n// 初始化模块\nExporting(Highcharts);\n","scripts":["https://code.highcharts.com/11.0.0/highcharts.js","https://code.highcharts.com/11.0.0/modules/exporting.js"]}