{"js":"/**\n * This is an advanced demo of setting up Highcharts with the flags feature borrowed from Highcharts Stock.\n * It also shows custom graphics drawn in the chart area on chart load.\n */\n\n\n/**\n * Fires on chart load, called from the chart.events.load option.\n */\nfunction onChartLoad() {\n\n    var centerX = Math.max(this.chartWidth * 0.2, 140),\n        centerY = Math.max(this.chartHeight * 0.3, 110),\n        path = [],\n        angle,\n        radius,\n        badgeColor = Highcharts.color(Highcharts.getOptions().colors[0])\n            .brighten(-0.2)\n            .get(),\n        spike,\n        empImage,\n        big5,\n        label,\n        left,\n        right,\n        years,\n        renderer;\n\n    if (this.chartWidth < 530) {\n        return;\n    }\n\n    // Draw the spiked disc\n    for (angle = 0; angle < 2 * Math.PI; angle += Math.PI / 24) {\n        radius = spike ? 80 : 70;\n        path.push(\n            'L',\n            centerX + radius * Math.cos(angle),\n            centerY + radius * Math.sin(angle)\n        );\n        spike = !spike;\n    }\n    path[0] = 'M';\n    path.push('z');\n    this.renderer.path(path)\n        .attr({\n            fill: badgeColor,\n            zIndex: 6\n        })\n        .add();\n\n    // Employee image overlay\n    empImage = this.renderer.path(path)\n        .attr({\n            zIndex: 7,\n            opacity: 0,\n            stroke: badgeColor,\n            'stroke-width': 1\n        })\n        .add();\n\n    // Big 5\n    big5 = this.renderer.text('10')\n        .attr({\n            zIndex: 6\n        })\n        .css({\n            color: 'white',\n            fontSize: '100px',\n            fontStyle: 'italic',\n            fontFamily: '\\'Brush Script MT\\', sans-serif'\n        })\n        .add();\n    big5.attr({\n        x: centerX - big5.getBBox().width / 2,\n        y: centerY + 14\n    });\n\n    // Draw the label\n    label = this.renderer.text('Highcharts Anniversary')\n        .attr({\n            zIndex: 6\n        })\n        .css({\n            color: '#FFFFFF'\n        })\n        .add();\n\n    left = centerX - label.getBBox().width / 2;\n    right = centerX + label.getBBox().width / 2;\n\n    label.attr({\n        x: left,\n        y: centerY + 44\n    });\n\n    // The band\n    left = centerX - 90;\n    right = centerX + 90;\n    this.renderer\n        .path([\n            'M', left, centerY + 30,\n            'L', right, centerY + 30,\n            right, centerY + 50,\n            left, centerY + 50,\n            'z',\n            'M', left, centerY + 40,\n            'L', left - 20, centerY + 40,\n            left - 10, centerY + 50,\n            left - 20, centerY + 60,\n            left + 10, centerY + 60,\n            left, centerY + 50,\n            left + 10, centerY + 60,\n            left + 10, centerY + 50,\n            left, centerY + 50,\n            'z',\n            'M', right, centerY + 40,\n            'L', right + 20, centerY + 40,\n            right + 10, centerY + 50,\n            right + 20, centerY + 60,\n            right - 10, centerY + 60,\n            right, centerY + 50,\n            right - 10, centerY + 60,\n            right - 10, centerY + 50,\n            right, centerY + 50,\n            'z'\n        ])\n        .attr({\n            fill: badgeColor,\n            stroke: '#FFFFFF',\n            'stroke-width': 1,\n            zIndex: 5\n        })\n        .add();\n\n    // 2009-2019\n    years = this.renderer.text('2009-2019')\n        .attr({\n            zIndex: 6\n        })\n        .css({\n            color: '#FFFFFF',\n            fontStyle: 'italic',\n            fontSize: '10px'\n        })\n        .add();\n    years.attr({\n        x: centerX - years.getBBox().width / 2,\n        y: centerY + 62\n    });\n\n    // Prepare mouseover\n    renderer = this.renderer;\n    if (renderer.defs) { // is SVG\n        this.get('employees').points.forEach(point => {\n            let pattern;\n\n            if (point.image) {\n                pattern = renderer.createElement('pattern').attr({\n                    id: 'pattern-' + point.image,\n                    patternUnits: 'userSpaceOnUse',\n                    width: 400,\n                    height: 400\n                }).add(renderer.defs);\n                renderer.image(\n                    'https://www.highcharts.com/images/employees2014/' + point.image + '.jpg',\n                    centerX - 80,\n                    centerY - 80,\n                    160,\n                    213\n                ).add(pattern);\n\n                Highcharts.addEvent(point, 'mouseOver', function () {\n                    empImage\n                        .attr({\n                            fill: 'url(#pattern-' + point.image + ')'\n                        })\n                        .animate({\n                            opacity: 1\n                        }, {\n                            duration: 500\n                        });\n                });\n                Highcharts.addEvent(point, 'mouseOut', function () {\n                    empImage.animate({\n                        opacity: 0\n                    }, {\n                        duration: 500\n                    });\n                });\n            }\n        });\n    }\n}\n\n// Get the turnover. Read the table from the HTML, sort by the joined/left\n// events and keep track of the number of employees.\nfunction getTurnover() {\n    let employees = 0;\n    return [].reduce.call(\n        document.getElementById('turnover').querySelectorAll('tr'),\n        (turnover, tr) => {\n            const dateJoined = Date.parse(tr.children[1].textContent);\n            if (!isNaN(dateJoined)) {\n                turnover.push({\n                    x: dateJoined,\n                    name: `${tr.children[0].textContent} joined`,\n                    accumulate: 1,\n                    image: tr.children[3].textContent || null\n                });\n            }\n\n            const dateLeft = Date.parse(tr.children[2].textContent);\n            if (!isNaN(dateLeft)) {\n                turnover.push({\n                    x: dateLeft,\n                    name: `${tr.children[0].textContent} left`,\n                    accumulate: -1,\n                    image: tr.children[3].textContent || null\n                });\n            }\n\n            return turnover;\n        },\n        [])\n        .sort((a, b) => a.x - b.x)\n        .map(event => Object.assign(\n            event, {\n                y: (employees += event.accumulate)\n            }\n        ));\n}\n\nconst options = {\n    chart: {\n        events: {\n            load: onChartLoad\n        },\n        height: '56%'\n    },\n    xAxis: {\n        type: 'datetime',\n        minTickInterval: 365 * 24 * 36e5,\n        labels: {\n            align: 'left'\n        },\n        plotBands: [{\n            from: Date.UTC(2009, 10, 27),\n            to: Date.UTC(2010, 11, 1),\n            color: '#EFFFFF',\n            label: {\n                text: '<em>Offices:</em><br> Torstein\\'s<br>basement',\n                style: {\n                    color: '#999999'\n                },\n                y: 180\n            }\n        }, {\n            from: Date.UTC(2010, 11, 1),\n            to: Date.UTC(2013, 9, 1),\n            color: '#FFFFEF',\n            label: {\n                text: '<em>Offices:</em><br> Tomtebu',\n                style: {\n                    color: '#999999'\n                },\n                y: 30\n            }\n        }, {\n            from: Date.UTC(2013, 9, 1),\n            to: Date.UTC(2016, 2, 10),\n            color: '#FFEFFF',\n            label: {\n                text: '<em>Offices:</em><br> Vik√òrsta',\n                style: {\n                    color: '#999999'\n                },\n                y: 30\n            }\n        }, {\n            from: Date.UTC(2016, 2, 10),\n            to: Date.now(),\n            color: '#EFFFEF',\n            label: {\n                text: '<em>Offices:</em><br> Blix Hotel',\n                style: {\n                    color: '#999999'\n                },\n                align: 'left',\n                y: 20,\n                x: 20\n            }\n        }]\n    },\n    title: {\n        text: 'Highcharts and Highsoft timeline'\n    },\n    tooltip: {\n        style: {\n            width: '250px'\n        }\n    },\n    yAxis: [{\n        max: 100,\n        labels: {\n            enabled: false\n        },\n        title: {\n            text: ''\n        },\n        gridLineColor: 'rgba(0, 0, 0, 0.07)'\n    }, {\n        allowDecimals: false,\n        title: {\n            text: 'Employees'\n        },\n        opposite: true,\n        gridLineWidth: 0\n    }],\n    plotOptions: {\n        series: {\n            marker: {\n                enabled: false,\n                symbol: 'circle',\n                radius: 2\n            },\n            fillOpacity: 0.5\n        },\n        flags: {\n            clip: false,\n            tooltip: {\n                xDateFormat: '%B %e, %Y'\n            },\n            allowOverlapX: true\n        }\n    },\n    series: [{\n        name: 'Revenue',\n        id: 'revenue',\n        type: 'area',\n        data: [\n            [1259622000000, 2],\n            [1262300400000, 2],\n            [1264978800000, 2],\n            [1267398000000, 2],\n            [1270072800000, 2],\n            [1272664800000, 3],\n            [1275343200000, 3],\n            [1277935200000, 3],\n            [1280613600000, 5],\n            [1283292000000, 4],\n            [1285884000000, 6],\n            [1288566000000, 7],\n            [1291158000000, 5],\n            [1293836400000, 7],\n            [1296514800000, 8],\n            [1298934000000, 10],\n            [1301608800000, 9],\n            [1304200800000, 10],\n            [1306879200000, 11],\n            [1309471200000, 14],\n            [1312149600000, 13],\n            [1314828000000, 13],\n            [1317420000000, 21],\n            [1320102000000, 23],\n            [1322694000000, 24],\n            [1325372400000, 22],\n            [1328050800000, 26],\n            [1330556400000, 24],\n            [1333231200000, 23],\n            [1335823200000, 26],\n            [1338501600000, 24],\n            [1341093600000, 26],\n            [1343772000000, 28],\n            [1346450400000, 32],\n            [1349042400000, 28],\n            [1351724400000, 35],\n            [1354316400000, 27],\n            [1356994800000, 28],\n            [1359673200000, 28],\n            [1362092400000, 34],\n            [1364767200000, 34],\n            [1367359200000, 37],\n            [1370037600000, 40],\n            [1372629600000, 44],\n            [1375308000000, 41],\n            [1377986400000, 42],\n            [1380578400000, 40],\n            [1383260400000, 40],\n            [1385852400000, 38],\n            [1388530800000, 42],\n            [1391209200000, 34],\n            [1393628400000, 47],\n            [1396303200000, 37],\n            [1398895200000, 46],\n            [1401573600000, 41],\n            [1404165600000, 42],\n            [1406844000000, 42],\n            [1409522400000, 58],\n            [1412114400000, 66],\n            [1414796400000, 57],\n            [1417388400000, 79],\n            [1420066800000, 58],\n            [1422745200000, 55],\n            [1425164400000, 86],\n            [1427839200000, 64],\n            [1430431200000, 53],\n            [1433109600000, 73],\n            [1435701600000, 68],\n            [1438380000000, 69],\n            [1441058400000, 83],\n            [1443650400000, 97],\n            [1446332400000, 78],\n            [1448924400000, 81],\n            [1451602800000, 68],\n            [1454281200000, 68],\n            [1456786800000, 84],\n            [1459461600000, 73],\n            [1462053600000, 73],\n            [1464732000000, 72],\n            [1467324000000, 72],\n            [1470002400000, 86],\n            [1472680800000, 76],\n            [1475272800000, 83],\n            [1477954800000, 84],\n            [1480546800000, 83],\n            [1483225200000, 53],\n            [1485903600000, 60],\n            [1488322800000, 80],\n            [1490997600000, 71],\n            [1493589600000, 63],\n            [1496268000000, 77],\n            [1498860000000, 57],\n            [1501538400000, 98],\n            [1504216800000, 55],\n            [1506808800000, 84],\n            [1509490800000, 74],\n            [1512082800000, 79],\n            [1514761200000, 71],\n            [1517439600000, 50],\n            [1519858800000, 95],\n            [1522533600000, 69],\n            [1525125600000, 93],\n            [1527804000000, 80],\n            [1530396000000, 56],\n            [1533074400000, 63],\n            [1535752800000, 72],\n            [1538344800000, 85],\n            [1541026800000, 90],\n            [1543618800000, 78],\n            [1546297200000, 86],\n            [1548975600000, 76],\n            [1551394800000, 92],\n            [1554069600000, 76],\n            [1556661600000, 100],\n            [1559340000000, 73],\n            [1561932000000, 95],\n            [1564610400000, 80],\n            [1567288800000, 71],\n            [1569880800000, 96],\n            [1572562800000, null]\n        ],\n        tooltip: {\n            xDateFormat: '%B %Y',\n            valueSuffix: ' % of best month'\n        }\n    }, {\n        yAxis: 1,\n        name: 'Highsoft employees',\n        id: 'employees',\n        type: 'area',\n        step: 'left',\n        tooltip: {\n            headerFormat: '<span style=\"font-size: 11px;color:#666\">{point.x:%B %e, %Y}</span><br>',\n            pointFormat: '{point.name}<br><b>{point.y}</b>',\n            valueSuffix: ' employees'\n        },\n        data: getTurnover()\n\n    }]\n};\n\n// Add flags for important milestones. This requires Highcharts Stock.\nif (Highcharts.Series.types.flags) {\n    options.series.push({\n        type: 'flags',\n        name: 'Highmaps',\n        color: '#333333',\n        shape: 'squarepin',\n        y: -80,\n        data: [{\n            x: Date.UTC(2014, 5, 13),\n            text: 'Highmaps version 1.0 released',\n            title: 'Maps'\n        }],\n        showInLegend: false\n    }, {\n        type: 'flags',\n        name: 'Cloud',\n        color: '#333333',\n        shape: 'squarepin',\n        y: -55,\n        data: [{\n            x: Date.UTC(2014, 4, 1),\n            text: 'Highcharts Cloud Beta',\n            title: 'Cloud'\n        },\n        {\n            x: Date.UTC(2017, 10, 24),\n            text: 'Highcharts Cloud v2',\n            title: 'Cloud v2'\n        },\n        {\n            x: Date.UTC(2018, 11, 6),\n            text: 'Highcharts Cloud v2',\n            title: 'Cloud v3'\n        }\n        ],\n        showInLegend: false\n    }, {\n        type: 'flags',\n        name: 'Highcharts',\n        color: '#333333',\n        shape: 'circlepin',\n        data: [{\n            x: Date.UTC(2009, 10, 27),\n            text: 'Highcharts version 1.0 released',\n            title: '1.0'\n        },\n        {\n            x: Date.UTC(2010, 6, 13),\n            text: 'Ported from canvas to SVG rendering',\n            title: '2.0'\n        },\n        {\n            x: Date.UTC(2010, 10, 23),\n            text: 'Dynamically resize and scale to text labels',\n            title: '2.1'\n        },\n        {\n            x: Date.UTC(2011, 9, 18),\n            text: 'Highcharts Stock version 1.0 released',\n            title: 'Stock',\n            shape: 'squarepin'\n        },\n        {\n            x: Date.UTC(2012, 7, 24),\n            text: 'Gauges, polar charts and range series',\n            title: '2.3'\n        },\n        {\n            x: Date.UTC(2013, 2, 22),\n            text: 'Multitouch support, more series types',\n            title: '3.0'\n        },\n        {\n            x: Date.UTC(2014, 3, 22),\n            text: '3D charts, heatmaps',\n            title: '4.0'\n        },\n        {\n            x: Date.UTC(2016, 8, 29),\n            text: 'Styled mode, responsive options, accessibility, chart.update',\n            title: '5.0'\n        },\n        {\n            x: Date.UTC(2017, 9, 4),\n            text: 'Annotations, Boost, Series labels, new series types',\n            title: '6.0'\n        },\n        {\n            x: Date.UTC(2018, 11, 11),\n            text: 'Sonification, TypeScript (beta), new series types',\n            title: '7.0'\n        }\n        ],\n        showInLegend: false\n    }, {\n        type: 'flags',\n        name: 'logo',\n        shape: 'url(https://www.highcharts.com/favicon.ico)',\n        data: [{\n            x: Date.UTC(2014, 4, 21),\n            text: 'New logo',\n            title: ' '\n        }],\n        y: -200,\n        showInLegend: false\n\n    }, {\n        type: 'flags',\n        name: 'Events',\n        color: '#333333',\n        fillColor: 'rgba(255,255,255,0.8)',\n        data: [{\n            x: Date.UTC(2012, 10, 1),\n            text: 'Highsoft won \"Entrepeneur of the Year\" in Sogn og Fjordane, Norway',\n            title: 'Award'\n        },\n        {\n            x: Date.UTC(2012, 11, 25),\n            text: 'Packt Publishing published <em>Learning Highcharts by Example</em>. Since then, many other books are written about Highcharts.',\n            title: 'First book'\n        },\n        {\n            x: Date.UTC(2013, 4, 25),\n            text: 'Highsoft nominated Norway\\'s Startup of the Year',\n            title: 'Award'\n        },\n        {\n            x: Date.UTC(2014, 4, 25),\n            text: 'Highsoft nominated Best Startup in Nordic Startup Awards',\n            title: 'Award'\n        },\n        {\n            x: Date.UTC(2017, 9, 20),\n            text: 'Torstein awarded EY Entrepeneur of the Year, Vestlandet',\n            title: 'Award'\n        },\n        {\n            x: Date.UTC(2018, 11, 13),\n            text: 'Grethe awarded NCE Ambassador',\n            title: 'Award'\n        }\n        ],\n        onSeries: 'revenue',\n        allowOverlapX: true,\n        showInLegend: false\n    });\n}\n\nHighcharts.chart('container', options);\n","css":"#container {\n    min-width: 300px;\n    max-width: 2000px;\n    margin: 1em auto;\n}\n\ntable {\n    border-collapse: collapse;\n}\n\ntable td,\ntable th {\n    border: 1px solid silver;\n    padding: 0.5em;\n}\n","html":"<div id=\"container\"></div>\n\n<table id=\"turnover\" style=\"display: none\">\n    <tr>\n        <th>Name</th>\n        <th>Joined</th>\n        <th>Left</th>\n        <th>Image</th>\n    </tr>\n    <tr>\n        <td>Torstein</td>\n        <td>2009-11-01</td>\n        <td></td>\n        <td>Torstein</td>\n    </tr>\n    <tr>\n        <td>Grethe</td>\n        <td>2010-11-20</td>\n        <td></td>\n        <td>Grethe</td>\n    </tr>\n    <tr>\n        <td>Erik</td>\n        <td>2011-04-01</td>\n        <td>2012-09-01</td>\n        <td></td>\n    </tr>\n    <tr>\n        <td>Gert</td>\n        <td>2011-08-01</td>\n        <td></td>\n        <td>Gert</td>\n    </tr>\n    <tr>\n        <td>Hilde</td>\n        <td>2011-08-15</td>\n        <td></td>\n        <td>Hilde</td>\n    </tr>\n    <tr>\n        <td>Guro</td>\n        <td>2012-06-01</td>\n        <td></td>\n        <td>Guro</td>\n    </tr>\n    <tr>\n        <td>Anne Jorunn</td>\n        <td>2012-09-15</td>\n        <td></td>\n        <td>AnneJorunn</td>\n    </tr>\n    <tr>\n        <td>Jon Arild</td>\n        <td>2013-08-01</td>\n        <td></td>\n        <td>JonArild</td>\n    </tr>\n    <tr>\n        <td>√òystein</td>\n        <td>2013-08-20</td>\n        <td></td>\n        <td>Oystein</td>\n    </tr>\n    <tr>\n        <td>Stephane</td>\n        <td>2013-10-01</td>\n        <td>2015-06-01</td>\n        <td></td>\n    </tr>\n    <tr>\n        <td>Anne Line</td>\n        <td>2014-08-08</td>\n        <td>2015-05-31</td>\n        <td></td>\n    </tr>\n    <tr>\n        <td>Anita</td>\n        <td>2014-10-01</td>\n        <td></td>\n        <td>Anita</td>\n    </tr>\n    <tr>\n        <td>Gjertrud</td>\n        <td>2015-01-01</td>\n        <td></td>\n        <td>Gjertrud</td>\n    </tr>\n    <tr>\n        <td>Mustapha</td>\n        <td>2015-01-01</td>\n        <td></td>\n        <td>Mustapha</td>\n    </tr>\n    <tr>\n        <td>Katharina</td>\n        <td>2015-05-10</td>\n        <td></td>\n        <td></td>\n    </tr>\n    <tr>\n        <td>Linda</td>\n        <td>2015-08-18</td>\n        <td></td>\n        <td>Linda</td>\n    </tr>\n    <tr>\n        <td>Sigrid</td>\n        <td>2015-08-18</td>\n        <td></td>\n        <td></td>\n    </tr>\n    <tr>\n        <td>H√•vard</td>\n        <td>2015-12-01</td>\n        <td>2017.07.27</td>\n        <td></td>\n    </tr>\n    <tr>\n        <td>Jonathan</td>\n        <td>2016-01-01</td>\n        <td>2016-07-29</td>\n        <td></td>\n    </tr>\n    <tr>\n        <td>Graham</td>\n        <td>2016-02-01</td>\n        <td>2016-04-30</td>\n        <td></td>\n    </tr>\n    <tr>\n        <td>Sarah</td>\n        <td>2016-02-01</td>\n        <td></td>\n        <td></td>\n    </tr>\n    <tr>\n        <td>Elisabeth</td>\n        <td>2016-08-22</td>\n        <td></td>\n        <td></td>\n    </tr>\n    <tr>\n        <td>Nathalia</td>\n        <td>2016-08.22</td>\n        <td>2017-11-30</td>\n        <td></td>\n    </tr>\n    <tr>\n        <td>Lars</td>\n        <td>2016-06-13</td>\n        <td>2017-06-30</td>\n        <td></td>\n    </tr>\n    <tr>\n        <td>Henrik</td>\n        <td>2016-08-01</td>\n        <td>2017-02-19</td>\n        <td></td>\n    </tr>\n    <tr>\n        <td>Christer</td>\n        <td>2016-08-15</td>\n        <td></td>\n        <td></td>\n    </tr>\n    <tr>\n        <td>Kulbir</td>\n        <td>2017-08-01</td>\n        <td></td>\n        <td></td>\n    </tr>\n    <tr>\n        <td>Henrik</td>\n        <td>2017-09-25</td>\n        <td></td>\n        <td></td>\n    </tr>\n    <tr>\n        <td>Cathrine</td>\n        <td>2017-09-25</td>\n        <td></td>\n        <td></td>\n    </tr>\n    <tr>\n        <td>Sam</td>\n        <td>2017-07-01</td>\n        <td></td>\n        <td></td>\n    </tr>\n    <tr>\n        <td>Georg</td>\n        <td>2017-01.01</td>\n        <td>2019-06-18</td>\n        <td></td>\n    </tr>\n    <tr>\n        <td>Julia</td>\n        <td>2018-01-01</td>\n        <td></td>\n        <td></td>\n    </tr>\n    <tr>\n        <td>Sophie</td>\n        <td>2018-02-01</td>\n        <td></td>\n        <td></td>\n    </tr>\n    <tr>\n        <td>Julia</td>\n        <td>2018-08-20</td>\n        <td></td>\n        <td></td>\n    </tr>\n    <tr>\n        <td>Marita</td>\n        <td>2018-08-01</td>\n        <td></td>\n        <td></td>\n    </tr>\n    <tr>\n        <td>H√•vard</td>\n        <td>2018-08-20</td>\n        <td></td>\n        <td></td>\n    </tr>\n    <tr>\n        <td>Jan Martin</td>\n        <td>2019-04-01</td>\n        <td></td>\n        <td></td>\n    </tr>\n    <tr>\n        <td>Joakim</td>\n        <td>2019-03-14</td>\n        <td></td>\n        <td></td>\n    </tr>\n    <tr>\n        <td>Anniken</td>\n        <td>2019-03-14</td>\n        <td></td>\n        <td></td>\n    </tr>\n    <tr>\n        <td>Eirik</td>\n        <td>2019-05-06</td>\n        <td></td>\n        <td></td>\n    </tr>\n    <tr>\n        <td>Sara</td>\n        <td>2019-06-03</td>\n        <td></td>\n        <td></td>\n    </tr>\n    <tr>\n        <td>Signrun</td>\n        <td>2019-06.10</td>\n        <td></td>\n        <td></td>\n    </tr>\n    <tr>\n        <td>Maria</td>\n        <td>2019-08-12</td>\n        <td></td>\n        <td></td>\n    </tr>\n    <tr>\n        <td>G√∏ran</td>\n        <td>2019-08-19</td>\n        <td></td>\n        <td></td>\n    </tr>\n    <tr>\n        <td>Emil</td>\n        <td>2019-08-12</td>\n        <td></td>\n        <td></td>\n    </tr>\n</table>\n","npm":"// ÂÆâË£Ö\nnpm install highcharts@10.3.2 --save\n\n// import Ê®°Âùó \nimport Highcharts      from 'highcharts/highstock';\nimport Exporting       from 'highcharts/modules/exporting';\nimport HighchartsZh_CN from 'https://code.hcharts.cn/plugins/highcharts-zh_CN.js';\n\n// ÂàùÂßãÂåñÊ®°Âùó\nExporting(Highcharts);\nHighchartsZh_CN(Highcharts);\n","scripts":["https://code.hcharts.cn/stock/10.3.2/highstock.js","https://code.hcharts.cn/10.3.2/modules/exporting.js","https://code.hcharts.cn/plugins/highcharts-zh_CN.js"]}