{"js":"// Based on https://github.com/topojson/topojson-specification\nconst topoJSONDecode = (topology, object) => {\n    if (!topology.type === 'Topology') {\n        return topology;\n    }\n\n    // Decode first object/feature as default\n    if (!object) {\n        object = Object.keys(topology.objects)[0];\n    }\n\n    const { scale, translate } = topology.transform;\n    const arcsArray = topology.arcs.map(arc => {\n        let x = 0,\n            y = 0;\n        return arc.map(position => {\n            position = position.slice();\n            position[0] = (x += position[0]) * scale[0] + translate[0];\n            position[1] = (y += position[1]) * scale[1] + translate[1];\n            return position;\n        });\n    });\n\n    const arcsToCoordinates = arcs => {\n        if (typeof arcs[0] === 'number') {\n            return arcs.reduce((coordinates, arc, i) => coordinates.concat(\n                (arc < 0 ? arcsArray[~arc].reverse() : arcsArray[arc])\n                    .slice(i === 0 ? 0 : 1)\n            ), []);\n        }\n        return arcs.map(arcsToCoordinates);\n    };\n\n    const geojson = {\n        type: 'FeatureCollection',\n        copyright: topology.copyright,\n        copyrightShort: topology.copyrightShort,\n        copyrightUrl: topology.copyrightUrl\n    };\n    geojson.features = topology.objects[object].geometries\n        .map(geometry => ({\n            type: 'Feature',\n            properties: geometry.properties,\n            geometry: {\n                type: geometry.type,\n                coordinates: geometry.coordinates ||\n                    arcsToCoordinates(geometry.arcs)\n            }\n        }));\n\n    return geojson;\n};\n\n\n// Source: https://github.com/leakyMirror/map-of-europe\nHighcharts.getJSON(\n    'https://cdn.jsdelivr.net/gh/highcharts/highcharts@v9.2.0/samples/data/europe.topo.json',\n    topology => {\n\n        // Convert the topoJSON feature into geoJSON\n        const map = topoJSONDecode(topology);\n        map.copyrightUrl = 'https://github.com/leakyMirror/map-of-europe';\n        map.copyrightShort = 'leakyMirror';\n\n        // Create a dummy data value for each feature\n        const data = map.features.map((f, i) => i % 5);\n\n        // Initialize the chart\n        Highcharts.mapChart('container', {\n            chart: {\n                map\n            },\n\n            title: {\n                text: 'TopoJSON in Highcharts Maps'\n            },\n\n            mapView: {\n                projection: {\n                    name: 'Orthographic',\n                    rotation: [-15, -40]\n                }\n            },\n\n            colorAxis: {\n                tickPixelInterval: 100,\n                minColor: '#F1EEF6',\n                maxColor: '#900037'\n            },\n\n            tooltip: {\n                pointFormat: '{point.properties.NAME}: {point.value}'\n            },\n\n            series: [{\n                data,\n                joinBy: null,\n                name: 'Random data',\n                states: {\n                    hover: {\n                        color: '#a4edba'\n                    }\n                },\n                dataLabels: {\n                    enabled: true,\n                    format: '{point.properties.NAME}'\n                }\n            }]\n        });\n    }\n);\n","css":"#container {\n    height: 500px;\n    min-width: 310px;\n    max-width: 800px;\n    margin: 0 auto;\n}\n\n.loading {\n    margin-top: 10em;\n    text-align: center;\n    color: gray;\n}\n","html":"\n\n\n<div id=\"container\"></div>\n","scripts":["https://cdnjs.cloudflare.com/ajax/libs/proj4js/2.5.0/proj4.js","https://code.highcharts.com/maps/9.3.2/highmaps.js","https://code.highcharts.com/maps/9.3.2/modules/data.js","https://code.highcharts.com/maps/9.3.2/modules/exporting.js","https://code.highcharts.com/maps/9.3.2/modules/offline-exporting.js","https://code.highcharts.com.cn/highcharts-plugins/highcharts-zh_CN.js"]}