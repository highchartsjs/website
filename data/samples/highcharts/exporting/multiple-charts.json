{"js":"/**\n * Create a global getSVG method that takes an array of charts as an\n * argument\n */\nHighcharts.getSVG = function (charts) {\n    let top = 0;\n    let width = 0;\n\n    const groups = charts.map(chart => {\n        let svg = chart.getSVG();\n        // Get width/height of SVG for export\n        const svgWidth = +svg.match(\n            /^<svg[^>]*width\\s*=\\s*\\\"?(\\d+)\\\"?[^>]*>/\n        )[1];\n        const svgHeight = +svg.match(\n            /^<svg[^>]*height\\s*=\\s*\\\"?(\\d+)\\\"?[^>]*>/\n        )[1];\n\n        svg = svg\n            .replace(\n                '<svg',\n                '<g transform=\"translate(0,' + top + ')\" '\n            )\n            .replace('</svg>', '</g>');\n\n        top += svgHeight;\n        width = Math.max(width, svgWidth);\n\n        return svg;\n    }).join('');\n\n    return `<svg height=\"${top}\" width=\"${width}\" version=\"1.1\"\n        xmlns=\"http://www.w3.org/2000/svg\">\n            ${groups}\n        </svg>`;\n};\n\n/**\n * Create a global exportCharts method that takes an array of charts as an\n * argument, and exporting options as the second argument\n */\nHighcharts.exportCharts = function (charts, options) {\n\n    // Merge the options\n    options = Highcharts.merge(Highcharts.getOptions().exporting, options);\n\n    // Post to export server\n    Highcharts.post(options.url, {\n        filename: options.filename || 'chart',\n        type: options.type,\n        width: options.width,\n        svg: Highcharts.getSVG(charts)\n    });\n};\n\nconst chart1 = Highcharts.chart('container1', {\n\n    chart: {\n        height: 200\n    },\n\n    title: {\n        text: 'First Chart'\n    },\n\n    credits: {\n        enabled: false\n    },\n\n    xAxis: {\n        categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun',\n            'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n    },\n\n    series: [{\n        data: [29.9, 71.5, 106.4, 129.2, 144.0, 176.0,\n            135.6, 148.5, 216.4, 194.1, 95.6, 54.4],\n        showInLegend: false\n    }],\n\n    exporting: {\n        enabled: false // hide button\n    }\n\n});\n\nconst chart2 = Highcharts.chart('container2', {\n\n    chart: {\n        type: 'column',\n        height: 200\n    },\n\n    title: {\n        text: 'Second Chart'\n    },\n\n    xAxis: {\n        categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun',\n            'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n    },\n\n    series: [{\n        data: [176.0, 135.6, 148.5, 216.4, 194.1, 95.6,\n            54.4, 29.9, 71.5, 106.4, 129.2, 144.0],\n        colorByPoint: true,\n        showInLegend: false\n    }],\n\n    exporting: {\n        enabled: false // hide button\n    }\n\n});\n\ndocument.getElementById('export-png').addEventListener('click', () =>\n    Highcharts.exportCharts([chart1, chart2])\n);\n\ndocument.getElementById('export-pdf').addEventListener('click', () =>\n    Highcharts.exportCharts([chart1, chart2], {\n        type: 'application/pdf'\n    })\n);","css":".container {\n    max-width: 600px;\n    min-width: 320px;\n    margin: 0 auto;\n}\n\n#buttonrow {\n    max-width: 600px;\n    min-width: 320px;\n    margin: 0 auto;\n}\n","html":"\n\n<div id=\"container1\" class=\"container\"></div>\n<div id=\"container2\" class=\"container\"></div>\n\n<div id=\"buttonrow\">\n\t<button id=\"export-png\">Export to PNG</button>\n\t<button id=\"export-pdf\">Export to PDF</button>\n</div>","npm":"// 安装\nnpm install highcharts@11.0.0 --save\n\n// import 模块 \nimport Highcharts from 'highcharts';\nimport Exporting  from 'highcharts/modules/exporting';\n\n// 初始化模块\nExporting(Highcharts);\n","scripts":["https://code.highcharts.com/11.0.0/highcharts.js","https://code.highcharts.com/11.0.0/modules/exporting.js"]}