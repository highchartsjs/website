{"js":"/*\n    Simple demo showing some interactivity options of Highcharts Gantt. More\n    custom behavior can be added using event handlers and API calls. See\n    http://api.highcharts.com/gantt.\n*/\n\nvar today = new Date(),\n    day = 1000 * 60 * 60 * 24,\n    each = Highcharts.each,\n    reduce = Highcharts.reduce,\n    btnShowDialog = document.getElementById('btnShowDialog'),\n    btnRemoveTask = document.getElementById('btnRemoveSelected'),\n    btnAddTask = document.getElementById('btnAddTask'),\n    btnCancelAddTask = document.getElementById('btnCancelAddTask'),\n    addTaskDialog = document.getElementById('addTaskDialog'),\n    inputName = document.getElementById('inputName'),\n    selectDepartment = document.getElementById('selectDepartment'),\n    selectDependency = document.getElementById('selectDependency'),\n    chkMilestone = document.getElementById('chkMilestone'),\n    isAddingTask = false;\n\n// Set to 00:00:00:000 today\ntoday.setUTCHours(0);\ntoday.setUTCMinutes(0);\ntoday.setUTCSeconds(0);\ntoday.setUTCMilliseconds(0);\ntoday = today.getTime();\n\n\n// Update disabled status of the remove button, depending on whether or not we\n// have any selected points.\nfunction updateRemoveButtonStatus() {\n    var chart = this.series.chart;\n    // Run in a timeout to allow the select to update\n    setTimeout(function () {\n        btnRemoveTask.disabled = !chart.getSelectedPoints().length ||\n            isAddingTask;\n    }, 10);\n}\n\n\n// Create the chart\nvar chart = Highcharts.ganttChart('container', {\n\n    chart: {\n        spacingLeft: 1\n    },\n\n    title: {\n        text: 'Interactive Gantt Chart'\n    },\n\n    subtitle: {\n        text: 'Drag and drop points to edit'\n    },\n\n    lang: {\n        accessibility: {\n            axis: {\n                xAxisDescriptionPlural: 'The chart has a two-part X axis showing time in both week numbers and days.'\n            }\n        }\n    },\n\n    accessibility: {\n        point: {\n            descriptionFormatter: function (point) {\n                return Highcharts.format(\n                    point.milestone ?\n                        '{point.name}, milestone for {point.yCategory} at {point.x:%Y-%m-%d}.' :\n                        '{point.name}, assigned to {point.yCategory} from {point.x:%Y-%m-%d} to {point.x2:%Y-%m-%d}.',\n                    { point }\n                );\n            }\n        }\n    },\n\n    plotOptions: {\n        series: {\n            animation: false, // Do not animate dependency connectors\n            dragDrop: {\n                draggableX: true,\n                draggableY: true,\n                dragMinY: 0,\n                dragMaxY: 2,\n                dragPrecisionX: day / 3 // Snap to eight hours\n            },\n            dataLabels: {\n                enabled: true,\n                format: '{point.name}',\n                style: {\n                    cursor: 'default',\n                    pointerEvents: 'none'\n                }\n            },\n            allowPointSelect: true,\n            point: {\n                events: {\n                    select: updateRemoveButtonStatus,\n                    unselect: updateRemoveButtonStatus,\n                    remove: updateRemoveButtonStatus\n                }\n            }\n        }\n    },\n\n    yAxis: {\n        type: 'category',\n        categories: ['Tech', 'Marketing', 'Sales'],\n        accessibility: {\n            description: 'Organization departments'\n        },\n        min: 0,\n        max: 2\n    },\n\n    xAxis: {\n        currentDateIndicator: true\n    },\n\n    tooltip: {\n        xDateFormat: '%a %b %d, %H:%M'\n    },\n\n    series: [{\n        name: 'Project 1',\n        data: [{\n            start: today + 2 * day,\n            end: today + day * 5,\n            name: 'Prototype',\n            id: 'prototype',\n            y: 0\n        },  {\n            start: today + day * 6,\n            name: 'Prototype done',\n            milestone: true,\n            dependency: 'prototype',\n            id: 'proto_done',\n            y: 0\n        }, {\n            start: today + day * 7,\n            end: today + day * 11,\n            name: 'Testing',\n            dependency: 'proto_done',\n            y: 0\n        }, {\n            start: today + day * 5,\n            end: today + day * 8,\n            name: 'Product pages',\n            y: 1\n        }, {\n            start: today + day * 9,\n            end: today + day * 10,\n            name: 'Newsletter',\n            y: 1\n        }, {\n            start: today + day * 9,\n            end: today + day * 11,\n            name: 'Licensing',\n            id: 'testing',\n            y: 2\n        }, {\n            start: today + day * 11.5,\n            end: today + day * 12.5,\n            name: 'Publish',\n            dependency: 'testing',\n            y: 2\n        }]\n    }]\n});\n\n\n/* Add button handlers for add/remove tasks */\n\nbtnRemoveTask.onclick = function () {\n    var points = chart.getSelectedPoints();\n    each(points, function (point) {\n        point.remove();\n    });\n};\n\nbtnShowDialog.onclick = function () {\n    // Update dependency list\n    var depInnerHTML = '<option value=\"\"></option>';\n    each(chart.series[0].points, function (point) {\n        depInnerHTML += '<option value=\"' + point.id + '\">' + point.name +\n            ' </option>';\n    });\n    selectDependency.innerHTML = depInnerHTML;\n\n    // Show dialog by removing \"hidden\" class\n    addTaskDialog.className = 'overlay';\n    isAddingTask = true;\n\n    // Focus name field\n    inputName.value = '';\n    inputName.focus();\n};\n\nbtnAddTask.onclick = function () {\n    // Get values from dialog\n    var series = chart.series[0],\n        name = inputName.value,\n        undef,\n        dependency = chart.get(\n            selectDependency.options[selectDependency.selectedIndex].value\n        ),\n        y = parseInt(\n            selectDepartment.options[selectDepartment.selectedIndex].value,\n            10\n        ),\n        maxEnd = reduce(series.points, function (acc, point) {\n            return point.y === y && point.end ? Math.max(acc, point.end) : acc;\n        }, 0),\n        milestone = chkMilestone.checked || undef;\n\n    // Empty category\n    if (maxEnd === 0) {\n        maxEnd = today;\n    }\n\n    // Add the point\n    series.addPoint({\n        start: maxEnd + (milestone ? day : 0),\n        end: milestone ? undef : maxEnd + day,\n        y: y,\n        name: name,\n        dependency: dependency ? dependency.id : undef,\n        milestone: milestone\n    });\n\n    // Hide dialog\n    addTaskDialog.className += ' hidden';\n    isAddingTask = false;\n};\n\nbtnCancelAddTask.onclick = function () {\n    // Hide dialog\n    addTaskDialog.className += ' hidden';\n    isAddingTask = false;\n};\n","css":"#container,\n#buttonGroup {\n    max-width: 1200px;\n    min-width: 320px;\n    margin: 1em auto;\n}\n\n.hidden {\n    display: none;\n}\n\n.main-container button {\n    font-size: 12px;\n    border-radius: 2px;\n    border: 0;\n    background-color: #ddd;\n    padding: 13px 18px;\n}\n\n.main-container button[disabled] {\n    color: silver;\n}\n\n.button-row button {\n    display: inline-block;\n    margin: 0;\n}\n\n.overlay {\n    position: fixed;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    background: rgba(0 0 0 / 30%);\n    transition: opacity 500ms;\n    z-index: 1;\n}\n\n.popup {\n    margin: 70px auto;\n    padding: 20px;\n    background: #fff;\n    border-radius: 5px;\n    width: 300px;\n    position: relative;\n}\n\n.popup input,\n.popup select {\n    width: 100%;\n    margin: 5px 0 15px;\n}\n\n.popup button {\n    float: right;\n    margin-left: 0.2em;\n}\n\n.popup .clear {\n    height: 50px;\n}\n\n.popup input[type=\"text\"],\n.popup select {\n    height: 2em;\n    font-size: 16px;\n}\n","html":"\n<div class=\"main-container\">\n    <div id=\"container\"></div>\n    <div id=\"buttonGroup\" class=\"button-row\">\n        <button id=\"btnShowDialog\">\n            <i class=\"fa fa-plus\"></i>\n            Add task\n        </button>\n        <button id=\"btnRemoveSelected\" disabled=\"disabled\">\n            <i class=\"fa fa-remove\"></i>\n            Remove selected\n        </button>\n    </div>\n\n    <div id=\"addTaskDialog\" class=\"hidden overlay\">\n        <div class=\"popup\">\n            <h3>Add task</h3>\n\n            <label>Task name <input id=\"inputName\" type=\"text\" /></label>\n\n            <label>Department\n                <select id=\"selectDepartment\">\n                    <option value=\"0\">Tech</option>\n                    <option value=\"1\">Marketing</option>\n                    <option value=\"2\">Sales</option>\n                </select>\n            </label>\n\n            <label>Dependency\n                <select id=\"selectDependency\">\n                    <!-- Filled in by Javascript -->\n                </select>\n            </label>\n\n            <label>\n                Milestone\n                <input id=\"chkMilestone\" type=\"checkbox\" />\n            </label>\n\n            <div class=\"button-row\">\n                <button id=\"btnAddTask\">Add</button>\n                <button id=\"btnCancelAddTask\">Cancel</button>\n            </div>\n            <div class=\"clear\"></div>\n        </div>\n    </div>\n</div>\n","npm":"// 安装\nnpm install highcharts@10.3.2 --save\n\n// import 模块 \nimport Highcharts      from 'highcharts/highcharts-gantt';\nimport DraggablePoints from 'highcharts/modules/draggable-points';\nimport Accessibility   from 'highcharts/modules/accessibility';\nimport HighchartsZh_CN from 'https://code.hcharts.cn/plugins/highcharts-zh_CN.js';\n\n// 初始化模块\nDraggablePoints(Highcharts);\nAccessibility(Highcharts);\nHighchartsZh_CN(Highcharts);\n","scripts":["https://code.hcharts.cn/gantt/10.3.2/highcharts-gantt.js","https://code.hcharts.cn/gantt/10.3.2/modules/draggable-points.js","https://code.hcharts.cn/gantt/10.3.2/modules/accessibility.js","https://code.hcharts.cn/plugins/highcharts-zh_CN.js"]}