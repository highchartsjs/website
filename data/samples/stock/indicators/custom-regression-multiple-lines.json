{"js":"function getLinearRegressionZones(xData, yData) {\n    var sumX = 0,\n        sumY = 0,\n        sumXY = 0,\n        sumX2 = 0,\n        linearData = [],\n        linearXData = [],\n        linearYData = [],\n        n = xData.length,\n        alpha, beta, i, x, y,\n        zoneDistance = this.options.params.zoneDistance / 100,\n        y1, y2, y3, y4;\n\n    // Get sums:\n    for (i = 0; i < n; i++) {\n        x = xData[i];\n        y = yData[i];\n        sumX += x;\n        sumY += y;\n        sumXY += x * y;\n        sumX2 += x * x;\n    }\n\n    // Get slope and offset:\n    alpha = (n * sumXY - sumX * sumY) / (n * sumX2 - sumX * sumX);\n    if (isNaN(alpha)) {\n        alpha = 0;\n    }\n    beta = (sumY - alpha * sumX) / n;\n\n    // Calculate linear regression:\n    for (i = 0; i < n; i++) {\n        x = xData[i];\n        y = alpha * x + beta;\n\n        y1 = y * (1 - 2 * zoneDistance);\n        y2 = y * (1 - zoneDistance);\n        y3 = y * (1 + zoneDistance);\n        y4 = y * (1 + 2 * zoneDistance);\n\n        // Prepare arrays required for getValues() method\n        linearData[i] = [x, y1, y2, y, y3, y4];\n        linearXData[i] = x;\n        linearYData[i] = [y1, y2, y, y3, y4];\n    }\n\n    return {\n        xData: linearXData,\n        yData: linearYData,\n        values: linearData\n    };\n}\n\nHighcharts.seriesType(\n    'linearregressionzones',\n    'sma',\n    {\n        color: '#00ff00',\n        params: {\n            zoneDistance: 3\n        },\n        tooltip: {\n            pointFormat: '<span style=\"color:{point.color}\">\\u25CF</span> {series.name}:<br/>' +\n                '110%: <b>{point.y4}</b><br/>' +\n                '105%: <b>{point.y3}</b><br/>' +\n                '100%: <b>{point.y}</b><br/>' +\n                '95%: <b>{point.y2}</b><br/>' +\n                '90%: <b>{point.y1}</b>'\n        },\n        closeRangeBottomLine: {\n            styles: {\n                lineWidth: 1,\n                lineColor: '#ffa500'\n            }\n        },\n        highRangeBottomLine: {\n            styles: {\n                lineWidth: 1,\n                lineColor: '#ff0000'\n            }\n        },\n        closeRangeTopLine: {\n            styles: {\n                lineWidth: 1,\n                lineColor: '#ffa500'\n            }\n        },\n        highRangeTopLine: {\n            styles: {\n                lineWidth: 1,\n                lineColor: '#ff0000'\n            }\n        }\n    },\n    {\n        getValues: function (series) {\n            return this.getLinearRegressionZones(series.xData, series.yData);\n        },\n        getLinearRegressionZones: getLinearRegressionZones,\n\n        linesApiNames: ['highRangeBottomLine', 'closeRangeBottomLine', 'closeRangeTopLine', 'highRangeTopLine'],\n        nameBase: 'Linear regression zones',\n        nameComponents: ['zoneDistance'],\n        nameSuffixes: ['%'],\n        parallelArrays: ['x', 'y', 'y1', 'y2', 'y3', 'y4'],\n        pointArrayMap: ['y1', 'y2', 'y', 'y3', 'y4'],\n        pointValKey: 'y'\n    }\n);\n\n/* eslint-disable no-underscore-dangle */\nvar multipleLinesMixin = Highcharts._modules['Mixins/MultipleLines.js'];\n\nif (multipleLinesMixin) {\n    Highcharts.extend(\n        Highcharts.Series.types.linearregressionzones.prototype,\n        {\n            drawGraph: multipleLinesMixin.drawGraph,\n            getTranslatedLinesNames: multipleLinesMixin.getTranslatedLinesNames,\n            translate: multipleLinesMixin.translate,\n            toYData: multipleLinesMixin.toYData\n        }\n    );\n} else { // Highcharts v9.2.3+\n    Highcharts._modules['Stock/Indicators/MultipleLinesComposition.js'].compose(\n        Highcharts.Series.types.linearregressionzones\n    );\n}\n/* eslint-enable no-underscore-dangle */\n\nHighcharts.getJSON('https://demo-live-data.highcharts.com/aapl-c.json', function (data) {\n    Highcharts.stockChart('container', {\n\n        rangeSelector: {\n            selected: 2\n        },\n\n        title: {\n            text: 'AAPL Stock Price with Linear Regression zones'\n        },\n\n        legend: {\n            enabled: true\n        },\n\n        plotOptions: {\n            series: {\n                showInLegend: true\n            }\n        },\n\n        series: [{\n            id: 'aapl',\n            name: 'AAPL Stock Price',\n            data: data\n        }, {\n            type: 'linearregressionzones',\n            linkedTo: 'aapl'\n        }]\n\n    });\n});\n","css":"#container {\n    height: 400px;\n    min-width: 310px;\n}\n","html":"\n<div id=\"container\"></div>","npm":"// 安装\nnpm install highcharts@11.0.1 --save\n\n// import 模块 \nimport Highcharts     from 'highcharts/highstock';\nimport Data           from 'highcharts/modules/data';\nimport Exporting      from 'highcharts/modules/exporting';\nimport Indicators     from 'highcharts/indicators/indicators';\nimport BollingerBands from 'highcharts/indicators/bollinger-bands';\n\n// 初始化模块\nData(Highcharts);\nExporting(Highcharts);\nIndicators(Highcharts);\nBollingerBands(Highcharts);\n","scripts":["https://code.highcharts.com/stock/11.0.1/highstock.js","https://code.highcharts.com/stock/11.0.1/modules/data.js","https://code.highcharts.com/stock/11.0.1/modules/exporting.js","https://code.highcharts.com/stock/11.0.1/indicators/indicators.js","https://code.highcharts.com/stock/11.0.1/indicators/bollinger-bands.js"]}